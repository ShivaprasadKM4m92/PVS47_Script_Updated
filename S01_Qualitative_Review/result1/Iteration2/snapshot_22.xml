<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="22">
  <HTTPTask id="178" hostname="10.100.22.24:8181" path="/signal/singleCaseAlert/listByExecutedConfig/15?cumulative=false&amp;adhocRun=false&amp;dashboardFilter=&amp;tagName=&amp;isFilterRequest=false&amp;filters=[]" url="http://10.100.22.24:8181/signal/singleCaseAlert/listByExecutedConfig/15?cumulative=false&amp;adhocRun=false&amp;dashboardFilter=&amp;tagName=&amp;isFilterRequest=false&amp;filters=[]" ip="10.100.22.24" port="8181" client_ip="172.28.2.28" client_port="3603" connectionId="2312" origin="Primary" encodingType="UTF8" startDateTime="2020-05-27T15:57:21.433+05:30" startTime="69088" endTime="72256" blockedTime="-1" dnsTime="-1" connectTime="-2" sendTime="377" waitTime="179" receiveTime="2589" sslNegotiateTime="-1" responseBodySize="176069">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>Y3VtdWxhdGl2ZT1mYWxzZSZhZGhvY1J1bj1mYWxzZSZkYXNoYm9hcmRGaWx0ZXI9JnRhZ05hbWU9JmlzRmlsdGVyUmVxdWVzdD1mYWxzZSZmaWx0ZXJzPVtd</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="cumulative" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="adhocRun" index="1">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="dashboardFilter" index="2">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="tagName" index="3">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData />
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="isFilterRequest" index="4">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>ZmFsc2U=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
      <HTTPHeaderEntity name="filters" index="5">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>W10=</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="POST">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Content-Type" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVk</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cDovLzEwLjEwMC4yMi4yNDo4MTgxL3NpZ25hbC9zaW5nbGVDYXNlQWxlcnQvZGV0YWlscz9jYWxsaW5nU2NyZWVuPXJldmlldyZjb25maWdJZD0xNQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-CSRF-TOKEN" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MWQxZjc3N2UtNjQzYi00MmQyLWFjNGEtMjE4Mjc0NmUxMGVm</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW4tVVMsZW47cT0wLjk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9odG1sLGFwcGxpY2F0aW9uL3hodG1sK3htbCxhcHBsaWNhdGlvbi94bWw7cT0wLjksaW1hZ2Uvd2VicCxpbWFnZS9hcG5nLCovKjtxPTAuOCxhcHBsaWNhdGlvbi9zaWduZWQtZXhjaGFuZ2U7dj1iMztxPTAuOQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>S2VlcC1BbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTAuMTAwLjIyLjI0OjgxODE=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0VTU0lPTj03YzEzZTY1My05YTM4LTRiOGEtYmU4OS1mNjcyZDMxNjUwYTA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ODMxNw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>UE9TVCAvc2lnbmFsL3NpbmdsZUNhc2VBbGVydC9saXN0QnlFeGVjdXRlZENvbmZpZy8xNT9jdW11bGF0aXZlPWZhbHNlJmFkaG9jUnVuPWZhbHNlJmRhc2hib2FyZEZpbHRlcj0mdGFnTmFtZT0maXNGaWx0ZXJSZXF1ZXN0PWZhbHNlJmZpbHRlcnM9W10gSFRUUC8xLjENCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkDQpSZWZlcmVyOiBodHRwOi8vMTAuMTAwLjIyLjI0OjgxODEvc2lnbmFsL3NpbmdsZUNhc2VBbGVydC9kZXRhaWxzP2NhbGxpbmdTY3JlZW49cmV2aWV3JmNvbmZpZ0lkPTE1DQpYLUNTUkYtVE9LRU46IDFkMWY3NzdlLTY0M2ItNDJkMi1hYzRhLTIxODI3NDZlMTBlZg0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzgxLjAuNDA0NC4xMzggU2FmYXJpLzUzNy4zNg0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlDQpBY2NlcHQtTGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45DQpBY2NlcHQ6IHRleHQvaHRtbCxhcHBsaWNhdGlvbi94aHRtbCt4bWwsYXBwbGljYXRpb24veG1sO3E9MC45LGltYWdlL3dlYnAsaW1hZ2UvYXBuZywqLyo7cT0wLjgsYXBwbGljYXRpb24vc2lnbmVkLWV4Y2hhbmdlO3Y9YjM7cT0wLjkNCkNvbm5lY3Rpb246IEtlZXAtQWxpdmUNCkhvc3Q6IDEwLjEwMC4yMi4yNDo4MTgxDQpDb29raWU6IFNFU1NJT049N2MxM2U2NTMtOWEzOC00YjhhLWJlODktZjY3MmQzMTY1MGEwDQpDb250ZW50LUxlbmd0aDogODMxNw0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="SESSION" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>N2MxM2U2NTMtOWEzOC00YjhhLWJlODktZjY3MmQzMTY1MGEw</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-Frame-Options" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>REVOWQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Application-Context" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb246cHJvZHVjdGlvbjo3MTcx</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGUsIG5vLXN0b3Jl</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Pragma" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY2FjaGU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PVVURi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAyNyBNYXkgMjAyMCAxMDoyNzoxOSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIA0KWC1GcmFtZS1PcHRpb25zOiBERU5ZDQpYLUFwcGxpY2F0aW9uLUNvbnRleHQ6IGFwcGxpY2F0aW9uOnByb2R1Y3Rpb246NzE3MQ0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG5vLXN0b3JlDQpQcmFnbWE6IG5vLWNhY2hlDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD1VVEYtOA0KVHJhbnNmZXItRW5jb2Rpbmc6IGNodW5rZWQNCkRhdGU6IFdlZCwgMjcgTWF5IDIwMjAgMTA6Mjc6MTkgR01UDQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="4">
            <ActualData>eyJyZWNvcmRzVG90YWwiOjE4NCwicmVjb3Jkc0ZpbHRlcmVkIjoxODQsImFhRGF0YSI6W3siYWxlcnRDb25maWdJZCI6MTIsImlkIjoxODQsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6Ijk5MDg5MzE0IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6ImNhc3BvZnVuZ2luIGFjZXRhdGUiLCJwcm9kdWN0SWQiOjEwMDAwNiwicHQiOiJWZW50cmljdWxhciBhcnJoeXRobWlhIiwicHJvZHVjdEZhbWlseSI6IjA5OTEgSW5qZWN0aW9uIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiUmVwb3J0IEZyb20gU3R1ZHkiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMTk5OS0wOC0yNVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBWZW50cmljdWxhciBhcnJoeXRobWlhXHJcbjIpIENhcmRpYWMgZmFpbHVyZSBjb25nZXN0aXZlIiwiYXNzZXNzT3V0Y29tZSI6IkZhdGFsIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiVmVudHJpY3VsYXIgYXJyaHl0aG1pYSIsIm91dGNvbWUiOiJGYXRhbCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJDT0xPTUJJQSIsInN1c3BQcm9kIjoiY2FzcG9mdW5naW4gYWNldGF0ZSIsImNvbkNvbWl0IjoiZnVyb3NlbWlkZVxyXG5pc29waGFuZSBpbnN1bGluIHN1c3BlbnNpb25cclxudHJpbWV0YXppZGluZSBkaWh5ZHJvY2hsb3JpZGVcclxud2FyZmFyaW4gc29kaXVtXHJcbmxvc2FydGFuIHBvdGFzc2l1bVxyXG4oYmV0YSktbWV0aHlsZGlnb3hpblxyXG5pc29zb3JiaWRlIGRpbml0cmF0ZVxyXG5iZW5kcm9mbHVtZXRoaWF6aWRlXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuUGxhY2VibyIsImdlbmRlciI6Ik1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6IlllcyIsImNhc2VWZXJzaW9uIjoyLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjUsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjI2NyIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBjb25jZXJuaW5nIGEgNTYgeWVhciBvbGQgbWFsZSB3aXRoIHNldmVyZSBoZWFydCBmYWlsdXJlLGlzY2hlbWljIGFuZCBlbWJvbGlzbSxwdWxtb25hcnkgYW5kIGRpYWJldGVzIG1lbGxpdHVzICgxOTg1KSwgcG5ldW1vbmlhIGFuZCBoeXBlcnRlbnNpb24sYXJ0ZXJpYWwgd2hvIGVudGVyZWQgYSBtdWx0aWNlbnRlciwgZG91YmxlLWJsaW5kLCByYW5kb21pemVkLCBjb21wYXJhdGl2ZSBzdHVkeSB0byBldmFsdWF0ZSB0aGUgc2FmZXR5LCB0b2xlcmFiaWxpdHksIGFuZCBlZmZpY2FjeSBvZiBtay0wOTkxIHZzIGFtcGhvdGVyaWNpbiBiIGluIHRoZSB0cmVhdG1lbnQgb2YgaW52YXNpdmUgY2FuZGlkaWFzaXMgaW4gYWR1bHRzLiBPbiAzMS1KVUwtMTk5OSBwYXRpZW50IHdhcyBhZGRtaXRlZCBpbiBob3NwaXRhbCB3aXRoIGhlYXJ0IGZhaWx1cmUgYW5kIHdhcyBob3NwaXRhbGl6ZWQgaW4gdGhlIGludGVuc2l2ZSBjYXJlIHVuaXQuIFRoZXJlLCBoZSByZWNlaXZlZCBtdWx0aXBsZSB0cmVhdG1lbnRzIGluY2x1ZGluZyBhbnRpY29hZ3VsYXRpb24gZHJ1Z3MsIGFudGliaW90aWNzLCBhbnRpaHlwZXJ0ZW5zaXZlIGRydWdzLiBEdXJpbmcgdGhpcyBwZXJpb2Qgb2YgdGltZSBoZSBwcmVzZW50ZWQgYnJvbmNob3BuZXVtb25pYSBiaWxhdGVyYWwsIHBsZXVyYWwgZWZmdXNpb24gaHlwZXJ0ZW5zaW9uLCBwdWxtb25hcnksIGNvciBwdWxtb25hcnksIGdhc3Ryb2ludGVzdGluYWwgZGlzb3JkZXJzLCBkZXByZXNzaW9uLCBoeXBvbmF0cmVtaWEgYW5kIGludmFzaXZlIGNhbmRpZGEgKHBvc2l0aXZlIGhlbW9jdWx0dXJlIGFuZCB1cmluYXJ5IGN1bHR1cmUgZm9yIGNhbmRpZGEgYWxiaWNhbnMgb24gMjAtQVVHLTE5OTkpLiBPbiAyMS1BVUctMTk5OSB0aGUgcGF0aWVudCB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCBtay05OTEgb3IgY29udHJvbCwgaW5qLiBIZSBoYWQgZ29vZCB0b2xlcmFuY2UgYnkgMyAgZGF5cy4gSW4gZGF5IDQgYmVmb3JlIHRoZSBkcnVnIGFwcGxpY2F0aW9uIGhlIHByZXNlbnRlZCBzdWRkZW4gaHlwb3RlbnNpb24gZGlzY29tZm9ydCwgd2Vha25lc3MgYW5kIHZlbmlwdWN0aW9uIGFyZWEgYmVjYW1lIHZlcnkgcmVkLiBBdCAxMCBhbSBhIEVDRyB3YXMgdGFrZW4uIEl0IGRpZCBub3Qgc2hvdyBhbnkgc2lnbmlmaWNhbnQgY2hhbmdlcy4gVGhlIHRoZXJhcHkgd2l0aCBNSy05OTEgb3IgY29udHJvbCB3YXMgZGlzY29udGludWVkIGFueXdheS4gQXQgMTo0NSBwbSBwYXRpZW50IHByZXNlbnRlZCByZXNwaXJhdG9yeSBkaWZmaWN1bHRpZXMsIHJhbGVzLCB3aGVlemluZyBhbmQgdmVudHJpY3VsYXIgZmlicmlsbGF0aW9uLiBSZXN1Y2l0YXRpb24gbWFuZXV2ZXIgd2VyZSBkb2luZyBkdXJpbmc0MCBtaW51dGVzIGJ1dCBwYXRpZW50IGRpZWQuIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgZnVyb3NlbWlkZSwgaXNvcGhhbmUgaW5zdWxpbiBzdXNwZW5zaW9uLCB0cmltZXRhemlkaW5lIGRpaHlkcm9jaGxvcmlkZSwgd2FyZmFyaW4gc29kaXVtLCBsb3NhcnRhbiBwb3Rhc2l1bSAoTVNEKSwgKGJldGEpLW1ldGh5bGRpZ294aW4sIGlzb3NvcmJpZGUgZGluaXRyYXRlLCBiZW5kcm9mbHVtZXRoaWF6aWRlIGFuZCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLiBUaGUgY2F1c2Ugb2YgZGVhdGggd2FzIHZlbnRyaWN1bGFyIGZpYnJpbGxhdGlvbiBhbmQgaGVhcnQgZmFpbHVyZSxpc2NoZW1pYy4gVGhlIHJlcG9ydGluZyBwaHlzaWNpYW4gZmVsdCB0aGF0IHZlbnRyaWN1bGFyIGZpYnJpbGxhdGlvbiBhbmQgaXNjaGVtaWMgaGVhcnQgZmFpbHVyZSB3ZXJlIG5vdCByZWxhdGVkIHRvIHRoZXJhcHkgd2l0aCBtay05OTEgb3IgY29udHJvbC4gQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBpcyBub3QgZXhwZWN0ZWQuXHJcblxyXG5UaGlzIGlzIGEgY29ycmVjdGVkIHJlcG9ydDogTGFzdCBkYXkgb2YgSVYgdHJlYXRtZW50IDIzQVVHMTk5OSAoaW5zdGVhZCBvZiAgMjRBVUcxOTk5KS4gVXJpbmUgY3VsdHVyZSB3YXMgZG9uZSBvbiAxM0FVRzE5OTkgKGluc3RlYWQgb2YgMjBBVUcxOTk5KS4gVGhlIEFFIHZlbnRyaWN1bGFyIGZpYnJpbGF0aW9uIHdhcyBhbHNvIGxpZmUgdGhyZWF0ZW5pbmcuXHJcblxyXG5UaGlzIGlzIGEgY29ycmVjdGVkIHJlcG9ydDogVGhlIGNvcnJlY3QgQUUgdGVybSBpcyB2ZW50cmljdWxhciBhcnJoeXRobWlhIChpbnN0ZWFkIG9mIHZlbnRyaWN1bGFyIGZpYnJpbGxhdGlvbilcclxuXHJcblRoZSByZWNvcmQgZm9yIHRoaXMgcGF0aWVudCB3YXMgdW5ibGluZGVkIG9uIDE2Tk9WMjAwMS4gVGhlIHBhdGllbnQgd2FzIHRyZWF0ZWQgd2l0aCBNSyA5OTEsIDcwTUcvRCBmb3Igb25lIGRheSBhbmQgNTAgTUcvRCB0aGVyZWFmdGVyLiIsImNvbk1lZHMiOiJmdXJvc2VtaWRlXHJcbmlzb3BoYW5lIGluc3VsaW4gc3VzcGVuc2lvblxyXG50cmltZXRhemlkaW5lIGRpaHlkcm9jaGxvcmlkZVxyXG53YXJmYXJpbiBzb2RpdW1cclxubG9zYXJ0YW4gcG90YXNzaXVtXHJcbihiZXRhKS1tZXRoeWxkaWdveGluXHJcbmlzb3NvcmJpZGUgZGluaXRyYXRlXHJcbmJlbmRyb2ZsdW1ldGhpYXppZGVcclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5QbGFjZWJvIiwicHRMaXN0IjoiVmVudHJpY3VsYXIgYXJyaHl0aG1pYSAoUHJpbWFyeSkhQCMjQCFDYXJkaWFjIGZhaWx1cmUgY29uZ2VzdGl2ZSIsImNhc2VJZCI6MTAzMjcwMSwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOiJDb21tZW50c0ZpZWxkXzIyLTA1LTIwMjAgMTg6MTY6MjciLCJpc0F0dGFjaG1lbnQiOnRydWUsImdsb2JhbElkIjoxMDk3MSwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6ImNhc3BvZnVuZ2luIGFjZXRhdGUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxODMsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6Ijk4MTI5MTA4IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IjxVTkNPREVEPiIsInByb2R1Y3RJZCI6MCwicHQiOiJIZXBhdGl0aXMgY2hvbGVzdGF0aWMiLCJwcm9kdWN0RmFtaWx5IjoidW5kZWZpbmVkIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMTk5OC0xMi0wOVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBIZXBhdGl0aXMgY2hvbGVzdGF0aWMiLCJhc3Nlc3NPdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiSGVwYXRpdGlzIGNob2xlc3RhdGljIiwib3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJTUEFJTiIsInN1c3BQcm9kIjoiQ0VGT1hJVElOL0xJRE9DQUlORSxGRU5UQU5ZTCBDSVRSQVRFLERST1BFUklET0wsVFJBTUFET0wgSFlEUk9DSExPUklERSxORVRJTE1JQ0lOIFNVTEZBVEUsRVRPTUlEQVRFLGtldG9yb2xhYyxBTU9YSUNJTExJTiAoKykgQ0xBVlVMQU5BVEUgUE9UQVNTSVVNIiwiY29uQ29taXQiOiJhbW94aWNpbGxpbiAoKykgY2xhdnVsYW5hdGUgcG90YXNzaXVtIiwiZ2VuZGVyIjoiTWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MSwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjoxLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNjYiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgY29uY2VybmluZyBhIDY2IHllYXIgb2xkIG1hbGUgd2hvIG9uIDIyLVNFUC05OCB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCBjZWZveGl0aW4vbGlkb2NhaW5lLCBpbmosIDEgZ20gZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc3VyZ2VyeSxiaWxpYXJ5LiAgQ29uY29taXRhbnQgdGhlcmFweSBpbmNsdWRlZCBhbW94aWNpbGxpbi9jbGF2dWxhbmF0ZSBrLCBpbmosIDQwMDAvODAwIG1nLCBkYWlseSAoc2luY2UgMjQtU0VQLTk4IHRvIDAxLU9DVC05OCkgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc3VyZ2VyeSxiaWxpYXJ5IGFuZCBuZXRpbG1pY2luLCBpbmosIDIwMCBtZywgZGFpbHkgKHNpbmNlIDIyLVNFUC05OCB0byAyNS1TRVAtOTgpIGZvciB0aGUgdHJlYXRtZW50IG9mIHN1cmdlcnksYmlsaWFyeSBhbmQgZmVudGFueWwgY2l0cmF0ZSwgaW5qIChzaW5jZSAwMS1PQ1QtOTggdG8gMDEtT0NULTk4KSBmb3IgdGhlIHRyZWF0bWVudCBvZiBzdXJnZXJ5LGJpbGlhcnkgKGRvc2UgdW5rbm93bikgYW5kIGRyb3Blcmlkb2wsIGluaiwgMi41IG1nIGRhaWx5IChzaW5jZSAwMS1PQ1QtOTggdG8gMDEtT0NULTk4KSBmb3IgdGhlIHRyZWF0bWVudCBvZiBzdXJnZXJ5LGJpbGlhcnkgYW5kIGV0b21pZGF0ZSwgaW5qLCAyMCBtZyAoc2luY2UgMDEtT0NULTk4IHRvIDAxLU9DVC05OClmb3IgdGhlIHRyZWF0bWVudCBvZiBzdXJnZXJ5LGJpbGlhcnkgYW5kIGtldG9yb2xhYywgaW5qLCAzMCBtZyBkYWlseSAoc2luY2UgMDEtT0NULTk4IHRvIDA2LU9DVC05OCkgZm9yIHRoZSB0cmVhdG1lbnQgb2Ygc3VyZ2VyeSxiaWxpYXJ5IGFuZCB0cmFtYWRvbCwgaW5qLCAxMDAgbWcgKHNpbmNlIDAxLU9DVC05OCB0byAwMS1PQ1QtOTgpIGZvciB0aGUgdHJlYXRtZW50IG9mIHN1cmdlcnksYmlsaWFyeS4gIE90aGVyIGNvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgYW1veGljaWxsaW4vY2xhdnVsYW5hdGUgay4gIE9uIDA4LU9DVC05OCB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBjaG9sZXN0YXRpYyBoZXBhdGl0aXMgaG9zcGl0YWxpemF0aW9uIHdhcyBwcm9sb25nZWQuIE9uIDIyLVNFUC05OCB0aGVyYXB5IHdpdGggY2Vmb3hpdGluL2xpZG9jYWluZSB3YXMgZGlzY29udGludWVkLiAgU3Vic2VxdWVudGx5LCBvbiAxNi1PQ1QtOTgsIHRoZSBwYXRpZW50IHJlY292ZXJlZCBmcm9tIGNob2xlc3RhdGljIGhlcGF0aXRpcy4gIFRoZSByZXBvcnRpbmcgcGh5c2ljaWFuIGZlbHQgdGhhdCBjaG9sZXN0YXRpYyBoZXBhdGl0aXMgd2FzIHJlbGF0ZWQgdG8gdGhlcmFweSB3aXRoIGNlZm94aXRpbi9saWRvY2FpbmUsIGFtb3hpY2lsbGluL2NsYXZ1bGFuYXRlIGssIG5ldGlsbWljaW4sIGZlbnRhbnlsIGNpdHJhdGUsIGRyb3Blcmlkb2wsIGV0b21pZGF0ZSwga2V0b3JvbGFjIGFuZCB0cmFtYWRvbCAuICBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIGlzIG5vdCBleHBlY3RlZC4iLCJjb25NZWRzIjoiYW1veGljaWxsaW4gKCspIGNsYXZ1bGFuYXRlIHBvdGFzc2l1bSIsInB0TGlzdCI6IkhlcGF0aXRpcyBjaG9sZXN0YXRpYyAoUHJpbWFyeSkiLCJjYXNlSWQiOjEwOTY5NTIsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NzAsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJDRUZPWElUSU4vTElET0NBSU5FLEZFTlRBTllMIENJVFJBVEUsRFJPUEVSSURPTCxUUkFNQURPTCBIWURST0NITE9SSURFLE5FVElMTUlDSU4gU1VMRkFURSxFVE9NSURBVEUsa2V0b3JvbGFjLEFNT1hJQ0lMTElOICgrKSBDTEFWVUxBTkFURSBQT1RBU1NJVU0iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxODIsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6Ijk2MDM1NTU0IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IklNSVBFTkVNICgrKSBDSUxBU1RBVElOIFNPRElVTSIsInByb2R1Y3RJZCI6MTAxMDE5LCJwdCI6IkNvbmZ1c2lvbmFsIHN0YXRlIiwicHJvZHVjdEZhbWlseSI6IjA3ODdCIElOSkVDVElPTiIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjE5OTYtMDMtMTRUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6IlllcyIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgQ29uZnVzaW9uYWwgc3RhdGUiLCJhc3Nlc3NPdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiTm9uLVNlcmlvdXMiLCJzZXJpb3VzIjoiTm9uLVNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJDb25mdXNpb25hbCBzdGF0ZSIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiR0VSTUFOWSIsInN1c3BQcm9kIjoiSU1JUEVORU0gKCspIENJTEFTVEFUSU4gU09ESVVNIiwiY29uQ29taXQiOiJwcm9jYWluZSBoeWRyb2NobG9yaWRlXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxub21lcHJhem9sZVxyXG5mdXJvc2VtaWRlIiwiZ2VuZGVyIjoiTWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MSwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNjUiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgY29uY2VybmluZyBhIDQxLXllYXItb2xkIG1hbGUgd2l0aCBnYXN0cmljIHVsY2VyIHdobywgb24gMDYtRkVCLTk2LCB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCBpbWlwZW5lbS1jaWxhc3RhdGluIHNvZGl1bSwgaW5qLCAxMDAwIG1nLCB0aHJlZSB0aW1lcyBhIGRheSBmb3IgdGhlIHRyZWF0bWVudCBvZiBuZWNyb3RpemluZyBwYW5jcmVhdGl0aXMuIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgcHJvY2FpbmUgaHlkcm9jaGxvcmlkZSAobm90IG91ciBkcnVnKSwgaW5qIChkb3NlIGFuZCBpbmRpY2F0aW9uIHVua25vd24pIGFuZCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIChub3Qgb3VyIGRydWcpLCBpbmogKGRvc2UgYW5kIGluZGljYXRpb24gdW5rbm93bikuIE90aGVyIGNvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgb21lcHJhem9sZSBhbmQgZnVyb3NlbWlkZS4gVGhlIHNhbWUgZGF5LCB0aGUgcGF0aWVudCBmZWxsIGludG8gYWN1dGUgY29uZnVzaW9uYWwgc3RhdGUuIFRoZSBkb3NhZ2Ugb2YgaW1pcGVuZW0tY2lsYXN0YXRpbiBzb2RpdW0gd2FzIHJlZHVjZWQgKGRvc2FnZSBub3QgcmVwb3J0ZWQpLiBPbiAwNy1GRUItOTYsIHRoZSBwYXRpZW50IHJlY292ZXJlZCBmcm9tIGFjdXRlIGNvbmZ1c2lvbmFsIHN0YXRlIGFuZCB0aGVyYXB5IHdpdGggaW1pcGVuZW0tY2lsYXN0YXRpbiBzb2RpdW0gd2FzIGRpc2NvbnRpbnVlZCAocmVhc29uIG5vdCByZXBvcnRlZCkuIFRoZSByZXBvcnRpbmcgcGh5c2ljaWFuIGZlbHQgdGhhdCBhY3V0ZSBjb25mdXNpb25hbCBzdGF0ZSB3YXMgcG9zc2libHkgcmVsYXRlZCB0byB0aGVyYXB5IHdpdGggaW1pcGVuZW0tY2lsYXN0YXRpbiBzb2RpdW0gb3IgdG8gdGhlcmFweSB3aXRoIHByb2NhaW5lIGh5ZHJvY2hsb3JpZGUgYW5kIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUuIEFkZGl0aW9uYWwgaW5mb3JtYXRpb24gaXMgbm90IGV4cGVjdGVkLiIsImNvbk1lZHMiOiJwcm9jYWluZSBoeWRyb2NobG9yaWRlXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxub21lcHJhem9sZVxyXG5mdXJvc2VtaWRlIiwicHRMaXN0IjoiQ29uZnVzaW9uYWwgc3RhdGUgKFByaW1hcnkpIiwiY2FzZUlkIjo4MTAxMjEsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NjksImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJJTUlQRU5FTSAoKykgQ0lMQVNUQVRJTiBTT0RJVU0iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxODAsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjIwMDYtMDItMTAwOCIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJHRU5UQU1JQ0lOIFNVTEZBVEUiLCJwcm9kdWN0SWQiOjEwMjEzMSwicHQiOiJIeXBvYWN1c2lzIiwicHJvZHVjdEZhbWlseSI6Ijk0MjIgSU5KRUNUSU9OIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAwNi0wMi0xN1QwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgSHlwb2FjdXNpc1xyXG4yKSBCYWxhbmNlIGRpc29yZGVyXHJcbjMpIFZlcnRpZ29cclxuNCkgTmF1c2VhIiwiYXNzZXNzT3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiSHlwb2FjdXNpcyIsIm91dGNvbWUiOiJOb3QgUmVjb3ZlcmVkL05vdCBSZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJMaXN0ZWQiLCJjb3VudHJ5IjoiU1dFREVOIiwic3VzcFByb2QiOiJHRU5UQU1JQ0lOIFNVTEZBVEUiLCJjb25Db21pdCI6InNldmVsYW1lciBoeWRyb2NobG9yaWRlXHJcbmVwb2V0aW4gYWxmYVxyXG5mb2xpYyBhY2lkXHJcbmFjZXRhbWlub3BoZW5cclxudml0YW1pbiBCIGNvbXBsZXgsIGFzY29yYmljIGFjaWRcclxuZnVyb3NlbWlkZVxyXG50YW1veGlmZW4gY2l0cmF0ZVxyXG5hbGZhY2FsY2lkb2xcclxubGFjdHVsb3NlXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxub21lcHJhem9sZVxyXG5pcm9uICh1bnNwZWNpZmllZClcclxuYXRlbm9sb2wiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MiwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjYzIiwiY2FzZU5hcnJhdGl2ZSI6IkNvbXBhbnkgTmFycmF0aXZlOiBcbklOU1VSQU5DRSBDT01QQU5ZIFJFUE9SVCAoI1AwNi0wMDQ3MzUpOiBBIDcyLVlFQVItT0xEIEZFTUFMRSBQQVRJRU5UIFdJVEggQSBISVNUT1JZIE9GIENIUk9OSUMgUkVOQUwgRkFJTFVSRSwgSU5JVElBVEVEIEdBUkFNWUNJTiAoR0VOVEFNSUNJTiBTVUxGQVRFKSBGT1IgQU4gVU5LTk9XTiBJTkRJQ0FUSU9OIChET1NFIEFORCBUSEVSQVBZIERBVEVTIFVOS05PV04pLiBPTiAwNU1BWTA1LCBUSEUgUEFUSUVOVCBFWFBFUklFTkNFRCBWRVJUSUdPIEFORCBOQVVTRUEgRk9SIFRIRSBGSVJTVCBUSU1FLiBBUyBPRiAxN0ZFQjA2LCBUSEUgUEFUSUVOVCBPVVRDT01FIFdBUyBVTktOT1dOLiBOTyBGVVJUSEVSIElORk9STUFUSU9OIFdBUyBQUk9WSURFRC5cblxuVVBEQVRFICgyOU1BUjA2KTogUEVSIEZPTExPVyBVUCwgUkVQT1JUIFdBUyBSRUNFSVZFRCBGUk9NIFRIRSBTV0VESVNIIEhFQUxUSCBBVVRIT1JJVFkgKCMwNjA2NjEpLiAgQSA3MS1ZRUFSLU9MRCAoUFJFVklPVVNMWSBSRVBPUlRFRCBBUyA3MikgUEFUSUVOVCBXSVRIIENIUk9OSUMgVVJFTUlBIFJFUVVJUklORyBESUFMWVNJUyBUSEVSQVBZLCBJTklUSUFURUQgR0FSQU1ZQ0lOIDIgRyBRVyBJViBPTiAxNUFQUjA1IEZPUiBUSEUgVFJFQVRNRU5UIE9GIENBVEhFVEVSIElORkVDVElPTi4gT04gMDJNQVkgQkFMQU5DRSBESUZGSUNVTFRZIEFORCBIRUFSSU5HIElNUEFJUk1FTlQgQVBQRUFSRUQuIEdBUkFNWUNJTiBXQVMgV0lUSERSQVdOIE9OIDA1TUFZLiBUSEUgUEFUSUVOVCBXQVMgSU5WRVNUSUdBVEVEIEJZIFRIRSBORVVST0xPR1kgQ0xJTklDIEFORCBUSEUgRU5UIChFQVItTk9TRS1USFJPQVQpIENMSU5JQy4gVEhFUkUgV0FTIE5PIEFCTk9STUFMIEZJTkRJTkdTLiBBTiBBRFZFUlNFIERSVUcgUkVBQ1RJT04gV0FTIFNVU1BFQ1RFRC4gQVMgT0YgSkFOMDYsIFRIRSBTWU1QVE9NUyBSRU1BSU5FRC4gVEhFIFBBVElFTlQgSEFEIEJFRU4gVFJFQVRFRCBXSVRIIEdBUkFNWUNJTiBJTiBUSEUgUEFTVCBXSVRIT1VUIEFOWSBTWU1QVE9NUy4gVEhFIEhFQUxUSCBBVVRIT1JJVFkgQ09ERUQgQkFMQU5DRSBESUZGSUNVTFRZIEFORCBIRUFSSU5HIElNUEFJUkVEIEFORCBDT05TSURFUkVEIFRIRU0gU0VSSU9VUyBBTkQgUFJPQkFCTFkgUkVMQVRFRCBUTyBHQVJBTVlDSU4uIENPTkNPTUlUQU5UIE1FRElDQVRJT05TIFdFUkUgQURERUQuXG5cblVQREFURSAoMTlBUFIwNik6IFBFUiBGT0xMT1cgVVAsIFRIRSBIRUFMVEggQVVUSE9SSVRZIFBST1ZJREVEIERSVUcgTkFNRSAoQVRFTk9MT0wpIEZPUiBUSEUgRFJVRyBQUkVWSU9VU0xZIFJFUE9SVEVEIEFTIFVOS05PV04uIiwiY29uTWVkcyI6InNldmVsYW1lciBoeWRyb2NobG9yaWRlXHJcbmVwb2V0aW4gYWxmYVxyXG5mb2xpYyBhY2lkXHJcbmFjZXRhbWlub3BoZW5cclxudml0YW1pbiBCIGNvbXBsZXgsIGFzY29yYmljIGFjaWRcclxuZnVyb3NlbWlkZVxyXG50YW1veGlmZW4gY2l0cmF0ZVxyXG5hbGZhY2FsY2lkb2xcclxubGFjdHVsb3NlXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxub21lcHJhem9sZVxyXG5pcm9uICh1bnNwZWNpZmllZClcclxuYXRlbm9sb2wiLCJwdExpc3QiOiJIeXBvYWN1c2lzIChQcmltYXJ5KSFAIyNAIUJhbGFuY2UgZGlzb3JkZXIhQCMjQCFWZXJ0aWdvIUAjI0AhTmF1c2VhIiwiY2FzZUlkIjozNTA2MzUsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NjcsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJHRU5UQU1JQ0lOIFNVTEZBVEUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxODEsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjkzMDI1NTAxIiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IklNSVBFTkVNICgrKSBDSUxBU1RBVElOIFNPRElVTSIsInByb2R1Y3RJZCI6MTAxMDE5LCJwdCI6IlRveGljIGVwaWRlcm1hbCBuZWNyb2x5c2lzIiwicHJvZHVjdEZhbWlseSI6IjA3ODdCIElOSkVDVElPTiIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjE5OTMtMDEtMjlUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIFRveGljIGVwaWRlcm1hbCBuZWNyb2x5c2lzIiwiYXNzZXNzT3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiVG94aWMgZXBpZGVybWFsIG5lY3JvbHlzaXMiLCJvdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiR0VSTUFOWSIsInN1c3BQcm9kIjoiSU1JUEVORU0gKCspIENJTEFTVEFUSU4gU09ESVVNIiwiY29uQ29taXQiOiJIRVBBUklOIFNPRElVTSBJTkpFQ1RJT04gTElMTFlcclxuaW5zdWxpblxyXG5kaXB5cm9uZVxyXG5hbXBob3RlcmljaW4gQlxyXG5mbHVjeXRvc2luZVxyXG5hbWlrYWNpblxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbnByZWRuaXNvbmVcclxudHJpbWV0aG9wcmltXHJcbm1ldG9wcm9sb2wgdGFydHJhdGVcclxuYXphdGhpb3ByaW5lXHJcbnZpdGFtaW5zXHJcbmFtcGhvdGVyaWNpbiBCXHJcbnZhbmNvbXljaW5cclxuZG9wYW1pbmVcclxub21lcHJhem9sZVxyXG5taWRhem9sYW1cclxubnlzdGF0aW5cclxuYWNldHlsY3lzdGVpbmVcclxuZmVudGFueWxcclxuTUFHTkVTSVVNIiwiZ2VuZGVyIjoiRmVtYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiIiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjoyLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjI2MyIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBjb25jZXJuaW5nIGEgMzkteWVhci1vbGQgZmVtYWxlIHdpdGggbHVwdXMgZXJ5dGhlbWF0b2RlcyBhbmQgbGlnaHQgc2Vuc2l0aXZpdHkgd2hvLCBvbiAxNy1Ob3YtOTEsIHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIGltaXBlbmVtIGZvciB0aGUgdHJlYXRtZW50IG9mIG1lbmluZ29jb2NjYWwgc2Vwc2lzLiBDb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIGluc3VsaW4sIHByZWRuaXNvbmUsIGZlbnRhbnlsLCBtaWRhem9sYW0sIGFtaWthY2luIHAuby4sIGFjZXR5bCBjeXN0ZWluIGFuZCBueXN0YXRpbi4gT24gMTUtTm92LTkxIHRoZXJhcHkgd2l0aCBoZXBhcmluIHNvZGl1bSBzLmMuIGZvciB0aGUgcHJvcGh5bGF4aXMgb2YgdGhyb21ib3NpcywgdGhlcmFweSB3aXRoIGRvcGFtaW4gaS52LiBmb3IgdGhlIHRyZWF0bWVudCBvZiBoeXBlcnRlbnNpb24gYW5kIHRoZXJhcHkgd2l0aCBhbXBob3RlcmljaW4gaS52LiBmb3IgdGhlIHRyZWF0bWVudCBvZiBteWNvc2lzIHdhcyBpbml0aWF0ZWQuIE9uIDE3LU5vdi05MSBzaGUgd2FzIHBsYWNlZCBvbiB0aGVyYXB5IHdpdGggaW1pcGVuZW0gaS52LiBhbmQgdmFuY29teWNpbiBpLnYuIGJvdGggZm9yIHRyZWF0bWVudCBvZiBzZXBzaXMuIE9uIDE4LU5vdi05MSBzaGUgd2FzIHBsYWNlZCBvbiB0aGVyYXB5IHdpdGggZmx1Y3l0IG9zaW4gcC5vLiBmb3IgdHJlYXRtZW50IG9mIG15Y29zaXMuIE9uIDIwLU5vdi05MSB0aGUgcGF0aWVudCB3YXMgc2V0IG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBpLnYuIGFnYWluc3QgcGFpbiwgdml0YW1pbmUgbWl4dHVyZSBpLnYuIChBLCBCMSwgQjIsIEI2LCBCMTIsIEMsIEQzLCBFKSwgb21lcHJhem9sIGkudi4gKE5PRCkgZm9yIHRoZSBwcm9waHlsYXhpcyBvZiBzdHJlc3MgdWxjZXJhIGFuZCBmb3Igb25lIGRheSBzaGUgd2FzIHNldCBvbiB0aGVyYXB5IHdpdGggbWV0YW1pem9sIGkudi4gYWdhaW5zdCBwYWluLiBPbiAyMS1Ob3YtOTEgdGhlcmFweSB3aXRoIGRvcGFtaW4sIHRyYW1hZG9sIGFuZCBtaWRhem9sYW0gd2FzIGRpc2NvbnRpbnVlZCBhbmQgdGhlcmFweSB3aXRoIHByZWRuaXNvbmUgaS52LiBhbmQgYW1waG90ZXJpY2luIEIgcC5vLiBmb3IgdGhlIHRyZWF0bWVudCBvZiBteWNvc2lzIHdhcyBzdGFydGVkIGFuZCBvbmx5IGZvciBvbmUgZGF5IHNoZSB3YXMgc2V0IG9uIHRoZXJhcHkgd2l0aCBtYWduZXNpdW0gcC5vLi4gT24gdGhlIDIyLU5vdi05MSB0aGUgcGF0aWVudCB3YXMgdHJhbnNmZXJlZCB0byB0aGUgaW50ZW5zaXZlIGNhcmUgdW5pdC4gT24gMjMtTm92LTkxIHRoZXJhcHkgd2l0aCBvbWVwcmF6b2wgYW5kIGltaXBlbmVtIHdhcyBkaXNjb250aW51ZWQuIE9uIDI0LU5vdi05MSB0aGVyYXB5IHdpdGggIGZsdWN5dG9zaW4gd2FzIGRpc2NvbnRpbnVlZCBhbmQgdGhlcmFweSB3aXRoIG1ldG9wcm9sb2wgdGFydHJhdGUgcC5vLiB3YXMgaW5pdGlhdGVkLiBPbiAyNS1Ob3YtOTEgdGhlcmFweSB3aXRoIGFtcGhvdGVyaWNpbiB3YXMgZGlzY29udGludWVkLiBPbiAyNi1Ob3YtOTEgdGhlcmFweSB3aXRoIHRyaW1ldG9wcmltIGkudi4gZm9yIHRoZSB0cmVhdG1lbnQgb2YgbWVuaW5nb2NvY2NhbCBlbmNlcGhhbGl0aXMgd2FzIGluaXRpYXRlZC4gT24gMjctTm92LTkxIHRoZXJhcHkgd2l0aCB2aXRhbWluIG1peHR1cmUgd2FzIGRpc2NvbnRpbnVlZCBhbmQgdGhlcmFweSB3aXRoIGF6YXRoaW9wcmluIHAuby4gZm9yIHRoZXRyZWF0bWVudCBvZiBsdXB1cyBlcnl0aGVtYXRvZGVzIHdhcyBpbml0aWF0ZWQuIE9uIDI4LU5vdi05MSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBhIFN0ZXZlbnMtSm9obnNvbiBzeW5kcm9tIHdoaWNoIHdvcnNlbmVkIHRvIGEgdG94aWMgZXBpZGVybWFsIG5lY3JvbHlzaXMuIFRoZXJhcHkgd2l0aCBhemF0aGlvcHJpbiB3YXMgZGlzY29udGludWVkIHRoZSBzYW1lIGRheS4gVGhlIHJlcG9ydGluZyBwaHlzaWNpYW4gZmVsdCB0aGF0IHRoZSB0b3hpYyBlcGlkZXJtYWwgbmVjcm9seXNpcyB3YXMgcG9zc2libHkgcmVsYXRlZCB0byBpbWlwZW5lbSBvciBmb2xsb3dpbmcgY29uY29taXRhbnQgdGhlcmFweTogbWV0IG9wcm9sb2wgdGFydHJhdGUsIGF6YXRoaW9wcmluZSwgbWlkYXpvbGFtLCBhbXBob3RlcmljaW4sIG9tZXByYXpvbCwgZG9wYW1pbiwgaGVwYXJpbiBzb2RpdW0sIHByZWRuaXNvbmUsIHZhbmNvbXljaW4sIGFtcGhvdGVyaWNpbiBCLCBhbWlrYWNpbiwgZmx1Y3l0b3NpbmUsIHZpdGFtaW4gbWl4dHVyZSwgdHJhbWFkb2wgSENsKTsgcHJvYmFibHkgcmVsYXRlZCB0byB0cmltZXRvcHJpbSBvciB0byBtZXRhbWl6b2wgYW5kIHByb2JhYmx5IG5vdCByZWxhdGVkIHRvIG55c3RhdGluLCBhY2V0eWwgY3lzdGVpbiwgYW1pa2FjaW4sIGZlbnRhbnlsIG9yIHByZWRuaXNvbmUuIEZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgbm90IGV4cGVjdGVkLiIsImNvbk1lZHMiOiJIRVBBUklOIFNPRElVTSBJTkpFQ1RJT04gTElMTFlcclxuaW5zdWxpblxyXG5kaXB5cm9uZVxyXG5hbXBob3RlcmljaW4gQlxyXG5mbHVjeXRvc2luZVxyXG5hbWlrYWNpblxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbnByZWRuaXNvbmVcclxudHJpbWV0aG9wcmltXHJcbm1ldG9wcm9sb2wgdGFydHJhdGVcclxuYXphdGhpb3ByaW5lXHJcbnZpdGFtaW5zXHJcbmFtcGhvdGVyaWNpbiBCXHJcbnZhbmNvbXljaW5cclxuZG9wYW1pbmVcclxub21lcHJhem9sZVxyXG5taWRhem9sYW1cclxubnlzdGF0aW5cclxuYWNldHlsY3lzdGVpbmVcclxuZmVudGFueWxcclxuTUFHTkVTSVVNIiwicHRMaXN0IjoiVG94aWMgZXBpZGVybWFsIG5lY3JvbHlzaXMgKFByaW1hcnkpIiwiY2FzZUlkIjoxODgxOTE0LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTY4LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiSU1JUEVORU0gKCspIENJTEFTVEFUSU4gU09ESVVNIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTc5LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIyMDA0LTA1LTA2NDQiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiUEVHSU5URVJGRVJPTiBBTEZBLTJCIiwicHJvZHVjdElkIjoxMDE0NTMsInB0IjoiSHlwZXJ0ZW5zaW9uIiwicHJvZHVjdEZhbWlseSI6IjQwMzEgSU5KRUNUSU9OIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiTGl0ZXJhdHVyZSBTdHVkeSIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDA0LTA1LTEzVDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiItIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBIeXBlcnRlbnNpb24iLCJhc3Nlc3NPdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJIeXBlcnRlbnNpb24iLCJvdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiU1dFREVOIiwic3VzcFByb2QiOiJQRUdJTlRFUkZFUk9OIEFMRkEtMkIiLCJjb25Db21pdCI6ImFjZXRhbWlub3BoZW5cclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5oeWRyb3h5dXJlYVxyXG53YXJmYXJpbiBzb2RpdW1cclxuYXNwaXJpblxyXG56b3BpY2xvbmVcclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5hbWl0cmlwdHlsaW5lIGh5ZHJvY2hsb3JpZGUiLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjozLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjUsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjI2MSIsImNhc2VOYXJyYXRpdmUiOiJDb21wYW55IE5hcnJhdGl2ZTogXG5IRUFMVEggQVVUSE9SSVRZIFJFUE9SVCAoU1dFREVOLCAjMDQxMTYzKTsgU1RVRFkgSTAzMy8wMTogXCJGRUFTSUJJTElUWSBBTkQgQklPTE9HSUNBTCBFRkZFQ1RTIE9GIFBFR1lMQVRFRCBJTlRFUkZFUk9OIEFMRkEtMkIgKFBFRy1JTlRST04pIFRSRUFUTUVOVCBJTiBQQVRJRU5UUyBXSVRIIFBPTFlDWVRIRU1JQSBWRVJBIEFORCBFU1NFTlRJQUwgVEhST01CT0NZVEhBRU1JQSAtIEEgUEhBU0UgSUkgVFJJQUwuXCIgQSA1MCBZRUFSIE9MRCBNQUxFIFBBVElFTlQgKCMgVVNPLTQpIElOSVRJQVRFRCBQRUctSU5UUk9OIDI1IE1DRy9XRUVLIFNDIE9OIDA1Tk9WMjAwMiBGT1IgUE9MWUNZVEhFTUlBIFZFUkEuIExBTlpPUFJBWk9MRSAzMCBNRyBRRCBXQVMgSU5JVElBVEVEIE9OIDA3QVBSMjAwMyBGT1IgR0FTVFJJVElTLiBBVCBBIFZJU0lUIE9OIDE0TUFZMjAwMywgVEhFIFBBVElFTlQgQ09NUExBSU5FRCBPRiBTRVZFUkUgRkFUSUdVRS4gQkxPT0QgVkFMVUVTIE9GIFRTSCBBTkQgVEhZUk9YSU4gV0VSRSBDSEVDS0VEIEJFQ0FVU0UgT0YgVEhFIEZBVElHVUUgQU5EIFdFUkUgRk9VTkQgVE8gQkUgV0lUSElOIE5PUk1BTCBWQUxVRVMgKFRTSCA9IDEuMCBNSVUvTCwgVEhZUk9YSU4gPSAxNi4xIFBNT0wvTCkuIFRIRSBQQVRJRU5UIEFMU08gQ09NUExBSU5FRCBPRiBIRUFEQUNIRSwgTVVTQ0xFIFBBSU4gQU5EIElOU09NTklBLiBUSEUgSU5WRVNUSUdBVE9SIENPTU1FTlRFRCBUSEFUIElUIFdBUyBESUZGSUNVTFQgVE8gSlVER0UgV0VUSEVSIFRIRVNFIFNZTVBUT01TIFdFUkUgUkVMQVRFRCBUTyBQRUctSU5UUk9OIEFTIFRIRSBQQVRJRU5UIFNVRkZFUkVEIEZST00gVEhFU0UgVFlQRSBPRiBTWU1QVE9NUyBBTFJFQURZIFBSSU9SIFRPIFNUVURZIFNUQVJULiBCTE9PRCBQUkVTU1VSRSBXQVMgMTUwLzEwMCBNTUhHIE9OIDIwQVVHMjAwMy4gUEVHLUlOVFJPTiBET1NFIFdBUyBHUkFEVUFMTFkgUkVEVUNFRCBPTiAyMEFVRzIwMDMgVE8gMjAgTUNHL1dFRUssIEFORCAxOU5PViBUTyAxNSBNQ0cvV0VFSy4gQVQgQSBWSVNJVCBPTiAwOU1BUjIwMDQsIFRIRSBQQVRJRU5UIFJFUE9SVEVEIFRIQVQgSElTIFdJRkUgSEFEIE5PVElDRUQgQSBORVZVUyBPTiBISVMgQkFDSywgV0hJQ0ggSEFEIENIQU5HRUQgQ09MT1IuIElUIFdBUyBBIERBUksgTkVWVVMsIDQtNSBNTSBJTiBESUFNRVRFUiwgQU5EIFNPTUUgQkxBQ0sgTElORVMgQ09VTEQgQkUgU0VFTiBPTiBJVC4gVEhFIFBBVElFTlQnUyBCTE9PRCBQUkVTU1VSRSBXQVMgU1RJTEwgRUxFVkFURUQsIDE1NS8xMDAgTU1IRy4gVEVOT1JNSU4gMjUgTUcgUUQsIFdBUyBTVEFSVEVELCBBTkQgUEVHLUlOVFJPTiBXQVMgUkVEVUNFRCBUTyAxMCBNQ0cvV0VFSyBUSEUgU0FNRSBEQVkuIElOIEVBUkxZIEpVTjIwMDQsIFRIRSBQQVRJRU5UIEVYUEVSSUVOQ0VEIFJBU0ggQU5EIFBSVVJJVFVTIEFMTCBPVkVSIEhJUyBCT0RZLiBUSEUgUEFUSUVOVCBXQVMgUFJFU0NSSUJFRCBUQVZFR1lMIChDTEVNQVNUSU4pLCAxLTIgTUcgUFJOLiBQRUctSU5UUk9OIFRSRUFUTUVOVCBDT05USU5VRUQuIEFTIE9GIDA3U0VQLCBCTE9PRCBQUkVTU1VSRSBXQVMgMTMwLzg1IE1NSEcuIFRIRSBIRUFMVEggQVVUSE9SSVRZIENPREVEIFRIRSBFVkVOVCBcIkhZUEVSVEVOU0lPTlwiIEFORCBKVURHRUQgVEhFIFJFQUNUSU9OIEFTIFNFUklPVVMgQU5EIFBPU1NJQkxZIFJFTEFURUQgVE8gUEVHLUlOVFJPTi4gVEhFIElOVkVTVElHQVRPUiBDT05TSURFUkVEIEhZUEVSVEVOU0lPTiBQT1NTSUJMWSBSRUxBVEVEIFRPIFBFRy1JTlRST04gQVMgSFlQRVJURU5TSU9OIElTIEEgTEFCRUxFRCBSRUFDVElPTiBGT1IgUEVHLUlOVFJPTi5cblxuVVBEQVRFICgwNkpVTjIwMDYpOiBMSVRFUkFUVVJFIFJFUE9SVCBQUk9WSURFRCBBRERJVElPTkFMIElORk9STUFUSU9OIFJFR0FSRElORyBJTlZFU1RJR0FUT1IgQ0FVU0FMSVRZLiBTUCBQUk9TSVQgTlVNQkVSIEFEREVEOiBQMDQ4MDkuIFRIRSBJTlZFU1RJR0FUT1IgIENPTlNJREVSRUQgVEhFIEhZUEVSVEVOU0lPTiBVTkxJS0VMWSBSRUxBVEVEIFRPIFBFRy1JTlRST04uIiwiY29uTWVkcyI6ImFjZXRhbWlub3BoZW5cclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5oeWRyb3h5dXJlYVxyXG53YXJmYXJpbiBzb2RpdW1cclxuYXNwaXJpblxyXG56b3BpY2xvbmVcclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5hbWl0cmlwdHlsaW5lIGh5ZHJvY2hsb3JpZGUiLCJwdExpc3QiOiJIeXBlcnRlbnNpb24gKFByaW1hcnkpIiwiY2FzZUlkIjozMjAzOTksImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NjYsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJQRUdJTlRFUkZFUk9OIEFMRkEtMkIiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNzgsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjIwMDMtMTEtMDA5OCIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJQRUdJTlRFUkZFUk9OIEFMRkEtMkIiLCJwcm9kdWN0SWQiOjEwMTQ1MywicHQiOiJOZXBocm9saXRoaWFzaXMiLCJwcm9kdWN0RmFtaWx5IjoiNDAzMSBJTkpFQ1RJT04iLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJSZXBvcnQgRnJvbSBTdHVkeSIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDAzLTExLTA0VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiItIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBOZXBocm9saXRoaWFzaXMiLCJhc3Nlc3NPdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiTmVwaHJvbGl0aGlhc2lzIiwib3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJHRVJNQU5ZIiwic3VzcFByb2QiOiJQRUdJTlRFUkZFUk9OIEFMRkEtMkIiLCJjb25Db21pdCI6InRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuY2VsZWNveGliIiwiZ2VuZGVyIjoiTWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MiwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjo0LCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNiIsImNhc2VOYXJyYXRpdmUiOiJDb21wYW55IE5hcnJhdGl2ZTogXG5TVFVEWSBQMDI1NzAtMDM3OiBQRUctSU5UUk9OIE1BSU5URU5BTkNFIFRIRVJBUFkgVlMgQU4gVU5UUkVBVEVEIENPTlRST0wgR1JPVVAgRk9SIFBSRVZFTlRJT04gT0YgUFJPR1JFU1NJT04gT0YgRklCUk9TSVMgSU4gQURVTFQgU1VCSkVDVFMgV0lUSCBDSFJPTklDIEhFUEFUSVRJUyBDIFdJVEggSEVQQVRJQyBGSUJST1NJUyAoTUVUQVZJUiBGSUJST1NJUyBTQ09SRSBPRiBGMiBPUiBGMyksIFdITyBGQUlMRUQgVEhFUkFQWSBXSVRIIFBFRy1JTlRST04gUExVUyBSRUJFVE9MIChJTiBQUk9UT0NPTCAjUDAyMzcwKS4gIEEgNTEgWUVBUiBPTEQgTUFMRSBQQVRJRU5UICgjMDM3MDAxKSwgV0lUSCBBIEhJU1RPUlkgT0YgTkVQSFJPTElUSElBU0lTLCBBTkQgV0hPIFdBUyBIT1NQSVRBTElaRUQgRlJPTSAzMU1BWTAzIFRPIDE0SlVOIEZPUiBBIFNQSU5BTCBGUkFDVFVSRSBEVUUgVE8gQSBGQUxMIERVUklORyBQUkVWSU9VUyBTVFVEWSAoUy1QIyAyMDAzLTA2LTA1NjgpLCBJTklUSUFURUQgUEVHLUlOVFJPTiA0MCBNQ0cgU0MgUVdLIE9OIDI2U0VQMDMuIEhFIFdBUyBIT1NQSVRBTElaRUQgT04gMDlPQ1QgVE8gVU5ERVJHTyBFWFRSQUNPUlBPUkVBTCBTSE9DSyBXQVZFIExJVEhPVFJJUFNZIE9GIFNUT05FUyBPRiBUSEUgTEVGVCBLSURORVkuIFRIRSBQQVRJRU5UIFdBUyBESVNDSEFSR0VEIFJFQ09WRVJFRCBPTiAxNE9DVC4gUEVHLUlOVFJPTiBUSEVSQVBZIFdBUyBPTkdPSU5HLiBUSEUgUkVQT1JURVIgQ09OU0lERVJFRCBUSEUgRVZFTlQgUE9TU0lCTFkgUkVMQVRFRCBUTyBQRUctSU5UUk9OLiIsImNvbk1lZHMiOiJ0cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbmNlbGVjb3hpYiIsInB0TGlzdCI6Ik5lcGhyb2xpdGhpYXNpcyAoUHJpbWFyeSkiLCJjYXNlSWQiOjI5OTMzMSwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDk2NSwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlBFR0lOVEVSRkVST04gQUxGQS0yQiIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE3NywiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMjAwMy0xMDUwMTctTkwiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiUk9DVVJPTklVTSBCUk9NSURFIiwicHJvZHVjdElkIjoxMDA0MTUsInB0IjoiQW5hcGh5bGFjdGljIHNob2NrIiwicHJvZHVjdEZhbWlseSI6IjgwODUgSU5KRUNUSU9OIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAwMy0wNS0yMVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgQW5hcGh5bGFjdGljIHNob2NrIiwiYXNzZXNzT3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6IkFuYXBoeWxhY3RpYyBzaG9jayIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiU1dFREVOIiwic3VzcFByb2QiOiJST0NVUk9OSVVNIEJST01JREUsWFlMT0NBSU5FLExFUFRBTkFMLFBST1BPRk9MIiwiY29uQ29taXQiOiJjYXJpc29wcm9kb2xcclxuYWNldGFtaW5vcGhlblxyXG5sb3JhdGFkaW5lXHJcbmFsYnV0ZXJvbFxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbmZsdXRpY2Fzb25lIHByb3Bpb25hdGUsIHNhbG1ldGVyb2wgeGluYWZvYXRlIiwiZ2VuZGVyIjoiRmVtYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjoyLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjI1OSIsImNhc2VOYXJyYXRpdmUiOiJDb21wYW55IE5hcnJhdGl2ZTogXG5BIDU1IHllYXIgb2xkIHdvbWFuIGNhbWUgdG8gYW4gb3J0aG9wYWVkaWMgY2xpbmljIGZvciBhcnRocm9kZXNpcyBvZiB0aGUgbGVmdCBzYWNyby1pbGlhY2Egam9pbnQsIHdpdGggZml4YXRpb24uIFNoZSB3YXMgc2VkYXRlZCB3aXRoIGZlbnRhbnlsIGFuZCBnb3QgYW4gZXBpZHVyYWwgY2F0aGV0ZXIgd2l0aCBhIHRlc3Rkb3NlIG9mIGxpZG9jYWluZSAwLjUgJSAxMCBtbCB3aXRob3V0IGFueSBwcm9ibGVtcy4gRHVyaW5nIHRoZSBpbmR1Y3Rpb24gc2hlIHJlY2VpdmVkIGZlbnRhbnlsIDE1MCBtaWNyb2cgYW5kIHByb3BvZm9sIDEwMCBtZyB3aXRoIGdvb2QgZWZmZWN0LiBUaGVyZWFmdGVyIEVzbWVyb24gd2FzIGdpdmVuIDMwIG1nIGludHJhdmVub3VzbHkgYW5kIHNoZSB3YXMgaW50dWJhdGVkLCBidXQgc2hlIHdhcyBkaWZmaWN1bHQgdG8gdmVudGlsYXRlLiBQdWxtb25hcnkgYXVzY3VsdGF0aW9uIHJldmVhbGVkIHJob25jaGkgYW5kIHJhbGVzLiBBbiBpbmplY3Rpb24gd2l0aCB0aGVvcGh5bGxhbWluZSB3YXMgZ2l2ZW4gYnV0IG5vdGhpbmcgY2hhbmdlZC4gQSBtYWpvciByZWRuZXNzIGFsbCBvdmVyIHRoZSBib2R5IGFwcGVhcmVkLCBhdCB0aGUgc2FtZSB0aW1lIHRoZSBibG9vZCBwcmVzc3VyZSBmZWxsIHRvIGxldmVscyB0aGF0IHdlcmUgbm90IG1lYXN1cmFibGUuIFRyZWF0bWVudCB3aXRoIGVwaGVkcmluLCBTb2x1LUNyb3RlZiAoaHlkcm9jb3J0aXNvbmUpIGFuZCBhZHJlbmFsaW5lIHdhcyBzdGFydGVkLiBUaGUgcGF0aWVudCByZWNvdmVyZWQgc2xvd2x5IHdpdGggYSBwYWxwYWJsZSBwdWxzZSBhbmQgYmxvb2QgcHJlc3N1cmUgb2YgMTcwIG1tSGcsIHdoaWNoIGxhdGVyIGZlbGwgdG8gNjAgbW1IZy4gUmVtYWluaW5nIGJyb25jaG9zcGFzbSB3aXRoIGEgbG90IG9mIHNlY3JldGUuIEFmdGVyIGFib3V0IG9uZSBob3VyIHRoZSBibG9vZCBwcmVzc3VyZSB3YXMgc3RhYmlsaXNlZCBhdCA5MCBtbUhnLCB0aGUgc2tpbiByZWFjdGlvbnMgZGlzYXBwZWFyZWQgYW5kIHRoZSBwdWxtb25hcnkgc3VtcHRvbXMgY2Vhc2VkLiBJdCB3YXMgZGVjaWRlZCBub3QgdG8gY29udGludWUgd2l0aCB0aGUgc3VyZ2VyeS4gVGhlIHBhdGllbnQgd2FzIGV4dHViYXRlZCBhbmQgc2hlIGJyZWF0aGVkIG5vcm1hbGx5LlxuXG5Db3JyZWN0aXZlIFRyZWF0bWVudDpcblRoZW9waHlsbGFtaW5lLCBlcGhlZHJpbiwgU29sdS1Db3J0ZWYgKGh5ZHJvY29ydGlzb25lKSBhbmQgYWRyZW5hbGluZSwgc3VyZ2VyeSBjYW5jZWxsZWQuIiwiY29uTWVkcyI6ImNhcmlzb3Byb2RvbFxyXG5hY2V0YW1pbm9waGVuXHJcbmxvcmF0YWRpbmVcclxuYWxidXRlcm9sXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuZmx1dGljYXNvbmUgcHJvcGlvbmF0ZSwgc2FsbWV0ZXJvbCB4aW5hZm9hdGUiLCJwdExpc3QiOiJBbmFwaHlsYWN0aWMgc2hvY2sgKFByaW1hcnkpIiwiY2FzZUlkIjo1MzI2MzQsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NjQsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJST0NVUk9OSVVNIEJST01JREUsWFlMT0NBSU5FLExFUFRBTkFMLFBST1BPRk9MIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTc2LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIyMDAzLTEwLTExNjkiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiUExBQ0VCTyAoNjMzNiBDQVBTVUxFIFNUVURZKSIsInByb2R1Y3RJZCI6MTAyMDQ5LCJwdCI6IkRpc2Vhc2UgcHJvZ3Jlc3Npb24iLCJwcm9kdWN0RmFtaWx5IjoiUExBQ0VCTyIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlJlcG9ydCBGcm9tIFN0dWR5IiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMDMtMTAtMTNUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6IlllcyIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgRGlzZWFzZSBwcm9ncmVzc2lvblxyXG4yKSBEeXNwbm9lYVxyXG4zKSBQbGV1cmFsIGVmZnVzaW9uIiwiYXNzZXNzT3V0Y29tZSI6IkZhdGFsIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiRGlzZWFzZSBwcm9ncmVzc2lvbiIsIm91dGNvbWUiOiJGYXRhbCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJHRVJNQU5ZIiwic3VzcFByb2QiOiJQTEFDRUJPICg2MzM2IENBUFNVTEUgU1RVRFkpLFBBQ0xJVEFYRUwgKDYzMzYgQ0FQU1VMRSBTVFVEWSksQ0FSQk9QTEFUSU4gKDYzMzYgQ0FQU1VMRSBTVFVEWSkiLCJjb25Db21pdCI6ImRpcHlyb25lXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxubWV0b2Nsb3ByYW1pZGVcclxuZmVub3Rlcm9sIGh5ZHJvYnJvbWlkZSwgaXByYXRyb3BpdW0gYnJvbWlkZVxyXG5oeWRyb2NvZG9uZSIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiWWVzIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6NywiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjU4IiwiY2FzZU5hcnJhdGl2ZSI6IkNvbXBhbnkgTmFycmF0aXZlOiBcbklOSVRJQUw6IFNUVURZIFAwMTkwMS0gMDI4IChHRVIpOiBcIkEgUEhBU0UgMyBSQU5ET01JWkVEIFNUVURZIE9GIExPTkFGQVJOSUIgSU4gQ09NQklOQVRJT04gV0lUSCBQQUNMSVRBWEVMIEFORCBDQVJCT1BMQVRJTiBWUy4gUExBQ0VCTyBJTiBDT01CSU5BVElPTiBXSVRIIFBBQ0xJVEFYRUwgQU5EIENBUkJPUExBVElOIElOIFBBVElFTlRTIFdJVEggTk9OLVNNQUxMIENFTEwgTFVORyBDQU5DRVIgKE5TQ0xDKS5cIiBBIDU1IFlFQVIgT0xEIEZFTUFMRSBQQVRJRU5UIChOTy4gMjUyNCksIFdJVEggSElTVE9SWSBPRiBQTEVVUkFMIEVGRlVTSU9OLCBJTklUSUFURUQgQkxJTkRFRCBTVFVEWSBNRURJQ0FUSU9OIChMT05BRkFSTklCIFZTLiBQTEFDRUJPKSAxMDAgTUcgUE8gQklELCBQQUNMSVRBWEVMIChET1NFIFVOSykgQU5EIENBUkJPUExBVElOIEFVQyA2IElWIFEzVyBPTiAyM1NFUDIwMDMgRk9SIE5TQ0xDLiBPTiAxMU9DVCwgVEhFIFBBVElFTlQgU1VGRkVSRUQgRlJPTSBSSVNJTkcgRFlTUE5FQSBEVUUgVE8gUFJFLUVYSVNUSU5HIFBMRVVSQUwgRUZGVVNJT04uIFNIRSBXQVMgSE9TUElUQUxJWkVEIE9OIFRIRSBTQU1FIERBWSBBTkQgVU5ERVJXRU5UIEEgVEhPUkFDT1NDT1BZIFdJVEggUExFVVJBTCBQVU5DVElPTiBBTkQgUExFVVJPREVTSVMuIFRIRSBQQVRJRU5UIElNUFJPVkVEIEFORCBXQVMgRElTQ0hBUkdFRCBPTiAwN05PVi4gIFRIRSBJTlZFU1RJR0FUT1IgQ09OU0lERVJFRCBUSEUgRVZFTlRTIFVOTElLRUxZIFJFTEFURUQgVE8gVEhFIFNUVURZIERSVUdTLlxuXG5GT0xMT1ctVVA6IFRIRSBQQVRJRU5UIFNUQVJURUQgU1RVRFkgTUVESUNBVElPTlMgT04gMjRTRVAyMDAzLiBMQVNUIERPU0UgT0YgQkxJTkRFRCBTVFVEWSBEUlVHIFdBUyBHSVZFTiBPTiAxN09DVC4gVEhFIFBBVElFTlQgRVhQSVJFRCBPTiAxNk5PViBEVUUgVE8gRElTRUFTRSBQUk9HUkVTU0lPTi4gVEhFIElOVkVTVElHQVRPUiBDT05TSURFUkVEIFRIRSBERUFUSCBVTkxJS0VMWSBSRUxBVEVEIFRPIFNUVURZIERSVUdTLlxuXG5USEUgU1RVRFkgV0FTIFVOQkxJTkRFRC4gIFRIRSBQQVRJRU5UIFJFQ0VJVkVEIFBMQUNFQk8uIiwiY29uTWVkcyI6ImRpcHlyb25lXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxubWV0b2Nsb3ByYW1pZGVcclxuZmVub3Rlcm9sIGh5ZHJvYnJvbWlkZSwgaXByYXRyb3BpdW0gYnJvbWlkZVxyXG5oeWRyb2NvZG9uZSIsInB0TGlzdCI6IkRpc2Vhc2UgcHJvZ3Jlc3Npb24gKFByaW1hcnkpIUAjI0AhRHlzcG5vZWEhQCMjQCFQbGV1cmFsIGVmZnVzaW9uIiwiY2FzZUlkIjoyODQ2MzIsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NjMsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJQTEFDRUJPICg2MzM2IENBUFNVTEUgU1RVRFkpLFBBQ0xJVEFYRUwgKDYzMzYgQ0FQU1VMRSBTVFVEWSksQ0FSQk9QTEFUSU4gKDYzMzYgQ0FQU1VMRSBTVFVEWSkiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNzUsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjIwMDMtMDctMTg0NCIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJCVVBSRU5PUlBISU5FIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMTE0OCwicHQiOiJOYXVzZWEiLCJwcm9kdWN0RmFtaWx5IjoiMjg0NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAwMy0wNy0xOFQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgTmF1c2VhXHJcbjIpIFBhbGxvclxyXG4zKSBIeXBlcmhpZHJvc2lzXHJcbjQpIFNvbW5vbGVuY2UiLCJhc3Nlc3NPdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiTm9uLVNlcmlvdXMiLCJzZXJpb3VzIjoiTm9uLVNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJOYXVzZWEiLCJvdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwibGlzdGVkbmVzcyI6Ikxpc3RlZCIsImNvdW50cnkiOiJNRVhJQ08iLCJzdXNwUHJvZCI6IkJVUFJFTk9SUEhJTkUgSFlEUk9DSExPUklERSIsImNvbkNvbWl0IjoidHJhbWFkb2wgaHlkcm9jaGxvcmlkZSIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MiwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNTciLCJjYXNlTmFycmF0aXZlIjoiQ29tcGFueSBOYXJyYXRpdmU6IFxuQSA1MyBZRUFSIE9MRCBGRU1BTEUgUEFUSUVOVCBXSVRIIEEgSElTVE9SWSBPRiBQT1NULU9QRVJBVE9SWSBQQUlOIE9GIExFRlQgQ0hFU1QgRFVFIEEgTUFTVEVDVE9NWSwgUkVDRUlWRUQgVEVNR0VTSUMgKEJVUFJFTk9SUEhJTkUpIEhBTEYgU1VCTElOR1VBTCBUQUJMRVQsIChUT1RBTCBET1NFIE9GIDAuMSBNRykgT05DRSBJTiBNQVIyMDAzIEZPUiBDSEVTVCBQQUlOLiBGSUZURUVOIE1JTlVURVMgTEFURVIsIFRIRSBQQVRJRU5UIFNUQVJURUQgV0lUSCBQQUxFTkVTUywgU1dFQVRJTkcsIFNMRUVQSU5FU1MgQU5EIE5BVVNFQS4gVEhFIFBBVElFTlQgRElEIE5PVCBSRUNFSVZFIE1FRElDQVRJT04gVE8gUkVWRVJUIFRIRSBTWU1QVE9NUy4gVEhJUlRZIE1JTlVURVMgTEFURVIsIEFGVEVSIFNIRSBXQVMgQVQgUkVTVCwgVEhFIFBBVElFTlQgUkVDT1ZFUkVEIENPTVBMRVRFTFkuIEFDQ09SRElORyBXSVRIIFRIRSBQSFlTSUNJQU4gVEhFIEFEVkVSU0UgRVZFTlQgV0FTIFBST0JBQkxZIFJFTEFURUQgV0lUSCBURU1HRVNJQy4iLCJjb25NZWRzIjoidHJhbWFkb2wgaHlkcm9jaGxvcmlkZSIsInB0TGlzdCI6Ik5hdXNlYSAoUHJpbWFyeSkhQCMjQCFQYWxsb3IhQCMjQCFIeXBlcmhpZHJvc2lzIUAjI0AhU29tbm9sZW5jZSIsImNhc2VJZCI6MjgyMDIyLCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTYyLCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiQlVQUkVOT1JQSElORSBIWURST0NITE9SSURFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTc0LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIyMDAzLTA1LTAxNDYiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiPFVOQ09ERUQ+IiwicHJvZHVjdElkIjowLCJwdCI6IkFjdXRlIG15ZWxvaWQgbGV1a2FlbWlhIiwicHJvZHVjdEZhbWlseSI6InVuZGVmaW5lZCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlJlcG9ydCBGcm9tIFN0dWR5IiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMDMtMDUtMDVUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6IlllcyIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgQWN1dGUgbXllbG9pZCBsZXVrYWVtaWFcclxuMikgRGVwcmVzc2VkIGxldmVsIG9mIGNvbnNjaW91c25lc3NcclxuMykgUGV0ZWNoaWFlXHJcbjQpIFNlcHNpc1xyXG41KSBQeXJleGlhXHJcbjYpIFRocm9tYm9jeXRvcGVuaWEiLCJhc3Nlc3NPdXRjb21lIjoiRmF0YWwiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJBY3V0ZSBteWVsb2lkIGxldWthZW1pYSIsIm91dGNvbWUiOiJGYXRhbCIsImxpc3RlZG5lc3MiOiIiLCJjb3VudHJ5IjoiU1BBSU4iLCJzdXNwUHJvZCI6IkZMVUNPTkFaT0xFIiwiY29uQ29taXQiOiJkYXVub3J1YmljaW5cclxuQ0lUQVJBQklORSBPQ0ZPU0ZBVEVcclxuQklDQVJCT05BVEUgTkFGUklDVVNcclxub21lcHJhem9sZVxyXG5waXBlcmFjaWxsaW5cclxuYWNldGFtaW5vcGhlblxyXG5vbmRhbnNldHJvblxyXG5vbmRhbnNldHJvblxyXG52YW5jb215Y2luXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuYWxidXRlcm9sXHJcbmlwcmF0cm9waXVtIGJyb21pZGVcclxudHJhbmV4YW1pYyBhY2lkXHJcblBPVEFTU0lVTSBTVVBQTEVNRU5UIChOT1MpXHJcbmNsb3RyaW1hem9sZVxyXG5tZXJvcGVuZW1cclxubWVyb3BlbmVtXHJcbnNwaXJvbm9sYWN0b25lXHJcbmRleGNobG9ycGhlbmlyYW1pbmUgbWFsZWF0ZVxyXG5oeWRyb2NvcnRpc29uZSBzb2RpdW0gcGhvc3BoYXRlXHJcbm11cGlyb2NpblxyXG5kZXhhbWV0aGFzb25lXHJcbmxhY3R1bG9zZVxyXG5jaXByb2Zsb3hhY2luXHJcbmNpcHJvZmxveGFjaW5cclxubWluZXJhbCBvaWxcclxudGV0cmF6ZXBhbVxyXG50ZXRyYXplcGFtXHJcbmFjeWNsb3ZpclxyXG5hbWl0cmlwdHlsaW5lIGh5ZHJvY2hsb3JpZGVcclxuYW1pdHJpcHR5bGluZSBoeWRyb2NobG9yaWRlXHJcblBBUkFDRVRBTU9MIFdJVEggQ09ERUlORVxyXG5sZXZvZmxveGFjaW5cclxuY2VmdXJveGltZVxyXG5hbXBob3RlcmljaW4gQlxyXG5maWxncmFzdGltXHJcbmZsdWNvbmF6b2xlXHJcbmZsdWNvbmF6b2xlXHJcbmZsdWNvbmF6b2xlIiwiZ2VuZGVyIjoiRmVtYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJZZXMiLCJjYXNlVmVyc2lvbiI6MiwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjoxMiwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjU2IiwiY2FzZU5hcnJhdGl2ZSI6IkNvbXBhbnkgTmFycmF0aXZlOiBcblNUVURZIFAwMTg5OS04OCAoU1BBSU4pOiBBIFJBTkRPTUlaRUQgQ09OVFJPTExFRCBUUklBTCBPRiBQT1NBQ09OQVpPTEUgKFNDSCA1NjU5MikgVlMgU1RBTkRBUkQgQVpPTEUgVEhFUkFQWSBGT1IgVEhFIFBSRVZFTlRJT04gT0YgSU5WQVNJVkUgRlVOR0FMIElORkVDVElPTlMgQU1PTkcgSElHSCBSSVNLIE5FVVRST1BFTklDIFBBVElFTlRTLiBBIDY3IFlFQVIgT0xEIEZFTUFMRSBQQVRJRU5UICgjMTE2MyksIFdJVEggQSBISVNUT1JZIE9GIERFRVAgVkVJTiBUSFJPTUJPU0lTIChEVlQpLCBDSE9MRUNZU1RFQ1RPTVksIEhZU1RFUkVDVE9NWSwgVkVOT1VTIElOU1VGRklDSUVOQ1ksIENPTlNUSVBBVElPTiwgSEVNT1JSSE9JRFMsIEFORCBGRVZFUiBTSU5DRSBFQVJMWSBGRUIwMywgV0lUSCBBQ1VURSBNWUVMT0JMQVNUSUMgTEVVS0VNSUEgKEFNTCksIFdITyBSRUNFSVZFRCBGTFVDT05BWk9MRSAyMDAgTUcgUUQgMDdGRUItMDlGRUIwMyBBTkQgNDAwIE1HIFFEIDA5RkVCLTExRkVCMDMgRk9SIFBST1BIWUxBWElTIChOT1QgSU4gU1RVRFkpLCBXSVRIIEJBU0VMSU5FIEhHQj03LjUgRy9ETCBBTkQgUExUPTE4LjYgWCAxMF4zL01DIEwsIElOSVRJQVRFRCBGTFVDT05BWk9MRSA0MDAgTUcgUE8gUUQgT04gMThGRUIwMyBGT1IgRlVOR0FMIFBST1BIWUxBWElTLiBPTiAyNkZFQjAzLCBGTFVDT05BWk9MRSBXQVMgRElTQ09OVElOVUVELiBPTiAwOUFQUjAzLCBBTUwgRElTRUFTRSBQUk9HUkVTU0lPTiBXQVMgREVURUNURUQuIElUIFdBUyBOT1RFRCBUSEFUIFRIRSBQQVRJRU5UIFJFQ0VJVkVEIEZMVUNPTkFaT0xFIDIwMCBNRyBRRCBGUk9NIDEzTUFSLTEwQVBSMDMgIEZPUiBQUk9QSFlMQVhJUyBPVVQgT0YgUFJPVE9DT0wuIE9OIDIxQVBSLCBUSEUgUEFUSUVOVCBSRUNFSVZFRCBCTE9PRCAoMiBVTklUUykgQU5EIFBMQVRFTEVUICg4IFVOSVRTKSBUUkFOU0ZVU0lPTi4gT04gMjhBUFIsIFRIRSBQQVRJRU5UIElOSVRJQVRFRCBDRUZVUk9YSU1FIDUwMC8xMkhSIEZPUiBGRVZFUi4gVEhFIFBBVElFTlQgQUxTTyBSRUNFSVZFRCBBTk9USEVSIEJMT09EICgyIFVOSVRTKSBBTkQgUExBVEVMRVQgKDggVU5JVFMpIFRSQU5TRlVTSU9OLiBPTiAwMk1BWTAzLCBUSEUgUEFUSUVOVCBXQVMgSE9TUElUQUxJWkVEIFdJVEggU0VQU0lTLCBQRVRFQ0hJQUUsIElNUEFJUk1FTlQgT0YgR0VORVJBTCBTVEFURSAoUkVMQVRFRCBUTyBBTUwgUFJPR1JFU1NJT04pIEFORCBJTVBBSVJNRU5UIE9GIENPTlNDSU9VU05FU1MgTEVWRUwgQU5EIFdBUyBXSVRIRFJBV04gRlJPTSBTVFVEWS4gSEdCPTggRy9ETCBBTkQgRkVWRVIgV0VSRSBOT1RFRC4gVEhST01CT0NZVE9QRU5JQSBBTkQgUEVSSVBIRVJBTCBCTEFTVCBXRVJFIEFMU08gTk9URUQuIE9OIDA0TUFZMDMsIFRIRSBQQVRJRU5UIERJRUQgRFVFIFRPIEFNTCBESVNFQVNFIFBST0dSRVNTSU9OIEFORCBTRVBTSVMuIFRIRSBJTlZFU1RJR0FUT1IgQ09OU0lERVJFRCBUSEUgRVZFTlRTIFVOUkVMQVRFRCBUTyBUSEUgU1RVRFkgRFJVRy5cblxuVVBEQVRFRCAoMjdTRVAwNSk6IFVQT04gUkVDT05DSUxJQVRJT046IEFERElUSU9OQUwgT1VUQ09NRSBPRiBMSUZFIFRIUkVBVEVOSU5HIFdBUyBBRERFRCBUTyBTQUUgU0VQU0lTLiIsImNvbk1lZHMiOiJkYXVub3J1YmljaW5cclxuQ0lUQVJBQklORSBPQ0ZPU0ZBVEVcclxuQklDQVJCT05BVEUgTkFGUklDVVNcclxub21lcHJhem9sZVxyXG5waXBlcmFjaWxsaW5cclxuYWNldGFtaW5vcGhlblxyXG5vbmRhbnNldHJvblxyXG5vbmRhbnNldHJvblxyXG52YW5jb215Y2luXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuYWxidXRlcm9sXHJcbmlwcmF0cm9waXVtIGJyb21pZGVcclxudHJhbmV4YW1pYyBhY2lkXHJcblBPVEFTU0lVTSBTVVBQTEVNRU5UIChOT1MpXHJcbmNsb3RyaW1hem9sZVxyXG5tZXJvcGVuZW1cclxubWVyb3BlbmVtXHJcbnNwaXJvbm9sYWN0b25lXHJcbmRleGNobG9ycGhlbmlyYW1pbmUgbWFsZWF0ZVxyXG5oeWRyb2NvcnRpc29uZSBzb2RpdW0gcGhvc3BoYXRlXHJcbm11cGlyb2NpblxyXG5kZXhhbWV0aGFzb25lXHJcbmxhY3R1bG9zZVxyXG5jaXByb2Zsb3hhY2luXHJcbmNpcHJvZmxveGFjaW5cclxubWluZXJhbCBvaWxcclxudGV0cmF6ZXBhbVxyXG50ZXRyYXplcGFtXHJcbmFjeWNsb3ZpclxyXG5hbWl0cmlwdHlsaW5lIGh5ZHJvY2hsb3JpZGVcclxuYW1pdHJpcHR5bGluZSBoeWRyb2NobG9yaWRlXHJcblBBUkFDRVRBTU9MIFdJVEggQ09ERUlORVxyXG5sZXZvZmxveGFjaW5cclxuY2VmdXJveGltZVxyXG5hbXBob3RlcmljaW4gQlxyXG5maWxncmFzdGltXHJcbmZsdWNvbmF6b2xlXHJcbmZsdWNvbmF6b2xlXHJcbmZsdWNvbmF6b2xlIiwicHRMaXN0IjoiQWN1dGUgbXllbG9pZCBsZXVrYWVtaWEgKFByaW1hcnkpIUAjI0AhRGVwcmVzc2VkIGxldmVsIG9mIGNvbnNjaW91c25lc3MhQCMjQCFQZXRlY2hpYWUhQCMjQCFTZXBzaXMhQCMjQCFQeXJleGlhIUAjI0AhVGhyb21ib2N5dG9wZW5pYSIsImNhc2VJZCI6Mjg3NTEzLCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTYxLCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiRkxVQ09OQVpPTEUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNzMsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjIwMDMtMDItMzEzNCIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJJTkZMSVhJTUFCIiwicHJvZHVjdElkIjoxMDExNDcsInB0IjoiSHlwZXJjYWxjYWVtaWEiLCJwcm9kdWN0RmFtaWx5IjoiMjE1NSBJTkpFQ1RJT04iLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDAzLTAyLTI4VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiJZZXMiLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIEh5cGVyY2FsY2FlbWlhXHJcbjIpIFR1YmVyY3Vsb3NpcyIsImFzc2Vzc091dGNvbWUiOiJGYXRhbCIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6Ikh5cGVyY2FsY2FlbWlhIiwib3V0Y29tZSI6IkZhdGFsIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlNXRURFTiIsInN1c3BQcm9kIjoiSU5GTElYSU1BQixJTVVSRUwsUFJFRE5JU09MT04iLCJjb25Db21pdCI6ImZlbG9kaXBpbmVcclxuem9waWNsb25lXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuZm9saWMgYWNpZFxyXG5jeWNsaXppbmVcclxuYWNldGFtaW5vcGhlblxyXG5pbmRvbWV0aGFjaW5cclxuaHlkcm9jaGxvcm90aGlhemlkZSwgYW1pbG9yaWRlIGh5ZHJvY2hsb3JpZGVcclxub21lcHJhem9sZVxyXG5wb2x5c2FjY2hhcmlkZSBpcm9uIGNvbXBsZXgiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6IlllcyIsImNhc2VWZXJzaW9uIjoyLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjI1NSIsImNhc2VOYXJyYXRpdmUiOiJDb21wYW55IE5hcnJhdGl2ZTogXG5IRUFMVEggQVVUSE9SSVRZIFJFUE9SVCAoU1dFREVOLCAjMDIyNDYwKTogQSA3MyBZRUFSIE9MRCBGRU1BTEUgUEFUSUVOVCBJTklUSUFURUQgVFJFQVRNRU5UIFdJVEggUkVNSUNBREUgKElORkxJWElNQUIpICgyMDAgTUcvNlcpIElWIElOIEpVTjIwMDIgRk9SIEhFUiBSSEVVTUFUT0lEIEFSVEhSSVRJUy4gVEhFIFBBVElFTlQgUkVDRUlWRUQgRk9VUiBET1NFUywgVEhFIExBU1QgT05FIDI0U0VQMjAwMi4gU09NRSBMQUJPUkFUT1JZIFZBTFVFUyBXRVJFIENIRUNLRUQgMDlPQ1QgV0hJQ0ggU0hPV0VEIEVMRVZBVEVEIFNSICg0MCBNTS9IKSBBTkQgREVDUkVBU0VEIENSUCAoNTkgTUcvTCkuIFRSRUFUTUVOVCBXSVRIIElNVVJFTCAoQVpBVEhJT1BSSU5FKSBTVEFSVEVEIEFTIFNVUFBPUlQgVE8gVEhFIENPTUlORyBUUkVBVE1FTlQgV0lUSCBSRU1JQ0FERS4gT04gMTRPQ1QyMDAyLCBUSEUgUEFUSUVOVCBBUlJJVkVEIFRPIFRIRSBTVVJHSUNBTCBFTUVSR0VOQ1kgREVQQVJUTUVOVCBXSVRIIEFCRE9NSU5BTCBQQUlOLiBUSEUgUEFUSUVOVCBBTFNPIEhBRCBTVUZGRVJFRCBGUk9NIEZFVkVSLCBBTkQgTEFCIFZBTFVFUyBTSE9XRUQgSElHSCBJTkZMQU1NQVRPUlkgUEFSQU1FVEVSUyAoVkFMVUVTIE5PVCBQUk9WSURFRCkuIFRIRSBQQVRJRU5UIFdBUyBIT1NQSVRBTElaRUQgQVQgVEhFIERFUEFSVE1FTlQgT0YgSU5URVJOQUwgTUVESUNJTkUgRk9SIElOVkVTVElHQVRJT04uIEVYQU1JTkFUSU9OUyBTSE9XRUQgUExFVVJBIEZMVUlEIFdISUNIIFdBUyBUQVBQRUQuIENVTFRVUkUgU0hPV0VEIE5PIEJBQ1RFUklBTCBHUk9XVEguIEEgQ1QgT0YgVEhPUkFYIFNIT1dFRCBOTyBTSUdOUyBPRiBQVUxNT05BUlkgRU1CT0xJU00uIEFOIEFCRE9NSU5BTCBDVCBTSE9XRUQgU01BTEwgQU1PVU5UIE9GIEFTQ0lURVMsIFNPTUUgU0lHTlMgT0YgUExFVVJBIEZMVUlEIEFORCBDSEFOR0VTIElOIFNQTEVFTiBXSElDSCBPTiBUSEUgWC1SQVkgTE9PS0VEIExJS0UgTUlDUk8gQUJTQ0VTU0VTLiBMQUIgVkFMVUVTIFNIT1dFRCBISUdIIElORkxBTU1BVE9SWSBQQVJBTUVURVJTIEFORCBISUdIIENBTENJVU0gTEVWRUxTICgzLjMgTU1PTC9MKS4gQ1JQIFdBUyBDTE9TRSBUTyAyMDAuIFNFVkVSQUwgQ1VMVFVSRVMgV0VSRSBQRVJGT1JNRUQgQU5EIFRIRSBQQVRJRU5UIFJFQ0VJVkVEIFNFVkVSQUwgRElGRkVSRU5UIEFOVElCSU9USUNTIERVRSBUTyBTVVNQSUNJT04gT0YgSU5GRUNUSU9OLiBUSEVSRSBXQVMgQSBTVVNQSUNJT04gT0YgTUFMSUdOQU5DWSBBTkQgT05FIEdVRVNTIFdBUyBUSEFUIFRIRSBQQVRJRU5UJ1MgQ0xJTklDQUwgU1RBVFVTIENPVUxEIEJFIERVRSBUTyBIRVIgUFJJTUFSWSBESVNFQVNFLiBUUkVBVE1FTlQgV0lUSCBSRU1JQ0FERSBBTkQgSU1VUkVMIFdFUkUgRElTQ09OVElOVUVELiBBRlRFUiAzMU9DVDIwMDIsIFRIRSBQQVRJRU5UJ1MgU1RBVFVTIEdSQURVQUxMWSBXT1JTRU5FRC4gVEhFIFBBVElFTlQgU0hPV0VEIEhJR0ggQUxQICgyNyBVQ0FUL0wpLCBTVElMTCBIWVBFUkNBTENFTUlBIEFORCBFTEVWQVRFRCBDUlAuIFRIRSBQQVRJRU5UIERJRUQgT04gMDROT1YyMDAyLiBUSEUgQVVUT1BTWSBTSE9XRUQgRElTU0VNSU5BVEVEIE1JTElBUlkgVFVCRVJDVUxPU0lTIElOIExVTkdTLCBTUExFRU4gQU5EIFBFUklUT05FVU0uIEFGVEVSIFJFQ0VJVklORyBUSEUgSU5GT1JNQVRJT04gRlJPTSBUSEUgQVVUT1BTWSBSRVBPUlQgVEhFIEhFQUxUSCBBVVRIT1JJVFkgQ0hBTkdFRCBUSEUgQURWRVJTRSBFVkVOVCBESUFHTk9TSVMgRlJPTSBGRVZFUiwgSU5DUkVBU0VEIENSUCwgQUJET01JTkFMIFBBSU4gQU5EIEZMVUlEIEFDQ1VNVUxBVElPTiBUTyBUQkMgR0VORVJBTElaRUQuIFRIRSBIQSBBTFNPIEFEREVEIFBSRUROSVNPTE9OIFRPIFNVU1BFQ1RFRCBEUlVHUywgTEVOR1RIIE9GIFRSRUFUTUVOVCBQRVJJT0QgVU5LTk9XTi4gVEhFIEhFQUxUSCBBVVRIT1JJVFkgSEFEIENPREVEIFRIRSBFVkVOVCAgXCJUQkMgR0VORVJBTElaRURcIiBBTkQgVEhFSVIgQ0FVU0FMSVRZIEFTU0VTU01FTlQgV0FTIFwiUE9TU0lCTEVcIiBBTkQgT1VUQ09NRSBXQVMgU1RBVEVEIEFTIFwiREVBRCBEVUUgVE8gRFJVRyBSRUFDVElPTlwiLiIsImNvbk1lZHMiOiJmZWxvZGlwaW5lXHJcbnpvcGljbG9uZVxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbmZvbGljIGFjaWRcclxuY3ljbGl6aW5lXHJcbmFjZXRhbWlub3BoZW5cclxuaW5kb21ldGhhY2luXHJcbmh5ZHJvY2hsb3JvdGhpYXppZGUsIGFtaWxvcmlkZSBoeWRyb2NobG9yaWRlXHJcbm9tZXByYXpvbGVcclxucG9seXNhY2NoYXJpZGUgaXJvbiBjb21wbGV4IiwicHRMaXN0IjoiSHlwZXJjYWxjYWVtaWEgKFByaW1hcnkpIUAjI0AhVHViZXJjdWxvc2lzIiwiY2FzZUlkIjoyNjc2NzEsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NjAsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJJTkZMSVhJTUFCLElNVVJFTCxQUkVETklTT0xPTiIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE3MiwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMjAwMi0wNi0xNjY3IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IklORkxJWElNQUIiLCJwcm9kdWN0SWQiOjEwMTE0NywicHQiOiJNeW9jYXJkaWFsIGluZmFyY3Rpb24iLCJwcm9kdWN0RmFtaWx5IjoiMjE1NSBJTkpFQ1RJT04iLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDAyLTA2LTIwVDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiItIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBNeW9jYXJkaWFsIGluZmFyY3Rpb25cclxuMikgQ2VyZWJyb3Zhc2N1bGFyIGFjY2lkZW50XHJcbjMpIFZpc3VhbCBmaWVsZCBkZWZlY3RcclxuNCkgRGlwbG9waWFcclxuNSkgVmlzdWFsIGltcGFpcm1lbnRcclxuNikgQ29yb25hcnkgYXJ0ZXJ5IG9jY2x1c2lvbiIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQgd2l0aCBTZXF1ZWxhZSIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6Ik15b2NhcmRpYWwgaW5mYXJjdGlvbiIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQgd2l0aCBTZXF1ZWxhZSIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJTV0VERU4iLCJzdXNwUHJvZCI6IklORkxJWElNQUIiLCJjb25Db21pdCI6ImF0ZW5vbG9sXHJcbmFjZXRhbWlub3BoZW5cclxuZXN0cmFkaW9sXHJcbnByZWRuaXNvbG9uZVxyXG5pbmRvbWV0aGFjaW5cclxubWVkcm94eXByb2dlc3Rlcm9uZSBhY2V0YXRlXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjU0IiwiY2FzZU5hcnJhdGl2ZSI6IkNvbXBhbnkgTmFycmF0aXZlOiBcbkhFQUxUSCBBVVRIT1JJVFkgUkVQT1JUIChTV0VERU4sICMwMjA2MjMpOiBBIDY0IFlFQVIgT0xEIEZFTUFMRSBQQVRJRU5UIElOSVRJQVRFRCBSRU1JQ0FERSAoSU5GTElYSU1BQikgSVYgKERPU0UgVU5LTk9XTikgT04gMzFKVUwyMDAxIEZPUiBUSEUgVFJFQVRNRU5UIE9GIFJIRVVNQVRPSUQgQVJUSFJJVElTLiBJTiBMQVRFIE5PVjIwMDEsIFRXTyBBTkQgQSBIQUxGIFdFRUsgQUZURVIgVEhFIExBVEVTVCBJTkZVU0lPTiwgU0hFIEVYUEVSSUVOQ0VEIFBBSU4gSU4gSEVSIFdIT0xFIEJPRFkgQU5EIEEgU1RST05HIEhFQURBQ0hFLiBUSEUgSEVBREFDSEUgSU1QUk9WRUQgQlVUIFNIRSBFWFBFUklFTkNFRCBMSUdIVCBQSEVOT01FTk9OUyBPTiBMRUZUIEVZRSBERVNDUklCRUQgQVMgR0xJVFRFUiBPRiBSRUQgQU5EIEdSRUVOIExJR0hULiBUSEUgTElHSFQgUEhFTk9NRU5PTlMgUkVNQUlORUQgRk9SIE9ORSBXRUVLIEFORCBQUk9CTEVNUyBXSVRIIENPT1JESU5BVElPTiBPRiBMRUZUIEVZRSBBTFNPIEFQUEVBUkVELiBUSEUgUEFUSUVOVCBDT01QTEFJTkVEIE9GIERJUExPUElBIEFORCBGTElDS0VSIE9GIEVZRVMuIFJFTUlDQURFIFdBUyBESVNDT05USU5VRUQgQU5EIFBSRUROSVNPTE9OIEFORCBUSVBBUk9MIChUUkFNQURPTCkgV0VSRSBTVEFSVEVELiBPUEhUSEFMTU9MT0dJQ0FMIEVYQU1JTkFUSU9OIERPTkUgT04gMDRERUMgUkVWRUFMRUQgTEVGVCBTSURFIEhPTU9OWU1PVVMgUVVBRFJBTlQgU0NPVE9NQS4gT0NDSVBJVEFMLyBQQVJJRVRBTCBMRVNJT04gV0FTIFNVU1BFQ1RFRCBBTkQgVEhFIFBBVElFTlQgV0FTIEhPU1BJVEFMSVpFRCBGT1IgRlVSVEhFUiBJTlZFU1RJR0FUSU9OLiBDVCBFWEFNSU5BVElPTiBTSE9XRUQgQSBTTUFMTCBMT1cgQVRURU5VQVRJTkcgQ0hBTkdFIElOIFBPU1RFUklPUiBDQVBTVUxBIElOVEVSTkFMLCBXSVRIIElNUFJFU1NJT04gT0YgQU4gT0xEIElORkFSQ1QuIE9OIDA1REVDLCBUSEUgUEFUSUVOVCBXQVMgVFJBTlNGRVJSRUQgVE8gVEhFIENPUk9OQVJZIElOVEVOU0lWRSBDQVJFIFVOSVQgRFVFIFRPIFNVU1BFQ1RFRCBNWU9DQVJESUFMIElORkFSQ1RJT04gV0lUSCBJTkZFUklPUiBRIFdBVkUgQU5EIFNUIEVMRVZBVElPTi4gQ0tNQiBXQVMgMTIuOCBVQ0FUL0wgQU5EIFRST1BPTklOIFQgV0FTIDAuNzEgVUNBVC9MLiBQUkVTRU5DRSBPRiBBTiBPTEQgSU5GQVJDVCBXQVMgQ09ORklSTUVELiBEVUUgVE8gQ09OVFJBSU5ESUNBVElPTiBGT1IgVEhST01CT0xZU0lTLCBTSEUgVU5ERVJXRU5UIEFDVVRFIFBUQ0EgKFBFUiBDVVRBTkVPVVMgVFJBTlNMVU1JTkFMIEFOR0lPUExBU1RZKS4gQ09ST05BUlkgQU5HSU9HUkFQSFkgU0hPV0VEIERJU1RBTCBDSVJDVU1GTEVYIE9DQ0xVU0lPTlMuIENWSSAoQ0VSRUJST1ZBU0NVTEFSIElOQ0lERU5DRSkgV0FTIEpVREdFRCBUTyBCRSBDQVVTRUQgQlkgRU1CT0xJU00uIFBMQVZJWCAoQ0xPUElET0dSRUwpIFdBUyBJTklUSUFURUQuIEFGVEVSIE9ORSBNT05USCBXSVRIIFBMQVZJWCwgVFJFQVRNRU5UIFdBUyBDSEFOR0VEIFRPIFdBUkFOIChXQVJGQVJJTikuIEFTIE9GIDIySkFOMDIsIFZJU1VBTCBGSUVMRCBMT1NTIEFORCBWSVNVQUwgUEhFTk9NRU5PTiBSRU1BSU5FRC4gSEEgQ09OU0lERVJFRCBNSSBBTkQgQ1ZJIFRPIEJFIFVOTElLRUxZIFJFTEFURUQgVE8gUkVNSUNBREUuIiwiY29uTWVkcyI6ImF0ZW5vbG9sXHJcbmFjZXRhbWlub3BoZW5cclxuZXN0cmFkaW9sXHJcbnByZWRuaXNvbG9uZVxyXG5pbmRvbWV0aGFjaW5cclxubWVkcm94eXByb2dlc3Rlcm9uZSBhY2V0YXRlXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUiLCJwdExpc3QiOiJNeW9jYXJkaWFsIGluZmFyY3Rpb24gKFByaW1hcnkpIUAjI0AhQ2VyZWJyb3Zhc2N1bGFyIGFjY2lkZW50IUAjI0AhVmlzdWFsIGZpZWxkIGRlZmVjdCFAIyNAIURpcGxvcGlhIUAjI0AhVmlzdWFsIGltcGFpcm1lbnQhQCMjQCFDb3JvbmFyeSBhcnRlcnkgb2NjbHVzaW9uIiwiY2FzZUlkIjoyNDkyODgsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NTksImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJJTkZMSVhJTUFCIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTcwLCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIyMDAxLTAyLTAzNTgiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiSU5GTElYSU1BQiIsInByb2R1Y3RJZCI6MTAxMTQ3LCJwdCI6IlJhc2giLCJwcm9kdWN0RmFtaWx5IjoiMjE1NSBJTkpFQ1RJT04iLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDAxLTAyLTA4VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiJZZXMiLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIFJhc2hcclxuMikgUHlyZXhpYVxyXG4zKSBNYWxhaXNlXHJcbjQpIEFydGhyYWxnaWFcclxuNSkgSGVhZGFjaGVcclxuNikgVGFjaHljYXJkaWEiLCJhc3Nlc3NPdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiUmFzaCIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiREVOTUFSSyIsInN1c3BQcm9kIjoiSU5GTElYSU1BQixJTVVSRUwiLCJjb25Db21pdCI6Im1ldGhvdHJleGF0ZVxyXG5hY2V0YW1pbm9waGVuXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUiLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJQb3MiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjoyLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjIsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjI1MyIsImNhc2VOYXJyYXRpdmUiOiJDb21wYW55IE5hcnJhdGl2ZTogXG5IRUFMVEggQVVUSE9SSVRZIFJFUE9SVCAoREVOTUFSSyk6IEEgNTEtWUVBUi1PTEQgTUFMRSBQQVRJRU5UIElOSVRJQVRFRCBSRU1JQ0FERSAoSU5GTElYSU1BQikgMjUwIE1HIElWIE9OIDA3SlVOMjAwMCBGT1IgUkhFVU1BVE9JRCBBUlRIUklUSVMuIE9OIDI4SlVOLCBUSEUgUEFUSUVOVCBXQVMgSE9TUElUQUxJWkVEIEZPUiBBIFJBU0ggQU5EIEZFVkVSLiBUSEUgUEFUSUVOVCBSRUNPVkVSRUQgV0lUSE9VVCBTRVFVRUxBRS4gT04gMDlBVUcsIFRIRSBQQVRJRU5UIEVYUEVSSUVOQ0VEIEFSVEhSQUxHSUEuIE9OIDEzU0VQLCBUSEUgUEFUSUVOVCBFWFBFUklFTkNFRCBNQUxBSVNFLiBPTiAxOE9DVCwgVEhFIFBBVElFTlQgUkVDRUlWRUQgQSBTRUNPTkQgRE9TRSBPRiBSRU1JQ0FERSBBTkQgREVWRUxPUEVEIEEgSEVBREFDSEUgQU5EIFRBQ0hZQ0FSRElBLiBUSEUgUkVQT1JURVIgQ09OU0lERVJTIFRIRSBBUlRIUkFMR0lBIFBPU1NJQkxZIFJFTEFURUQgQU5EIFRIRSBIRUFEQUNIRSwgVEFDSFlDQVJESUEgQU5EIE1BTEFJU0UgUFJPQkFCTFkgUkVMQVRFRCBUTyBSRU1JQ0FERS4iLCJjb25NZWRzIjoibWV0aG90cmV4YXRlXHJcbmFjZXRhbWlub3BoZW5cclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZSIsInB0TGlzdCI6IlJhc2ggKFByaW1hcnkpIUAjI0AhUHlyZXhpYSFAIyNAIU1hbGFpc2UhQCMjQCFBcnRocmFsZ2lhIUAjI0AhSGVhZGFjaGUhQCMjQCFUYWNoeWNhcmRpYSIsImNhc2VJZCI6MjE2MDA3LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTU3LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiSU5GTElYSU1BQixJTVVSRUwiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNzEsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjIwMDItMDItMDE0OCIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJJTkZMSVhJTUFCIiwicHJvZHVjdElkIjoxMDExNDcsInB0IjoiUGFyYWVzdGhlc2lhIiwicHJvZHVjdEZhbWlseSI6IjIxNTUgSU5KRUNUSU9OIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAwMi0wMi0wNVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgUGFyYWVzdGhlc2lhXHJcbjIpIE1hbGFpc2VcclxuMykgRmF0aWd1ZVxyXG40KSBEeXNwbm9lYSIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJOb24tU2VyaW91cyIsInNlcmlvdXMiOiJOb24tU2VyaW91cyIsInByaW1hcnlFdmVudCI6IlBhcmFlc3RoZXNpYSIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiU1dFREVOIiwic3VzcFByb2QiOiJJTkZMSVhJTUFCIiwiY29uQ29taXQiOiJhY2V0YW1pbm9waGVuXHJcbnN1bGZhc2FsYXppbmVcclxucHJlZG5pc29sb25lXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxubWV0aG90cmV4YXRlIiwiZ2VuZGVyIjoiTWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiUG9zIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MiwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNTMiLCJjYXNlTmFycmF0aXZlIjoiQ29tcGFueSBOYXJyYXRpdmU6IFxuSEVBTFRIIEFVVEhPUklUWSBSRVBPUlQgKFNXRURFTiwgIzAxMjg0Myk6IEEgNTIgWUVBUiBPTEQgTUFMRSBQQVRJRU5UIElOSVRJQVRFRCBSRU1JQ0FERSAoSU5GTElYSU1BQikgMzAwIE1HIElWIE9OIDI5QVVHMjAwMSBGT1IgVEhFIFRSRUFUTUVOVCBPRiBTUE9ORFlMQVJUSFJJVElTLiBBRlRFUiBUSEUgRklSU1QgRE9TRSwgVEhFIFBBVElFTlQgRVhQRVJJRU5DRUQgT0NDQVNJT05BTCBCUkVBVEhMRVNTTkVTUy4gQSBDSEVTVCBYLVJBWSBSRVZFQUxFRCBOTyBQQVRIT0xPR0lDQUwgRklORElOR1MuIERVUklORyBUSEUgVEhJUkQgSU5GVVNJT04gT04gMTBPQ1QyMDAxLCBTSE9SVCBFUElTT0RFUyBPRiBEWVNQTkVBIE9DQ1VSUkVELiBGT1VSIERBWVMgQUZURVIgVEhFIElORlVTSU9OLCBTRVZFUkUgVElSRURORVNTLCBNQUxBSVNFIEFORCBBIFRJTkdMSU5HIFNFTlNBVElPTiBJTiBNVVNDTEVTIERFVkVMT1BFRC4gVEhFIFBBVElFTlQgSEFEIFRPIFNUQVkgSU4gQkVEIEZPUiBGSVZFIERBWVMuIFRIRSBTWU1QVE9NUyBESVNBUFBFQVJFRCBHUkFEVUFMTFkuIFJFTUlDQURFIFdBUyBESVNDT05USU5VRUQuIEhBOlMgQ0FVU0FMSVRZIEFTU0VTU01FTlQ6IFBST0JBQkxFIERVRSBUTyBPQlZJT1VTIENPTk5FQ1RJT04gSU4gVElNRSwgUE9TSVRJVkUgREUgQU5EIFJFIENIQUxMRU5HRSwgUFJFVklPVVMgUkVQT1JUUyBBTkQgTEFCRUxMRUQgQURSLiIsImNvbk1lZHMiOiJhY2V0YW1pbm9waGVuXHJcbnN1bGZhc2FsYXppbmVcclxucHJlZG5pc29sb25lXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxubWV0aG90cmV4YXRlIiwicHRMaXN0IjoiUGFyYWVzdGhlc2lhIChQcmltYXJ5KSFAIyNAIU1hbGFpc2UhQCMjQCFGYXRpZ3VlIUAjI0AhRHlzcG5vZWEiLCJjYXNlSWQiOjIzNTU3NCwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDk1OCwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IklORkxJWElNQUIiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNjksImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjIwMDAtMDgtMTMwNSIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJJTkZMSVhJTUFCIiwicHJvZHVjdElkIjoxMDExNDcsInB0IjoiQW5hcGh5bGFjdGljIHJlYWN0aW9uIiwicHJvZHVjdEZhbWlseSI6IjIxNTUgSU5KRUNUSU9OIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAwMC0wOC0yMlQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgQW5hcGh5bGFjdGljIHJlYWN0aW9uXHJcbjIpIFBydXJpdHVzXHJcbjMpIENvdWdoXHJcbjQpIE15YWxnaWEiLCJhc3Nlc3NPdXRjb21lIjoiVW5rbm93biIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6IkFuYXBoeWxhY3RpYyByZWFjdGlvbiIsIm91dGNvbWUiOiJVbmtub3duIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlNXRURFTiIsInN1c3BQcm9kIjoiSU5GTElYSU1BQiIsImNvbkNvbWl0IjoiZm9saWMgYWNpZFxyXG5pbmRvbWV0aGFjaW5cclxucHJlZG5pc29sb25lXHJcbmlidXByb2ZlblxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbmN5Y2xvc3BvcmluZVxyXG5tZXRob3RyZXhhdGVcclxuY2hvbGVjYWxjaWZlcm9sXHJcbm9tZXByYXpvbGUiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6IlBvcyIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MSwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjUyIiwiY2FzZU5hcnJhdGl2ZSI6IkNvbXBhbnkgTmFycmF0aXZlOiBcbkEgMzMgWUVBUiBPTEQgRkVNQUxFIFBBVElFTlQgSU5JVElBVEVEIFRSRUFUTUVOVCBXSVRIIFJFTUlDQURFIE9OIDI5Tk9WMTk5OSBGT1IgUkhFVU1BVE9JRCBBUlRIUklUSVMuIE9OIDE5TUFZMjAwMCwgT05FIEhPVVIgQUZURVIgVEhFIFJFTUlDQURFIElORlVTSU9OLCBUSEUgUEFUSUVOVCBGRUxUIEEgUFJFU1NVUkUgSU4gSEVSIENIRVNULCBUQUNIWUNBUkRJQSBBTkQgSVRDSElORyBJTiBIRVIgVEhST0FULiBUSEUgRVZFTlQgV0FTIERFU0NSSUJFRCBBUyBBTiBBTkFQSFlMQUNUSUMgUkVBQ1RJT04uIFRSRUFUTUVOVCBXSVRIIFNPTFUtQ09SVEVGIChIWURST0NPUlRJU09ORSkgV0FTIFNUQVJURUQuIEZJVkUgSE9VUlMgTEFURVIgVEhFIFBBVElFTlTCtFMgU1RBVEUgSEFEIElNUFJPVkVEIEFORCBQUk9WSURFRCBXSVRIIEJFVEFQUkVEIChCRVRIQU1FVEFaT05FKSBBTkQgUFJFRE5JU09MT04sIFNIRSBDT1VMRCBMRUFWRSBUSEUgSE9TUElUQUwuIFBSSU9SIFRPIFRISVMgRVZFTlQsIFRIRSBQQVRJRU5UIEhBRCBSRUFDVEVEIFdJVEggRkxVIExJS0UgUEFJTiBBTkQgQ09VR0hJTkcgV0hJQ0ggUkVNQUlORUQgRk9SIDIgV0VFS1MgQUZURVIgVEhFIEFETUlOSVNUUkFUSU9OIE9GIFJFTUlDQURFLiBUSEUgVFJFQVRNRU5UIFdJVEggUkVNSUNBREUgV0FTIERJU0NPTlRJTlVFRC4iLCJjb25NZWRzIjoiZm9saWMgYWNpZFxyXG5pbmRvbWV0aGFjaW5cclxucHJlZG5pc29sb25lXHJcbmlidXByb2ZlblxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbmN5Y2xvc3BvcmluZVxyXG5tZXRob3RyZXhhdGVcclxuY2hvbGVjYWxjaWZlcm9sXHJcbm9tZXByYXpvbGUiLCJwdExpc3QiOiJBbmFwaHlsYWN0aWMgcmVhY3Rpb24gKFByaW1hcnkpIUAjI0AhUHJ1cml0dXMhQCMjQCFDb3VnaCFAIyNAIU15YWxnaWEiLCJjYXNlSWQiOjIwMDY0MCwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDk1NiwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IklORkxJWElNQUIiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNjgsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjE2MTJOTEQwMDI1MTYiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwNTg1LCJwdCI6IkRydWcgaW50ZXJhY3Rpb24iLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxNi0xMS0xOFQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBEcnVnIGludGVyYWN0aW9uXHJcbjIpIEludGVybmF0aW9uYWwgbm9ybWFsaXNlZCByYXRpbyBpbmNyZWFzZWQiLCJhc3Nlc3NPdXRjb21lIjoiVW5rbm93biIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6Ik5vbi1TZXJpb3VzIiwic2VyaW91cyI6Ik5vbi1TZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiRHJ1ZyBpbnRlcmFjdGlvbiIsIm91dGNvbWUiOiJVbmtub3duIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6Ik5FVEhFUkxBTkRTIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFLFNJTVZBU1RBVElOLGFsbG9wdXJpbm9sLHBoZW5wcm9jb3Vtb24iLCJjb25Db21pdCI6Imxvc2FydGFuIHBvdGFzc2l1bVxyXG5idW1ldGFuaWRlXHJcbmJhcm5pZGlwaW5lXHJcbnNvdGFsb2wgaHlkcm9jaGxvcmlkZVxyXG5kaWdveGluXHJcbmVwbGVyZW5vbmVcclxuem9scGlkZW0iLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiRWxkZXJseSIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MiwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNTEiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSB0aGUgcmVndWxhdG9yeSBhdXRob3JpdHkgKE1GUiAjIE5MLUxSQi0yMjk4MDgpIG9uIDE4LU5PVi0yMDE2LiBcblxuU1VNTUFSWTpcblRoaXMgbW9kZXJhdGVseSBkb2N1bWVudGVkIG5vbi1zZXJpb3VzIHNwb250YW5lb3VzIHJlcG9ydCBmcm9tIGEgcGhhcm1hY2lzdCBjb25jZXJucyBhIG1hbGUgYWdlZCA3NiB5ZWFycywgd2l0aCBkcnVnIGludGVyYWN0aW9uIGFuZCBJTlIgaW5jcmVhc2VkIGZvbGxvd2luZyBhZG1pbmlzdHJhdGlvbiBvZiBzaW12YXN0YXRpbiwgYWxsb3B1cmlub2wsIHBoZW5wcm9jb3Vtb24sIGFuZCB0cmFtYWRvbCBmb3IgcGFpbiB3aXRoIGEgbGF0ZW5jeSBvZiAxNCBkYXlzIGFmdGVyIHN0YXJ0IG9mIHRyYW1hZG9sIGFuZCB1bmtub3duIGxhdGVuY3kgZm9yIHRoZSBvdGhlciBzdXNwZWN0IGRydWdzLiBUaGUgZG9zZSBmb3Igc2ltdmFzdGF0aW4gaXMgbm90IGNoYW5nZWQuIFRoZSBkb3NlIGZvciBhbGxvcHVyaW5vbCBpcyBub3QgY2hhbmdlZC4gVGhlIGRvc2UgZm9yIHBoZW5wcm9jb3Vtb24gaXMgbm90IGNoYW5nZWQuIFRoZSBkcnVnIHRyYW1hZG9sIHdhcyB3aXRoZHJhd24gYW5kIHJlcGxhY2VkIHdpdGggcGFyYWNldGFtb2wuIFRoZSBwYXRpZW50IG91dGNvbWUgaXMgdW5rbm93bi4gQ29uY29taXRhbnQgbWVkaWNhdGlvbnMgd2VyZSBkaWdveGluLCBidW1ldGFuaWRlLCBiYXJuaWRpcGluZSwgc290YWxvbCwgbG9zYXJ0YW4sIHpvbHBpZGVtLCBhbmQgZXBsZXJlbm9uLlxuXG5UaGUgbWVkaWNhbCBoaXN0b3J5IGluZGljYXRlcyB0aGF0IHRoZSBwYXRpZW50IGhhZCBkaWFiZXRlcyBtZWxsaXR1cyBub24taW5zdWxpbi1kZXBlbmRlbnQsIGhhZCBjYXJkaWFjIGZhaWx1cmUsIGhhcyBnb3V0IGFuZCBoYXMgaHlwZXJ0ZW5zaW9uLiBUaGUgcGF0aWVudCBoYXMgbm8ga25vd24gcGFzdCBkcnVnIHRoZXJhcHkuXG5cbjMtMTItMjAxNjogU2luY2UgdGhlIHJlcG9ydGVyIGRvZXMgbm90IGRpcmVjdGx5IHN0YXRlIHRoZXJlIGlzIGFuIGludGVyYWN0aW9uIGJldHdlZW4gdGhlIHN1c3BlY3QgZHJ1ZywgYW5kIG90aGVyIHBvc3NpYmxlIGludGVyYWN0aW5nIGRydWdzLCB0aGVzZSBkcnVncyB3ZXJlIGNvbnNpZGVyZWQgYXMgc3VzcGVjdCBhbmQgaW50ZXJhY3RpbmcgZHJ1Z3MgYnkgdGhlIGFzc2Vzc29yIG9mIHRoZSBOZXRoZXJsYW5kcyBQaGFybWFjb3ZpZ2lsYW5jZSBDZW50cmUgTGFyZWIuXG5cbldhcyB0aGUgcGF0aWVudCB0cmVhdGVkIGZvciB0aGUgZXZlbnQ6IE5vXG5XYXMgdGhlIHN1c3BlY3QgZHJ1ZyBwcmV2aW91c2x5IHVzZWQgYnkgdGhlIHBhdGllbnQ6IFllc1xuRGlkIHNpbWlsYXIgZXZlbnQgb2NjdXI/IFVua25vd25cbkFyZSB0aGVyZSBwb3NzaWJsZSBvdGhlciBjYXVzZXMgb3IgY2lyY3Vtc3RhbmNlcyB0aGF0IG1heSBoYXZlIGNhdXNlZCBvciBkZXRlcmlvcmF0ZWQgdGhlIGV2ZW50PyBZZXMsIGNvbXBsYWludHMgb2YgcGFpbiBjYW4gaW5jcmVhc2UgdGhlIElOUlxuRXh0cmEgaW5mb3JtYXRpb246IElzIG5vdCBhIHJlYWwgc2lkZSBlZmZlY3QsIGl0IGlzIHJlcG9ydGVkIGluIHRoZSBJbmZvcm1hdG9yaXVtIHVuZGVyIG5vdCByZXZpZXdlZCBpbnRlcmFjdGlvbjogaW5jaWRlbnRhbCByZXBvcnQgb2YgaW5jcmVhc2VkIElOUiB0aGF0IGlzIHBvc3NpYmx5IHJlbGF0ZWQgdG8gVHJhbWFkb2xcblBvc3NpYmxlIGludGVyYWN0aW9uIHdpdGggb3RoZXIgZHJ1Z3M6IE5vXG5Eb2VzIHRoZSBwYXRpZW50IHVzZSBjb25jb21pdGFudCBtZWRpY2F0aW9uOiBOb1xuNy0xMi0yMDE2OiBGVSByZXBvcnRlci4gSW4geW91ciByZXBvcnQgeW91IGFyZSBkZXNjcmliaW5nIHRoYXQg4oCcY29tcGxhaW50cyBvZiBwYWluIGNvdWxkIGluY3JlYXNlIHRoZSBJTlLigJ0uIEkgY291bGQgbm90IGZpbmQgYW55IGluZm9ybWF0aW9uIGFib3V0IHRoaXMgaW4gdGhlIGxpdGVyYXR1cmUuIFRoYXQgaXMgd2hhdCB0aGUgdGhyb21ib3NpcyBzZXJ2aWNlIHNhaWQgd2hlbiBJIGNoZWNrZWQgdGhpcyB3aXRoIHRoZW0uIFxuNy0xMi0yMDE2OiBGVSBBc3Nlc3Nvcjogbm8gY2hhbmdlcyBpbiB0aGUgcmVwb3J0IiwiY29uTWVkcyI6Imxvc2FydGFuIHBvdGFzc2l1bVxyXG5idW1ldGFuaWRlXHJcbmJhcm5pZGlwaW5lXHJcbnNvdGFsb2wgaHlkcm9jaGxvcmlkZVxyXG5kaWdveGluXHJcbmVwbGVyZW5vbmVcclxuem9scGlkZW0iLCJwdExpc3QiOiJEcnVnIGludGVyYWN0aW9uIChQcmltYXJ5KSFAIyNAIUludGVybmF0aW9uYWwgbm9ybWFsaXNlZCByYXRpbyBpbmNyZWFzZWQiLCJjYXNlSWQiOjI3NTU2NTQsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NTUsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJUUkFNQURPTCBIWURST0NITE9SSURFLFNJTVZBU1RBVElOLGFsbG9wdXJpbm9sLHBoZW5wcm9jb3Vtb24iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNjcsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjE1MTJOTEQwMTI5NTkiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiRU5BTEFQUklMIE1BTEVBVEUiLCJwcm9kdWN0SWQiOjEwMDg3NiwicHQiOiJBbmdpb2VkZW1hIiwicHJvZHVjdEZhbWlseSI6IjA0MjEgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTUtMTItMjRUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6IlllcyIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgQW5naW9lZGVtYSIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJOb24tU2VyaW91cyIsInNlcmlvdXMiOiJOb24tU2VyaW91cyIsInByaW1hcnlFdmVudCI6IkFuZ2lvZWRlbWEiLCJvdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwibGlzdGVkbmVzcyI6Ikxpc3RlZCIsImNvdW50cnkiOiJORVRIRVJMQU5EUyIsInN1c3BQcm9kIjoiRU5BTEFQUklMIE1BTEVBVEUiLCJjb25Db21pdCI6InRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuY2FyYmFzcGlyaW4gY2FsY2l1bVxyXG5jYWxjaXVtIGNhcmJvbmF0ZSwgY2hvbGVjYWxjaWZlcm9sXHJcbm5pbG90aW5pYlxyXG5wYW50b3ByYXpvbGUgc29kaXVtIiwiZ2VuZGVyIjoiTWFsZSIsImFnZSI6IkVsZGVybHkiLCJyZWNoYWxsZW5nZSI6IlVuayIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjUiLCJjYXNlTmFycmF0aXZlIjoiQ2FzZSB3YXMgcmVjZWl2ZWQgZnJvbSBIZWFsdGggQXV0aG9yaXR5IG9mIE5ldGhlcmxhbmRzIG9uIDI0LURFQy0yMDE1LiBcblxuU1VNTUFSWTpcblRoaXMgd2VsbCBkb2N1bWVudGVkIG5vbi1zZXJpb3VzIHNwb250YW5lb3VzIHJlcG9ydCBmcm9tIGEgcGhhcm1hY2lzdCBjb25jZXJucyBhIG1hbGUgYWdlZCA2OSB5ZWFycywgd2l0aCBhbmdpb2VkZW1hIChzd2VsbGluZyBvZiB0aHJvYXQgYW5kIG1vdXRoKSBmb2xsb3dpbmcgYWRtaW5pc3RyYXRpb24gb2YgZW5hbGFwcmlsIGZvciBwcm90ZWludXJpYSB3aXRoIGEgbGF0ZW5jeSBvZiAyIHllYXJzIGFmdGVyIHN0YXJ0LiBUaGUgZHJ1ZyBlbmFsYXByaWwgd2FzIHdpdGhkcmF3bi4gVGhlIHBhdGllbnQgcmVjb3ZlcmVkLiBDb25jb21pdGFudCBtZWRpY2F0aW9ucyB3ZXJlIHRyYW1hZG9sLCBjYXJiYXNhbGF0ZSBjYWxjaXVtLCBwYW50b3ByYXpvbGUsIG5pbG90aW5pYiwgY2FsY2l1bSwgY29tYmluYXRpb25zIHdpdGggdml0YW1pbiBEXG5cblRoZSBwYXRpZW50IGhhcyBubyBrbm93biBtZWRpY2FsIGhpc3RvcnkuIFRoZSBwYXRpZW50IGhhcyBubyBrbm93biBwYXN0IGRydWcgdGhlcmFweS5cblxuTkFSUkFUSVZFIElOQ0xVREUgQ0xJTklDQUw6XG5cbldhcyB0aGUgcGF0aWVudCB0cmVhdGVkIGZvciB0aGUgZXZlbnQ/IG5vXG5XYXMgdGhlIHN1c3BlY3QgZHJ1ZyBwcmV2aW91c2x5IHVzZWQgYnkgdGhlIHBhdGllbnQ/IG5vXG5BcmUgdGhlcmUgcG9zc2libGUgb3RoZXIgY2F1c2VzIG9yIGNpcmN1bXN0YW5jZXMgdGhhdCBtYXkgaGF2ZSBjYXVzZWQgb3IgZGV0ZXJpb3JhdGVkIHRoZSBldmVudD8gVW5rbm93blxuRXh0cmEgaW5mb3JtYXRpb246IFBhdGllbnQgZXhwZXJpZW5jZWQgc3dvbGxlbiB0aHJvYXQgYW5kIG1vdXRoIHNpbmNlIGEgbG9uZyB0aW1lIGFuZCB0aGlzIGluY3JlYXNlZC5cbldlIGFyZSB0aGlua2luZyBvZiBxdWluY2tlIG9lZGVtYSBcblBvc3NpYmxlIGludGVyYWN0aW9uIHdpdGggb3RoZXIgZHJ1Z3M/IG5vIFxuRG9lcyB0aGUgcGF0aWVudCB1c2UgY29uY29taXRhbnQgbWVkaWNhdGlvbj8geWVzIiwiY29uTWVkcyI6InRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxuY2FyYmFzcGlyaW4gY2FsY2l1bVxyXG5jYWxjaXVtIGNhcmJvbmF0ZSwgY2hvbGVjYWxjaWZlcm9sXHJcbm5pbG90aW5pYlxyXG5wYW50b3ByYXpvbGUgc29kaXVtIiwicHRMaXN0IjoiQW5naW9lZGVtYSAoUHJpbWFyeSkiLCJjYXNlSWQiOjI1ODc2NjMsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NTQsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJFTkFMQVBSSUwgTUFMRUFURSIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE2NiwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTMwOFBSVDAwNjU2NiIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJTVUdBTU1BREVYIFNPRElVTSIsInByb2R1Y3RJZCI6MTAxODcyLCJwdCI6IlBhcHVsZSIsInByb2R1Y3RGYW1pbHkiOiI4NjE2IElOSkVDVElPTiIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTMtMDgtMTJUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6IlllcyIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgUGFwdWxlIiwiYXNzZXNzT3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6Ik5vbi1TZXJpb3VzIiwic2VyaW91cyI6Ik5vbi1TZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiUGFwdWxlIiwib3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJQT1JUVUdBTCIsInN1c3BQcm9kIjoiU1VHQU1NQURFWCBTT0RJVU0iLCJjb25Db21pdCI6ImZlbnRhbnlsXHJcbnByb3BvZm9sXHJcbnJvY3Vyb25pdW0gYnJvbWlkZVxyXG5jZXBocmFkaW5lXHJcbnBhcmVjb3hpYiBzb2RpdW1cclxuYWNldGFtaW5vcGhlblxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbm1ldG9jbG9wcmFtaWRlIGh5ZHJvY2hsb3JpZGUiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiJBZHVsdCIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MywiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNDkiLCJjYXNlTmFycmF0aXZlIjoiVGhpcyBzcG9udGFuZW91cyByZXBvcnQgYXMgcmVjZWl2ZWQgZnJvbSBhIHBoeXNpY2lhbiByZWZlcnMgdG8gYSBtYWxlIHBhdGllbnQgb2YgdW5rbm93biBhZ2UuICAgIE9uIGFuIHVua25vd24gZGF0ZSB0aGUgcGF0aWVudCBzdGFydGVkIHRoZXJhcHkgd2l0aCBzdWdhbW1hZGV4IHNvZGl1bShCUklESU9OKS4gICAgICAgT24gYW4gdW5rbm93biBkYXRlLCA1IG1pbiBhZnRlciBvbnNldCBvZiB0aGVyYXB5IHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIHBhcHVsZXMgb24gaGVyIGZhY2UsIHRydW5rLCBhbmQgYWJkb21lbiA1IG1pbiBhZnRlciBicmlkaW9uIGFkbWluc2l0cmF0aW9uLlRoZSBvdXRjb21lIG9mIHBhcHVsZXMgb24gaGVyIGZhY2UsIHRydW5rLCBhbmQgYWJkb21lbiA1IG1pbiBhZnRlciBicmlkaW9uIGFkbWluc2l0cmF0aW9uIHdhcyByZXBvcnRlZCBhcyByZWNvdmVyZWQvcmVzb2x2ZWQuICAgVGhlIHJlcG9ydGVyIGNvbnNpZGVyZWQgcGFwdWxlcyBvbiBoZXIgZmFjZSwgdHJ1bmssIGFuZCBhYmRvbWVuIDUgbWluIGFmdGVyIGJyaWRpb24gYWRtaW5zaXRyYXRpb24gdG8gYmUgcmVsYXRlZCB0byBzdWdhbW1hZGV4IHNvZGl1bShCUklESU9OKS4gICBcblxuRm9sbG93LXVwIHJlY2VpdmVkIGZyb20gdGhlIHJlcG9ydGluZyBwaHlzaWNpYW4uIFRoZSBwYXRpZW50IHdhcyA0MCB5ZWFycyBvbGQuIFRoZSBzdXJnZXJ5IHdhcyBhIHR1YmFsIGxpZ2F0aW9uIGJ5IGxhcGFyb3Njb3B5IHBlcmZvcm1lZCBvbiAwNy1BVUctMjAxMy4gVGhlIGZvbGxvd2luZyBkcnVncyB3ZXJlIGNvbmNvbWl0YW50bHkgYWRtaW5pc3RlcmVkIG9uIHRoZSBzYW1lIGRheTogZmVudGFueWwgKGF0IDE2OjQ1KSwgcHJvcG9mb2wobWFudWZhY3R1cmVyIHVua25vd24pIChhdCAxNjo0NSksIEVzbWVyb24gKGF0IDE2OjQ1KSwgY2VmcmFkaW5lIChzdGFydGVkIGF0IDE2OjUwKSBhbmQgZ2l2ZW4gZXZlcnkgOCBob3VycyBmb3IgaW5mZWN0aW9uIHByb3BoeWxheGlzKSwgcGFyZWNveGliIHNvZGl1bShEWU5BU1RBVCkgKGF0IDE3OjA1KSwgcGFyYWNldGFtb2wgKGF0IDE3OjI1KSwgdHJhbWFkb2wgKGF0IDE3OjI1KSwgbWV0b2Nsb3ByYW1pZGUgaHlkcm9jaGxvcmlkZShQUklNUEVSQU4pIChhdCAxNzoyNSkuIFN1Z2FtbWFkZXggIHNvZGl1bShCUklESU9OKSB3YXMgYWRtaW5pc3RlcmVkIGF0IDE3OjM1LiBGaXZlIG1pbnV0ZXMgYWZ0ZXIgc3VnYW1tYWRleCAgc29kaXVtKEJSSURJT04pIGFkbWluaXN0cmF0aW9uLCB0aGUgcGF0aWVudCBkZXZlbG9wZWQgdGhlIHByZXZpb3VzbHkgcmVwb3J0ZWQgcGFwdWxlcyB3aGljaCB3ZXJlIG1vcmUgaW50ZW5zZSBvbiB0aGUgZmFjZS4gSHlkcm9jb3J0aXNvbmUgKDIwMCBtZykgYW5kIGNsZW1hc3RpbmUgKG9uZSBhbXBvdWxlKSB3ZXJlIGFkbWluaXN0ZXJlZCBhbmQgMTAgdG8gMTUgbWludXRlcyBsYXRlciB0aGUgcGF0aWVudCB3YXMgXCJtdWNoIGJldHRlclwiLiBBdCAyMDowMCB0aGUgZXZlbnQgaGFkIGNvbXBsZXRlbHkgcmVzb2x2ZWQuIER1cmluZyBob3NwaXRhbGl6YXRpb24gdGhlIHBhdGllbnQgY29udGludWVkIHJlY2VpdmluZyBwYXJlY294aWIgc29kaXVtKERZTkFTVEFUKSwgbWV0b2Nsb3ByYW1pZGUgaHlkcm9jaGxvcmlkZShQUklNUEVSQU4pLCBwYXJhY2V0YW1vbCBhbmQgY2VmcmFkaW5lIHdpdGhvdXQgYW55IGFkdmVyc2UgcmVhY3Rpb25zLiBUaGUgcGh5c2ljaWFuIHNhdyB0aGUgcGF0aWVudCBvbiAxMy1BVUctMjAxMyBhbmQgMTQtQVVHMjAxMyBhbmQgc2hlIHdhcyBmaW5lLiBUaGUgcGF0aWVudCBoYXMgbm8gaGlzdG9yeSBvZiBhbGxlcmdpZXMgYW5kIHNoZSB3YXMgbm90IHRha2luZyBhbnkgbWVkaWNhdGlvbiBhdCBob21lLiBUaGUgcGF0aWVudCBoYXMgaGlzdG9yeSBvZiBDLXNlY3Rpb24gYW5kIHZhcmljb3NlIHZlaW4gb3BlcmF0aW9uLCBidXQgb24gMDctQVVHLTIwMTMgd2FzIHRoZSBmaXJzdCB0aW1lIHRoYXQgdGhlIHBhdGllbnQgcmVjZWl2ZWQgc3VnYW1tYWRleCBzb2RpdW0oQlJJRElPTikuIFRoZSBwaHlzaWNpYW4gdXBkYXRlZCB0aGUgcmVsYXRlZG5lc3MgdG8gc3VnYW1tYWRleCBzb2RpdW0oQlJJRElPTikgdG8gcHJvYmFibGUgYW5kIGFzc2Vzc2VkIHRoZSBhZHZlcnNlIHJlYWN0aW9uIGFzIG5vbi1zZXJpb3VzLlxuXG5BZGRpdGlvbmFsIGluZm9ybWF0aW9uIGlzIG5vdCBleHBlY3RlZC4iLCJjb25NZWRzIjoiZmVudGFueWxcclxucHJvcG9mb2xcclxucm9jdXJvbml1bSBicm9taWRlXHJcbmNlcGhyYWRpbmVcclxucGFyZWNveGliIHNvZGl1bVxyXG5hY2V0YW1pbm9waGVuXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGVcclxubWV0b2Nsb3ByYW1pZGUgaHlkcm9jaGxvcmlkZSIsInB0TGlzdCI6IlBhcHVsZSAoUHJpbWFyeSkiLCJjYXNlSWQiOjIxNTY2MjUsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NTMsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJTVUdBTU1BREVYIFNPRElVTSIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE2NSwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTMwOEdCUjAwODU5MyIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJTSU1WQVNUQVRJTiIsInByb2R1Y3RJZCI6MTAwOTg5LCJwdCI6Ik15YWxnaWEiLCJwcm9kdWN0RmFtaWx5IjoiMDczMyBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMy0wOC0xNlQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBNeWFsZ2lhIiwiYXNzZXNzT3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6Ik15YWxnaWEiLCJvdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwibGlzdGVkbmVzcyI6Ikxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiU0lNVkFTVEFUSU4iLCJjb25Db21pdCI6ImFsZW5kcm9uYXRlIHNvZGl1bVxyXG5hc3BpcmluXHJcbmJpc29wcm9sb2xcclxuY2xvcGlkb2dyZWxcclxubG9zYXJ0YW4gcG90YXNzaXVtXHJcbnBvbHlldGh5bGVuZSBnbHljb2wgMzM1MCwgcG90YXNzaXVtIGNobG9yaWRlLCBzb2RpdW0gYmljYXJib25hdGUsIHNvZGl1bSBjaGxvcmlkZVxyXG5lc3RyaW9sXHJcbmFjZXRhbWlub3BoZW5cclxucmFtaXByaWxcclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZSIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IkVsZGVybHkiLCJyZWNoYWxsZW5nZSI6IlVuayIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjQ4IiwiY2FzZU5hcnJhdGl2ZSI6IlRoaXMgc3BvbnRhbmVvdXMgcmVwb3J0IGFzIHJlY2VpdmVkIGZyb20gYSBwaHlzaWNpYW4sIHZpYSByZWd1bGF0b3J5IGF1dGhvcml0eSAoIyBBRFIyMjIwNjk3NSkgcmVmZXJzIHRvIGEgODIgeWVhciBvbGQgZmVtYWxlIHBhdGllbnQuIFRoZSBwYXRpZW50J3MgY29uY3VyZW50IGNvbmRpdGlvbnMgaW5jbHVkZXMgYW50aWNvYWd1bGFudCB0aGVyYXB5LCBicmVhc3QgcGFpbiwgY2hyb25pYyBraWRuZXkgZGlzZWFzZSwgY29yb25hcnkgYXJ0ZXJpYWwgc3RlbnQgaW5zZXJ0aW9uLCBkZWVwIHZlaW4gdGhyb21ib3NpcyBsZWcsIGhpcCBkaXNjb21mb3J0LCBpc2NoZW1pYyBoZWFydCBkaXNlYXNlLCBsb3cgYmFjayBwYWluLCBub24gU1Qgc2VnbWVudCBlbGV2YXRpb24gbXlvY2FyZGlhbCBpbmZhcmN0aW9uLCBvc3Rlb2FydGhyaXRpcyBnZW5lcmFsaXplZCwgb3N0ZW9wb3Jvc2lzLCBwYWxwaXRhdGlvbnMsIHBhdGVsbGEgZnJhY3R1cmUsIHBlbmljaWxsaW4gYWxsZXJneSBhbmQgcG9zdG1lbm9wYXVzYWwgYXRyb3BoaWMgdmFnaW5pdGlzLlxuT24gMjItQVBSLTIwMTMgdGhlIHBhdGllbnQgc3RhcnRlZCB0aGVyYXB5IHdpdGggc2ltdmFzdGF0aW4obWFudWZhY3R1cmVyZSB1bmtub3duKShvcmFsbHksIHN0cmVuZ3RoLCBkb3NlLCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIEl0IHdhcyBhbHNvIHJlcG9ydGVkIHRoYXQgdGhlIHBhdGllbnQgc3RhcnRlZCB0aGVhcnB5IHdpdGggc2ltdmFzdGF0aW4obWFudWZhY3R1cmVyZSB1bmtub3duKSAob3JhbGx5LCBzdHJlbmd0aCwgZG9zZSwgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpIG9uIDA2LUFVRy0yMDEzLlxuQ29uY29taXRhbnQgdGhlcmFwaWVzIGluY2x1ZGVkIGFsZW5kcm9uaWMgYWNpZCAobWFudWZhY3R1cmVyIHVua25vd24pLCBhc3BpcmluLCBiaXNvcHJvbG9sLCBjbG9waWRvZ3JlbCwgbG9zYXJ0YW4gcG90YXNzaXVtIChtYW51ZmFjdHVyZXIgdW5rbm93biksIHBvbHlldGh5bGVuZSBnbHljb2wgMzM1MCArIHBvdGFzc2l1bSBjaGxvcmlkZSArIHNvZGl1bSBiaWNhcmJvbmF0ZSArIHNvZGl1bSBjaGxvcmlkZSAoTUFDUk9HT0wgSEVYQUwpLCBlc3RyaW9sKE9SVEhPLUdZTkVTVCksIGFjZXRhbWlub3BoZW4obWFudWZhY3R1cmVyIHVua25vd24pLCByYW1pcHJpbCBhbmQgdHJhbWFkb2wgaHlkcm9jaGxvcmlkZShtYW51ZmFjdHVyZXIgdW5rbm93bikuXG5PbiAwNi1BVUctMjAxMyB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBtdXNjdWxhciBwYWlucyAobXVzY3VsYXIgYWNoZXMpLlxuQWN0aW9uIHRha2VuIHdpdGggc2ltdmFzdGF0aW4obWFudWZhY3R1cmVyZSB1bmtub3duKSB3YXMgdW5rbm93bi5cblRoZSBzZXZlcml0eSBvZiBtdXNjbGUgcGFpbiB3YXMgcmVwb3J0ZWQgYXMgdW5rbm93bi5cbkl0IHdhcyByZXBvcnRlZCB0aGF0IGl0IHdhcyB1bmtub3duIGlmIGFueSB0cmVhdG1lbnQgd2FzIGdpdmVuIGZvciBtdXNjbGUgcGFpbi5cblRoZSBvdXRjb21lIG9mIG11c2N1bGFyIHBhaW5zIHdhcyByZXBvcnRlZCBhcyByZWNvdmVyZWQvcmVzb2x2ZWQgKHJlY292ZXJ5IGRhdGUgd2FzIG5vdCByZXBvcnRlZCkuXG5UaGUgcmVsYXRlZG5lc3MgYmV0d2VlbiBzaW12YXN0YXRpbihtYW51ZmFjdHVyZXJlIHVua25vd24pIGFuZCBtdXNjdWxhciBwYWlucyB3YXMgbm90IHJlcG9ydGVkLlxuXG5UaGUgbXVzY3VsYXIgcGFpbnMgd2VyZSBjb25zaWRlcmVkIGFzIG1lZGljYWxseSBzaWduaWZpY2FudCBieSB0aGUgcmVwb3J0ZXIuXG5cbkFkZGl0aW9uYWwgaW5mb3JtYXRpb24gaXMgbm90IGV4cGVjdGVkLiIsImNvbk1lZHMiOiJhbGVuZHJvbmF0ZSBzb2RpdW1cclxuYXNwaXJpblxyXG5iaXNvcHJvbG9sXHJcbmNsb3BpZG9ncmVsXHJcbmxvc2FydGFuIHBvdGFzc2l1bVxyXG5wb2x5ZXRoeWxlbmUgZ2x5Y29sIDMzNTAsIHBvdGFzc2l1bSBjaGxvcmlkZSwgc29kaXVtIGJpY2FyYm9uYXRlLCBzb2RpdW0gY2hsb3JpZGVcclxuZXN0cmlvbFxyXG5hY2V0YW1pbm9waGVuXHJcbnJhbWlwcmlsXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUiLCJwdExpc3QiOiJNeWFsZ2lhIChQcmltYXJ5KSIsImNhc2VJZCI6MjE1ODY1MiwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDk1MiwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlNJTVZBU1RBVElOIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTY0LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMzAxVVNBMDAxNzkxIiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6Ik1PTlRFTFVLQVNUIFNPRElVTSIsInByb2R1Y3RJZCI6MTAyMDEyLCJwdCI6IkFib3J0aW9uIGluZHVjZWQiLCJwcm9kdWN0RmFtaWx5IjoiMDQ3NiBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMi0xMC0yNVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiTm8iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIEFib3J0aW9uIGluZHVjZWRcclxuMikgRXhwb3N1cmUgZHVyaW5nIHByZWduYW5jeVxyXG4zKSBGb2V0YWwgaGVhcnQgcmF0ZSBhYm5vcm1hbCIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJBYm9ydGlvbiBpbmR1Y2VkIiwib3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgU1RBVEVTIiwic3VzcFByb2QiOiJNT05URUxVS0FTVCBTT0RJVU0sU0lNVkFTVEFUSU4sRVNPTUVQUkFaT0xFIE1BR05FU0lVTSxUUkFNQURPTCBIWURST0NITE9SSURFLGh5ZHJveHl6aW5lIGh5ZHJvY2hsb3JpZGUsRkxPTkFTRSxBVkFORElBLG5hYnVtZXRvbmUsTklUUk9RVUlDSyx2aXRhbWlucyAodW5zcGVjaWZpZWQpLGluc3VsaW4sU0VST1FVRUwsYnVwcm9waW9uIGh5ZHJvY2hsb3JpZGUsaHlkcm9jaGxvcm90aGlhemlkZSxCVVNQQVIsaHlkcm9jb2RvbmUsbWV0Zm9ybWluLGNhcmlzb3Byb2RvbCxiZW5hemVwcmlsIGh5ZHJvY2hsb3JpZGUsQU1BUllMIiwiY29uQ29taXQiOiIiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiJBZHVsdCIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IjIwMTMtMDgtMDIgMjI6MzU6NTkuMCIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6OCwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNDUiLCJjYXNlTmFycmF0aXZlIjoiVGhpcyByZXBvcnQgaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBhIGxpbmUgbGlzdGluZyBmcm9tIHRoZSBBRVJTIERhdGFiYXNlLlxuXG5UaGlzIHNwb250YW5lb3VzIHJlcG9ydCByZWZlcnMgdG8gYSA0MCB5ZWFycyBvbGQgZmVtYWxlIHBhdGllbnQgd2l0aCBtYWpvciBkZXByZXNzaW9uLiAgICBUaGUgcGF0aWVudCBzdGFydGVkIHRoZXJhcHkgd2l0aCBtb250ZWx1a2FzdCBzb2RpdW0oU0lOR1VMQUlSKS4gIE90aGVyIHN1c3BlY3QgdGhlcmFwaWVzIGluY2x1ZGVkIGh5ZHJveHl6aW5lIGh5ZHJvY2hsb3JpZGUgKGh5ZHJveHl6aW5lIGh5ZHJvY2hsb3JpZGUpLCBmbHV0aWNhc29uZSBwcm9waW9uYXRlIChGTE9OQVNFKSwgcm9zaWdsaXRhem9uZSBtYWxlYXRlIChBVkFORElBKSwgbmFidW1ldG9uZSAobmFidW1ldG9uZSksIG5pdHJvZ2x5Y2VyaW4gKE5JVFJPUVVJQ0spLCB2aXRhbWlucyAodW5zcGVjaWZpZWQpICh2aXRhbWlucyAodW5zcGVjaWZpZWQpKSwgaW5zdWxpbiAoaW5zdWxpbiksIHF1ZXRpYXBpbmUgZnVtYXJhdGUgKFNFUk9RVUVMKSwgYnVwcm9waW9uIGh5ZHJvY2hsb3JpZGUgKGJ1cHJvcGlvbiBoeWRyb2NobG9yaWRlKSwgaHlkcm9jaGxvcm90aGlhemlkZSAoaHlkcm9jaGxvcm90aGlhemlkZSksIHNpbXZhc3RhdGluIChaT0NPUiksIGVzb21lcHJhem9sZSBtYWduZXNpdW0gKE5FWElVTSksIGJ1c3Bpcm9uZSBoeWRyb2NobG9yaWRlIChCVVNQQVIpLCBoeWRyb2NvZG9uZSAoaHlkcm9jb2RvbmUpLCBtZXRmb3JtaW4gKG1ldGZvcm1pbiksIGNhcmlzb3Byb2RvbCAoY2FyaXNvcHJvZG9sKSwgdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSAodHJhbWFkb2wgaHlkcm9jaGxvcmlkZSksIGJlbmF6ZXByaWwgaHlkcm9jaGxvcmlkZSAoYmVuYXplcHJpbCBoeWRyb2NobG9yaWRlKSBhbmQgZ2xpbWVwaXJpZGUgKEFNQVJZTCkuIE5vIGNvbmNvbWl0YW50IG1lZGljYXRpb25zIHdlcmUgcmVwb3J0ZWQuXG5cbk9uIGFuIHVua25vd24gZGF0ZSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBhYm9ydGlvbiBpbmR1Y2VkIChtZWRpY2FsbHkgc2lnbmlmaWNhbnQpLCBmb2V0YWwgaGVhcnQgcmF0ZSBhYm5vcm1hbCAobWVkaWNhbGx5IHNpZ25pZmljYW50KSBhbmQgZHJ1ZyBleHBvc3VyZSBkdXJpbmcgcHJlZ25hbmN5IChtZWRpY2FsbHkgc2lnbmlmaWNhbnQpLiAgTm8gdHJlYXRtZW50IGluZm9ybWF0aW9uIHdhcyByZXBvcnRlZC4gICAgVGhlIG91dGNvbWUgb2YgYWJvcnRpb24gaW5kdWNlZCwgZm9ldGFsIGhlYXJ0IHJhdGUgYWJub3JtYWwgYW5kIGRydWcgZXhwb3N1cmUgZHVyaW5nIHByZWduYW5jeSB3YXMgdW5rbm93bi4gIFRoZSByZWxhdGVkbmVzcyBmb3IgYWJvcnRpb24gaW5kdWNlZCwgZm9ldGFsIGhlYXJ0IHJhdGUgYWJub3JtYWwgYW5kIGRydWcgZXhwb3N1cmUgZHVyaW5nIHByZWduYW5jeSB3YXMgdW5rbm93biBmb3IgbW9udGVsdWthc3Qgc29kaXVtKFNJTkdVTEFJUikuICAgXG5cbkl0IGhhcyBiZWVuIGRldGVybWluZWQgdGhhdCBjYXNlIDEzMDFVU0EwMDE3OTEgd2FzIGEgZHVwbGljYXRlIG9mIGNhc2UgMDgwN1VTQTAyOTg1LiBUaGVyZWZvcmUsIGNhc2UgMTMwMVVTQTAwMTc5MSB3YXMgYmVpbmcgZGVsZXRlZCBmcm9tIG91ciBmaWxlcyBhbmQgdGhlIGNhc2VzIGNvbnNvbGlkYXRlZCBpbnRvIGNhc2UgMDgwN1VTQTAyOTg1LlxuXG4yNi1BUFItMjAxMzogVGhpcyBpcyBhIGNvcnJlY3RlZCByZXBvcnQuIENoYW5nZWQgRTJCIGNvbXBhbnkgbnVtYmVyIHRvIEUyQiBSZXBvcnQgZHVwbGljYXRlIGluIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24uIiwiY29uTWVkcyI6IiIsInB0TGlzdCI6IkFib3J0aW9uIGluZHVjZWQgKFByaW1hcnkpIUAjI0AhRXhwb3N1cmUgZHVyaW5nIHByZWduYW5jeSFAIyNAIUZvZXRhbCBoZWFydCByYXRlIGFibm9ybWFsIiwiY2FzZUlkIjoyMDQwNDg3LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTUxLCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiTU9OVEVMVUtBU1QgU09ESVVNLFNJTVZBU1RBVElOLEVTT01FUFJBWk9MRSBNQUdORVNJVU0sVFJBTUFET0wgSFlEUk9DSExPUklERSxoeWRyb3h5emluZSBoeWRyb2NobG9yaWRlLEZMT05BU0UsQVZBTkRJQSxuYWJ1bWV0b25lLE5JVFJPUVVJQ0ssdml0YW1pbnMgKHVuc3BlY2lmaWVkKSxpbnN1bGluLFNFUk9RVUVMLGJ1cHJvcGlvbiBoeWRyb2NobG9yaWRlLGh5ZHJvY2hsb3JvdGhpYXppZGUsQlVTUEFSLGh5ZHJvY29kb25lLG1ldGZvcm1pbixjYXJpc29wcm9kb2wsYmVuYXplcHJpbCBoeWRyb2NobG9yaWRlLEFNQVJZTCIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE2MywiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTIwNFVTQTAzOTUwIiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDU4NSwicHQiOiJEcnVnIGRlcGVuZGVuY2UiLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMi0wNC0yNVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgRHJ1ZyBkZXBlbmRlbmNlIiwiYXNzZXNzT3V0Y29tZSI6IlVua25vd24iLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJEcnVnIGRlcGVuZGVuY2UiLCJvdXRjb21lIjoiVW5rbm93biIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsImNvbkNvbWl0IjoibW9ycGhpbmUgc3VsZmF0ZVxyXG50ZW1hemVwYW0iLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjozLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjQsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjI0NCIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGEgcGhhcm1hY2lzdCAobG9jYWwgcmVmZXJlbmNlICMgMTIvMDQvR0JSLzE1LCBjYXNlICMgVUsxMi0wMDQ0NzMpIGNvbmNlcm5pbmcgYSA2NCB5ZWFyIG9sZCBtYWxlIHdobyBhZGRpY3RlZCB0byB0cmFtYWRvbCBIQ2wgMTAwbWcgdGFibGV0cyBhbmQgdGhleSB3YW50IHRvIHdpdGhkcmF3IHRoZSBwYXRpZW50LiBEb2N0b3IgaGFkIHByZXNjcmliZWQgNTBtZyBvZiB0cmFtYWRvbCBNUiBlYWNoIGRheSB3aGljaCBvbmx5IGdhdmUgdHJhbWFkb2wgb3ZlciAxMiBob3VycyBzbyB0aGlzIHdhcyBub3QgaWRlYWwgYXMgdGhlIHBhdGllbnQgd2FzIHVzZWQgdG8gYSAyNCBob3VyIHByZXBhcmF0aW9uLiBQYXRpZW50IHdhcyBvbiBhIGxvdCBvZiBvdGhlciBtZWRpY2F0aW9uIGZyb20gXCJ0aGUga2l0Y2hlbiBzaW5rXCIgYnV0IG9ubHkgbGlzdCBNZyBzYWxpY3lsYXRlIChNU1QpIGFuZCB0ZW1hemVwYW0uIFxyXG5cclxuVGhlcmFweSB3aXRoIHRyYW1hZG9sIEhDbCB3YXMgd2l0aGRyYXduLiBBdCB0aGUgdGltZSBvZiB0aGlzIHJlcG9ydCwgdGhlIHBhdGllbnQncyBzdGF0dXMgd2FzIHVua25vd24uIFRoZSByZXBvcnRlciBmZWx0IHRoYXQgYWRkaWN0ZWQgdG8gdHJhbWFkb2wgSENsIDEwMG1nIHRhYmxldHMgd2FzIHNlcmlvdXMgYW5kIHJlbGF0ZWQgdG8gdGhlcmFweSB3aXRoIHRyYW1hZG9sIEhDTC5cclxuXHJcbkZvbGxvdyB1cCBpbmZvcm1hdGlvbiB3YXMgcmVjZWl2ZWQgZnJvbSB0aGUgcGhhcm1hY2lzdCBjb25jZXJuaW5nIHRoZSA2NCB5ZWFyIG9sZCBcIkJyaXRpc2hcIiBtYWxlIHBhdGllbnQgd2hvIG9uIDE1LU9DVC0yMDA3IHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIEhDbCwgMTAwIG1nIGNhcHN1bGUsIDEwMCBtZywgb25jZSBhIGRheSBmb3IgdGhlIHRyZWF0bWVudCBvZiBtdXNjdWxvc2tlbGV0YWwgYW5kIGNvbm5lY3RpdmUgdGlzc3VlIGRpc29yZGVyIG9yYWxseS4gIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgbW9ycGhpbmUgc3VsZmF0ZSAoTVNUKSwgYW5kIHRlbWF6ZXBhbS4gU3Vic2VxdWVudGx5IHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIGFkZGljdGVkIHRvIHRyYW1hZG9sIEhDbCAxMDBtZyB0YWJsZXRzLiBUaGUgZG9zYWdlIG9mIHRyYW1hZG9sIEhDbCB3YXMgcmVkdWNlZC4gVGhlIGdlbmVyYWwgcHJhY3RpdGlvbmVyIChHUCkgcmVkdWNlZCBkb3NhZ2UgYXMgbWVkaWNhbCBpbnRlcnZlbnRpb24uIFRoZXJhcHkgd2l0aCB0cmFtYWRvbCBIQ2wgd2FzIGxhc3RseSBkaXNjb250aW51ZWQgb24gMzAtQVBSLTIwMTIgYWNjb3JkaW5nIHRvIHRoZSBwYXRpZW50LiBUaGUgcmVwb3J0ZXIgZmVsdCB0aGF0IGFkZGljdGVkIHRvIHRyYW1hZG9sIEhDbCAxMDBtZyB0YWJsZXRzIHdhcyBzZXJpb3VzIGFuZCByZWxhdGVkIHRvIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLiBBdCB0aGUgdGltZSBvZiByZXBvcnRpbmcsIHRoZSBwYXRpZW50J3Mgb3V0Y29tZSB3YXMgdW5rbm93bi5cclxuXHJcbkFkZGljdGVkIHRvIHRyYW1hZG9sIEhDbCAxMDBtZyB0YWJsZXRzIHdhcyBjb25zaWRlcmVkIHRvIGJlIGFuIG90aGVyIGltcG9ydGFudCBtZWRpY2FsIGV2ZW50IGJ5IHRoZSByZXBvcnRlci4gXHJcblxyXG5ObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4iLCJjb25NZWRzIjoibW9ycGhpbmUgc3VsZmF0ZVxyXG50ZW1hemVwYW0iLCJwdExpc3QiOiJEcnVnIGRlcGVuZGVuY2UgKFByaW1hcnkpIiwiY2FzZUlkIjoxMTExNDI5LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTUwLCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE2MiwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTIwNFVTQTAzMjg3IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDU4NSwicHQiOiJTdWljaWRlIGF0dGVtcHQiLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMi0wNC0xNlQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBTdWljaWRlIGF0dGVtcHRcclxuMikgSGFlbW9ycmhhZ2VcclxuMykgSGFsbHVjaW5hdGlvbiIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyaW5nL1Jlc29sdmluZyIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6IlN1aWNpZGUgYXR0ZW1wdCIsIm91dGNvbWUiOiJSZWNvdmVyaW5nL1Jlc29sdmluZyIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsImNvbkNvbWl0Ijoid2FyZmFyaW4iLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiRWxkZXJseSIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6NiwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yNDMiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBMYWJvcGhhcm0gYXMgcGFydCBvZiBhIGJ1c2luZXNzIGFncmVlbWVudCAoTUZSLiBHQjAwMjUwMjsgTG9jYWwgcmVmZXJlbmNlICMgMTIvMDQvR0JSLzA2KSBmcm9tIGFuIGFnZW5jeSBhcyBBU1BSIGFuZCBhc3Nlc3NlZCBhcyBzZXJpb3VzIGluIG5hdHVyZS4gXG5cblRoaXMgc3BvbnRhbmVvdXMgcmVwb3J0IHJlZmVycmVkIHRvIGEgNzkgeWVhciBvbGQgbWFsZSBwYXRpZW50IHdobyB3YXMgdHJlYXRlZCB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgYW5kIHByZXNlbnRlZCBoYWxsdWNpbmF0aW9ucywgc3VpY2lkZSBhdHRlbXB0IChvdGhlciB0aGFuIG92ZXJkb3NlKSBhbmQgcHJvZnVzZSBibGVlZGluZy4gXG5cblBhdGllbnQgd2FzIHByZXNjcmliZWQgdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSAodW5rbm93biBkb3NlLCBpbmRpY2F0aW9uLCBicmFuZCBuYW1lKSBhbmQgZXhwZXJpZW5jZWQgaGFsbHVjaW5hdGlvbnMgb2YgdGhlIGhvc3BpdGFsIGhhZCBiZWVuIGRlbW9saXNoZWQgYXJvdW5kIGhpbSBhbmQgaGUgd2FzIHRvIGJsYW1lIGZvciB0aGlzLiBcblxuSGUgY291bGQgbm90IGxpdmUgd2l0aCB0aGUgZ3VpbHQgYW5kIG1hZGUgYSBwbGFuIHRvIGtpbGwgaGltc2VsZiwgdGhlbiB3ZW50IGludG8gYSBiYXRocm9vbSBhbmQgY3V0IGhpcyB3cmlzdCB3aXRoIGEgcmF6b3IgYmxhZGUuIEhlIHdhcyBhbHNvIG9uIHdhcmZhcmluIHRoZXJlZm9yZSBIZSBoYWQgYSBwcm9mdXNlIGJsZWVkaW5nLiBIaXMgd291bmQgd2FzIHN0aXRjaGVkIHVwLlxuXG5UaGUgcmVwb3J0IG1lbnRpb25lZCBcImhlIGhhZCBiZWVuIHRha2VuIHRvIHRoZSB0aGVhdHJlIHRvIHN0aWNoIHVwIHRoZSB3b3VuZCBhbHRob3VnaCBhdCBmaXJzdCBoZSByZWZ1c2VkIHRyZWF0bWVudC4gQWx0aG91Z2ggaGUgbGFja2VkIGNhcGFjaXR5LCBpdCB3YXMgYSB2ZXJ5IGRpZmZpY3VsdCBzaXR1YXRpb24gZnJvbSBhICBwcmFjdGljYWwgcG9pbnQgb2YgdmlldyB1bnRpbCBoaXMgZmFtaWx5IGNhbG1lZCBoaW0gZG93bi4gSGUgcmVtZW1iZXJlZCBpdCBhbGwgY2xlYXJseSwgYXBhcnQgZnJvbSB0aGUgYWJzdXJkaXR5IG9mIHRoZSBwcmVtaXNlLCBoZSBiZWhhdmVkIHF1aXRlIGxvZ2ljYWxseSBhbmQgdGhpcyB3YXMgcmVmbGVjdGVkIGluIGhvdyBoaXMgc3VpY2lkZSBhdHRlbXB0IGNvdWxkIGVhc2lseSBoYXZlIGJlZW4gZmF0YWwuXG5cbk1lZGljYWwgaGlzdG9yeSBpbmNsdWRpbmcgcHN5Y2hpYXRyaWM6IHdhcyBub3QgcHJvdmlkZWQuIFxuQ29uY29taXRhbnQgbWVkaWNhdGlvbnMgaW5jbHVkZWQgd2FyZmFyaW4gKHVua25vd24gZG9zZSwgaW5kaWNhdGlvbikgT3V0Y29tZSBmb3IgdGhlIHJlcG9ydGVkIGV2ZW50IHN1aWNpZGUgYXR0ZW1wdCAob3RoZXIgdGhhbiBvdmVyZG9zZSkgd2FzIHJlY292ZXJpbmc7IG91dGNvbWUgZm9yIHRoZSByZXBvcnQgaGFsbHVjaW5hdGlvbnMgd2FzIHVua25vd24uXG5cblRoZSByZXBvcnQgd2FzIGFzc2Vzc2VkIGFzIHNlcmlvdXMgZHVlIHRvIGJlaW5nIGxpZmUtdGhyZWF0ZW5pbmcuIFxuXG5EdXJpbmcgaW50ZXJuYWwgT0MgaXQgaGFkIGJlZW4gaW5kZW50aWZpZWQgdGhhdCBhZ2Ugb2YgdGhlIHBhdGllbnQgc291bGQgcmVhZCA3OSB5ZWFycyBvbGQgaW5zdGVhZCBvZiA3NiAoYXMgbWVudGlvbmVkIGluIHRoZSBiZWdpbm5pbmcgb2YgbmFycmF0aXZlKS4gRm9sbG93LXVwIHdhcyBwcm9kdWNlZCB0byBjb3JyZWN0IHRoaXMgZXJyb3IuIFxuXG5ObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4iLCJjb25NZWRzIjoid2FyZmFyaW4iLCJwdExpc3QiOiJTdWljaWRlIGF0dGVtcHQgKFByaW1hcnkpIUAjI0AhSGFlbW9ycmhhZ2UhQCMjQCFIYWxsdWNpbmF0aW9uIiwiY2FzZUlkIjoxMTY4OTI2LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTQ5LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE2MSwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTIwM0dCUjAwMTA1IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDU4NSwicHQiOiJIeXBvZ29uYWRpc20iLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiTGl0ZXJhdHVyZSBNYXJrZXRlZCIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDEyLTAzLTI2VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiItIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBIeXBvZ29uYWRpc20iLCJhc3Nlc3NPdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJIeXBvZ29uYWRpc20iLCJvdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsQ09EQU1JTkUgKGRpcGhlbmh5ZHJhbWluZSBoeWRyb2NobG9yaWRlICgrKSBwaG9sY29kaW5lKSxPWFlDT05USU4iLCJjb25Db21pdCI6IiIsImdlbmRlciI6Ik1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjQyIiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gYSBwaHlzaWNpYW4gd2hvIGlzIGFsc28gdGhlIGF1dGhvciBvZiBhIGxpdGVyYXR1cmUgYXJ0aWNsZSB0aXRsZSBzdGF0ZWQgYXMgYWJvdmUgdmlhIExhYm9waGFybSBhcyBwYXJ0IG9mIGEgYnVzaW5lc3MgYWdyZWVtZW50IChtYW51ZmFjdHVyZXIgbnVtYmVyIEdCLUxBQk9QSEFSTVctMDAyNDkzKSBjb25jZXJuaW5nIGEgNDggeWVhciBvbGQgbWFsZSB3aXRoIG1hdHVyaXR5LW9uc2V0IGRpYWJldGVzIG9mIHRoZSB5b3VuZyAoMjAgeWVhcnMpIGFuZCBvcGlvaWQgdHlwZSBkZXBlbmRlbmNlIHdobyB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCAxMDAgbWcgY2Fwc3VsZSwgMTAwIG1nLCBvbmNlIGV2ZXJ5IHNpeC1laWdodCBob3VycyBmb3IgdGhlIHRyZWF0bWVudCBvZiBwZXJpcGhlcmFsIG5ldXJvcGF0aHkgKGR1cmF0aW9uIG5vdCByZXBvcnRlZCkuIENvbmNvbWl0YW50IHN1c3BlY3QgdGhlcmFweSBpbmNsdWRlZCBkaXBoZW5oeWRyYW1pbmUgaHlkcm9jaGxvcmlkZSAoKykgcGhvbGNvZGluZSAoQ09EQU1JTkUgKGRpcGhlbmh5ZHJhbWluZSBoeWRyb2NobG9yaWRlICgrKSBwaG9sY29kaW5lKSkgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGVyaXBoZXJhbCBuZXVyb3BhdGh5IChkb3NlIGFuZCBkdXJhdGlvbiBub3QgcmVwb3J0ZWQpIGFuZCBveHljb2RvbmUgaHlkcm9jaGxvcmlkZSAoT1hZQ09OVElOKSAzMG1nIHRhYmxldCB0d2ljZSBkYWlseSBmb3IgdGhlIHRyZWF0bWVudCBvZiBwZXJpcGhlcmFsIG5ldXJvcGF0aHkgKGR1cmF0aW9uIG5vdCByZXBvcnRlZCkuIFN1YnNlcXVlbnRseSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBvcGlvaWQgaW5kdWNlZCBoeXBvZ29uYWRpc20uIFRoZSByZXBvcnQgc3RhdGVkIFwiIGEgMjAgeWVhciBoaXN0b3J5IG9mIE1PRFkgKG1hdHVyaXR5IG9uc2V0IGRpYWJldGVzIG9mIHRoZSB5b3VuZykgIGNoYXJhY3RlcmlzZWQgYnkgcG9vciBnbHljYWVtaWMgY29udHJvbCAoSGJBMWMgcmFuZ2UgOC41LTEyLjIlKSwgZGViaWxpdGF0aW5nIHBlcmlwaGVyYWwgbmV1cm9wYXRoeS4gUGF0aWVudCBhbHNvIHJlcG9ydGVkIHByb2xvbmdlZCBvcGlvaWQgY29uc3VtcHRpb24gcHJlc2NyaWJlZCBmb3IgaGlzIHBlcmlwaGVyYWwgbmV1cm9wYXRoeSBmb3IgdGhlIHByZWNlZGluZyAzIHllYXJzIGluY2x1ZGluZyBjby1jb2RhbWluIGluaXRpYWxseSAoU29scGFkb2wsIHRoZXJhcHkgZHVyYXRpb24sIGRvc2FnZSB3ZXJlIG5vdCByZXBvcnRlZCksIGZvbGxvd2luZyBhIG1haW50ZW5hbmNlIHByZXNjcmlwdGlvbiBvZiB0cmFtYWRvbCAxMDAgbWcgNi04IGhvdXJseSBhbmQgc3Vic2VxdWVudGx5IG94eWNvbnRpbiAzMCBtZyB0d2ljZSBkYWlseS4gUGF0aWVudCBjb21wbGFpbmVkIG9mIHJlZHVjZWQgbGliaWRvIGFuZCBlcmVjdGlsZSBkeXNmdW5jdGlvbi4gT24gcGh5c2ljYWwgZXhhbWluYXRpb24gaGUgaGFkIG5vcm1hbCBzZWNvbmRhcnkgc2V4dWFsIGNoYXJhY3RlcmlzdGljcyBhbmQgc2Vuc2Ugb2Ygc21lbGwuIExhYm9yYXRvcnkgcmVzdWx0cyByZXZlYWxlZDogU2VydW0gYmlvY2hlbWlzdHJ5IGF0IDkgYS5tLi0gdGVzdG9zdGVyb25lIDcuMSBubW9sL2wgKE5SIDEwLTM0KSwgZm9sbGljbGUgc3RpbXVsYXRpbmcgaG9ybW9uZSAoRlNIKSAxLjAgSVUvTCAoTlIgMS4gNS05LjApIGFuZCBsdXRlaW5pemluZyBob3Jtb25lIChMSCkgMC44IElVL0wgKE5SIDEuNS04LjApLiBUaGVzZSByZXN1bHRzIHdlcmUgY29uc2lzdGVudCB3aXRoIHNlY29uZGFyeSBoeXBvZ29uYWRpc20uIEZ1cnRoZXIgaW52ZXN0aWdhdGlvbnMgcmV2ZWFsZWQgbm9ybWFsIGFudGVyaW9yIHBpdHVpdGFyeSBmdW5jdGlvbiBpbmNsdWRpbmcsIHNlcnVtIHByb2xhY3RpbiAxMjcgbVUvbCAoTlI8MzUwKSwgc2VydW0gdGh5cm94aW5lIChmVDQpIDE3LjAgcG1vbC9sIChOUiA5LjQtMTguNiksICB0aHlyb2lkLXN0aW11bGF0aW5nIGhvcm1vbmUgKFRTSCkgMi43IG1VL2wgKE5SIDAuMy00LjQpLCBncm93dGggaG9ybW9uZSAoR0gpIDAuMiBuZy9tbCwgaW5zdWxpbi1saWtlIGdyb3d0aCBmYWN0b3IgSSAoSUdGLTEpIDE5IG5tb2wvbCAoTlIgMTItMzUpLCBzaG9ydCBzeW5hY3RoZW4gdGVzdCBiYXNlbGluZSBjb3J0aXNvbDogMTk1IG5tb2wvbDsgMzAgbWluIGNvcnRpc29sOiA1MjUgbm1vbC9sLiBJcm9uIHN0dWRpZXMgYW5kIG1hZ25ldGljIHJlc29uYW5jZSBpbWFnaW5nIChNUkkpIHBpdHVpdGFyeS8gb2xmYWN0b3J5IGJ1bGJzIHdhcyBub3JtYWwuIFBhdGllbnQgd2FzIHVuYWJsZSB0byByZWR1Y2Ugb3Igc3RvcCBvcGlvaWRzIGFuZCB3YXMgY29tbWVuY2VkIG9uIHN1c3Rhbm9uIDI1MCBtZyBvbmNlIGEgbW9udGgsIHdpdGhvdXQgY2xpbmljYWwgYmVuZWZpdFwiLiBUaGUgYWN0aW9uIHRha2VuIHdpdGggcmVnYXJkcyB0byB0aGVyYXB5IHdpdGggdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSB3YXMgdW5rbm93bi4gVGhlIGFjdGlvbiB0YWtlbiB3aXRoIHJlZ2FyZHMgdG8gdGhlcmFweSB3aXRoIGRpcGhlbmh5ZHJhbWluZSBoeWRyb2NobG9yaWRlICgrKSBwaG9sY29kaW5lIChDT0RBTUlORSAoZGlwaGVuaHlkcmFtaW5lIGh5ZHJvY2hsb3JpZGUgKCspIHBob2xjb2RpbmUpKSBhbmQgb3h5Y29kb25lIGh5ZHJvY2hsb3JpZGUgKE9YWUNPTlRJTikgd2FzIGFsc28gdW5rbm93bi4gVGhlIHBhdGllbnQncyBvcGlvaWQgaW5kdWNlZCBoeXBvZ29uYWRpc20gcGVyc2lzdGVkLlxyXG5cclxuIFxyXG5UaGUgcmVwb3J0aW5nIHBoeXNpY2lhbiBzdGF0ZWQgXCJIaXMgaHlwb2dvbmFkb3Ryb3BoaWMgaHlwb2dvbmFkaXNtIHdhcyBhdHRyaWJ1dGVkIHRvIGNocm9uaWMgb3Bpb2lkIHVzYWdlIGluIHRoZSBhYnNlbmNlIG9mIGEgc2Vjb25kYXJ5IGNhdXNlIGFuZCBldmlkZW5jZSBvZiBwcm9sb25nZWQgb3Bpb2lkIHVzYWdlLiBIeXBvZ29uYWRpc20gaXMgYSAgcmVjb2duaXNlZCBvdXRjb21lIG9mIG9waW9pZCB0cmVhdG1lbnQgaW4gcGF0aWVudHMgcmVjZWl2aW5nIHByb2xvbmdlZCBhbmQgaGlnaCBkb3NlcyBvZiBvcGlvaWRzLiBcIlxyXG5cclxuVGhlIHJlcG9ydGluZyBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBjb25zaWRlcmVkIHRoZSBvcGlvaWQgaW5kdWNlZCBoeXBvZ29uYWRpc20gdG8gYmUgXCJzZXJpb3VzIGR1ZSB0byB0aGUgbWVkaWNhbCBzaWduaWZpY2FuY2Ugb2YgdGhlIHJlcG9ydGVkIGV2ZW50XCIuIFxyXG5cclxuXHJcbiBObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4iLCJjb25NZWRzIjoiIiwicHRMaXN0IjoiSHlwb2dvbmFkaXNtIChQcmltYXJ5KSIsImNhc2VJZCI6MTM4MzAyMSwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDk0OCwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsQ09EQU1JTkUgKGRpcGhlbmh5ZHJhbWluZSBoeWRyb2NobG9yaWRlICgrKSBwaG9sY29kaW5lKSxPWFlDT05USU4iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNjAsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjEyMDNHQlIwMDEwMCIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDA1ODUsInB0IjoiU2VpenVyZSIsInByb2R1Y3RGYW1pbHkiOiI5Mzg0IE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDEyLTAzLTI2VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiJZZXMiLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIFNlaXp1cmVcclxuMikgSHlwb2dseWNhZW1pYSIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJTZWl6dXJlIiwib3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSxGTFVPWEVUSU5FIiwiY29uQ29taXQiOiJmb2xpYyBhY2lkXHJcbnZpdGFtaW5zXHJcbmFzY29yYmljIGFjaWQgKCspIHZpdGFtaW4gQiBjb21wbGV4XHJcbmFjZXRhbWlub3BoZW5cclxudGhpYW1pbmUiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjUsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MiwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjQxIiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gYW4gYWdlbmN5IHZpYSBMYWJvcGhhcm0gRXVyb3BlIGFzIHBhcnQgb2YgYnVzaW5lc3MgYWdyZWVtZW50IChtYW51ZmFjdHVyZXIgbnVtYmVyIEdCLUxBQk9QSEFSTVctMDAyNDkxKS4gVGhpcyB3YXMgb3JpZ2luYWxseSByZXBvcnRlZCBieSBhbiBhZ2VuY3ksIHBoYXJtYWNpc3QgYW5kIHBoeXNpY2lhbiBjb25jZXJuaW5nIGEgNDkgeWVhciBvbGQgZmVtYWxlIHBhdGllbnQgd2hvIGFic3RhaW5zIGZyb20gYWxjb2hvbCB3aXRoIGFsY29ob2xpYyB3aXRoZHJhd2FsIHN5bXB0b21zIGFuZCBkZXByZXNzaW9uIGFuZCBhIGhpc3Rvcnkgb2YgYWxjb2hvbCB1c2UsIGZlbW9yYWwgbmVjayBmcmFjdHVyZSBhbmQgc3VyZ2VyeSBmb3IgdGhlIGZlbW9yYWwgbmVjayBmcmFjdHVyZSAoRGVjZW1iZXIgMjAxMSkgd2hvIG9uIDAyLUpBTi0yMDExIHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUsIGNhcHN1bGUgZm9yIHRoZSB0cmVhdG1lbnQgb2YgcGFpbiAoZG9zZSBub3QgcmVwb3J0ZWQpLiBDb25jb21pdGFudCBzdXNwZWN0IHRoZXJhcHkgaW5jbHVkZWQgZmx1b3hldGluZSB3YXMgcGxhY2VkIG9uIDE3LUpBTi0yMDExIChkb3NlLCBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBUaGVyYXB5IHdpdGggZmx1b3hldGluZSB3YXMgaW50ZXJydXB0ZWQgb24gYW4gdW5rbm93biBkYXRlLCBhbmQgcmVpbnRyb2R1Y2VkIG9uIDE2LUpBTi0yMDEyIGF0IGEgbG93ZXIgZG9zZSAoZG9zZSBub3QgcmVwb3J0ZWQpLiBPdGhlciBjb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIHBhcmFjZXRhbW9sLCB0aGlhbWluZSwgZm9saWMgYWNpZCwgdml0YW1pbnMgKHVuc3BlY2lmaWVkKSBhbmQgYXNjb3JiaWMgYWNpZC92aXRhbWluIEIgY29tcGxleCAoUEFCUklORVgpLiBPbiAwMy1ERUMtMjAxMSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBoeXBvZ2x5Y2FlbWlhLiBPbiAgMDktSkFOLTIwMTIgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgY29udnVsc2lvbnMuIEl0IHdhcyByZXBvcnRlZCB0aGF0IFwiT24gMDNERUMyMDExLCBhIGh5cG9nbHljYWVtaWMgYmxvb2QgdGVzdCByZXN1bHQgd2FzIG5vdGVkLiBBZnRlciBzdXJnZXJ5IGZvciBoZXIgZnJhY3R1cmVkIGZlbXVyIG5lY2sgaW4gRGVjZW1iZXIgMjAxMSwgcGF0aWVudCBoYWQgYSBsb3cgQm9laHJpbmdlciBNYW5uaGVpbSAoQk0pIHRlc3QgdmFsdWUgb2YgYXBwcm94aW1hdGVseSAzIG9uIGEgbnVtYmVyIG9mIG9jY2FzaW9ucyB3aGljaCB3ZXJlIG5vdCBjb25maXJtZWQgd2l0aCBsYWJvcmF0b3J5IHN1Z2Fycy4gVGhlIHJlcG9ydGVyIHN0YXRlZCB0aGF0IHRoZSBwYXRpZW50IHdhcyB0byB0aGVpciBrbm93bGVkZ2UgbmV2ZXIgc3ltcHRvbWF0aWMgYnV0IGhhZCBiZWVuIGdpdmVuIEx1Y296YWRlIGJpc2N1aXRzLiBPbiAwOUpBTjIwMTIsIHBhdGllbnQgd2FzIGFkbWl0dGVkIHdpdGggY29udnVsc2lvbnMuIFdoZW4gc2hlIGFycml2ZWQgaW4gdGhlIHJlc3VzY2l0YXRpb24gZGVwYXJ0bWVudCBoZXIgQk0gd2FzIDQuMiAodW5pdHMgYW5kIG5vcm1hbCByYW5nZSBub3QgcmVwb3J0ZWQpXCIuIE9uIDA5LUpBTi0yMDEyIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIHdhcyBkaXNjb250aW51ZWQuIFRoZSByZXBvcnQgYWxzbyBzdGF0ZWQgXCJCTSBvbiAxM0pBTjIwMTIgd2VyZSAxLjY7IG9uIDE2SkFOMjAxMiAtIDIuOCBhbmQgMy4xLTMuNjsgUGF0aWVudCB3YXMgYXN5bXB0b21hdGljIGFsbCB0aGUgdGltZS4gTGFiIGluc3VsaW4sIEMtcGVwdGlkZSBhbmQgbGFib3JhdG9yeSBzdWdhciB3ZXJlIGFycmFuZ2VkLiBPbiAxN0pBTjIwMTIgaGVyIEJNIHdhcyAyLjYgYnV0IGxhYm9yYXRvcnkgc3VnYXIgd2FzIDYuMSAodW5pdHMgYW5kIG5vcm1hbCByYW5nZSBub3QgcmVwb3J0ZWQpLiBObyBmdXJ0aGVyIHRlc3RzIHdlcmUgZG9uZVwiLiBTdWJzZXF1ZW50bHkgIG9uIDE5LUpBTi0yMDEyLCB0aGUgcGF0aWVudCB3YXMgcmVwb3J0ZWQgdG8gaGF2ZSBjb21wbGV0ZWx5IHJlY292ZXJlZCBmcm9tIHRoZSBoeXBvZ2x5Y2FlbWlhLiBUaGUgb3V0Y29tZSBvZiB0aGUgY29udnVsc2lvbiB3YXMgdW5rbm93bi4gXHJcblxyXG5JdCB3YXMgYWxzbyByZXBvcnRlZCB0aGF0IFwiVGhlIHJlcG9ydGluZyBwaGFybWFjaXN0IGNvbnNpZGVyZWQgZXZlbnQgaHlwb2dseWNlbWlhIGNvdWxkIGhhdmUgYmVlbiBkdWUgdG8gdHJlYXRtZW50IHdpdGggZmx1b3hldGluZS4gVGhlIHJlcG9ydGluZyBwaHlzaWNpYW4gY29uc2lkZXJlZCB0aGUgaHlwb2dseWNhZW1pYSB0byBiZSBub24tc2VyaW91cyBhbmQgbm90IHJlbGF0ZWQgdG8gdGhlIHBhdGllbnQncyBoeXBvZ2x5Y2FlbWlhLiBSZXBvcnRlciBjb25zaWRlcmVkIGNvbnZ1bHNpb25zIHRvIGJlIHJlbGF0ZWQgdG8gdHJhbWFkb2wgdHJlYXRtZW50LiBUaGUgcmVwb3J0ZXIgc3RhdGVkIHRoYXQgdGhlIHBhdGllbnQgaGFkIGRvbmUgcHJldmlvdXMgQk1zIGF0IGhvbWUgYW5kIHRoZXNlIGhhZCBiZWVuIG5vcm1hbCwgdGhlcmVmb3JlIHRoZXkgY29uY2x1ZGVkIHRoYXQgdGhlIHBhdGllbnQgaGFkIGFzeW1wdG9tYXRpYyBidXQgc3VzcGljaW91cyBsb3cgQk1zIHdoaWNoIG1heSBoYXZlIGJlZW4gZHVlIHRvIGxvdyBnbHljb2dlbiB3aXRoIGhlciBwYXN0IGFsY29ob2wgaGlzdG9yeVwiLiBcclxuXHJcblRoZSByZXBvcnRpbmcgaGVhbHRoY2FyZSBwcm9mZXNzaW9uYWwgY29uc2lkZXJlZCB0aGUgY29udnVsc2lvbiB3YXMgYW4gb3RoZXIgaW1wb3J0YW50IG1lZGljYWwgZXZlbnQuIFxyXG5cclxuRm9sbG93LXVwIGluZm9ybWF0aW9uIHdhcyByZWNlaXZlZCBvbiAwNS1BUFItMjAxMi4gTGFib3JhdG9yeSB0ZXN0cyB3ZXJlIHVwZGF0ZWQuIFxyXG5cclxuRm9sbG93LXVwIGluZm9ybWF0aW9uIHdhcyByZWNlaXZlZCBvbiAyNS1BUFItMjAxMi4gVGhlIHBhdGllbnQncyBzdXNwZWN0IHRoZXJhcHkgYW5kIHRoZSAgc2VyaW91cyBjcml0ZXJpYSBmb3IgdGhlIGFkdmVyc2UgZXZlbnQgb2YgY29udnVsc2lvbiB3ZXJlIHVwZGF0ZWQuIEl0IHdhcyByZXBvcnRlZCB0aGF0IHRoZSBwYXRpZW50IFwid2FzIGFkbWl0dGVkIG9uIDAyLURFQy0yMDExIHdpdGggZnJhY3R1cmUgb2YgbmVjayBvZiBmZW11ciwgc2hlIHdhcyBvbiBmbHVveGV0aW5lIGJ1dCBub3QgdHJhbWFkb2wuIFRyYW1hZG9sIHdhcyBzdGFydGVkIG9uIDMtREVDLTIwMTEgYXQgNTAgLSAxMDAgbWcgZm91ciB0aW1lcyBkYWlseSBhbmQgd2hlbiByZWFkbWl0dGVkIG9uIDA5LUpBTi0yMDEyIHRoZSBwYXRpZW50IHdhcyBzdGlsbCBvbiA1MCAtIDEwMCBtZyBmb3VyIHRpbWVzIGRhaWx5LiBUcmFtYWRvbCB3YXMgc3RvcHBlZCBvbiBhbiB1bmtub3duIGRhdGUgYnV0IHJlLXN0YXJ0ZWQgb24gMTItSkFOLTIwMTIgd2l0aCA1MCBtZyBhcyBuZWVkZWQuIFRyYW1hZG9sIDUwIG1nIHdhcyBub3QgZWZmZWN0aXZlIGFuZCB3YXMgaW5jcmVhc2VkIHRvIDEwMCBtZyBvbiAxOC1KQU4tMjAxMi4gSXQgd2FzIHJlcG9ydGVkIHRoYXQgdGhlIHBhdGllbnQgd2FzIHByb2JhYmx5IHRha2luZyAzMDAgLSA0MDAgbWcgcGVyIGRheVwiLlxyXG5cclxuXHJcbk5vIGZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlLiIsImNvbk1lZHMiOiJmb2xpYyBhY2lkXHJcbnZpdGFtaW5zXHJcbmFzY29yYmljIGFjaWQgKCspIHZpdGFtaW4gQiBjb21wbGV4XHJcbmFjZXRhbWlub3BoZW5cclxudGhpYW1pbmUiLCJwdExpc3QiOiJTZWl6dXJlIChQcmltYXJ5KSFAIyNAIUh5cG9nbHljYWVtaWEiLCJjYXNlSWQiOjEyNjA3NTcsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NDcsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJUUkFNQURPTCBIWURST0NITE9SSURFLEZMVU9YRVRJTkUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNTksImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjEyMDJHQlIwMDA0OSIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJBTEVORFJPTkFURSBTT0RJVU0iLCJwcm9kdWN0SWQiOjEwMDgwNywicHQiOiJPc3Rlb25lY3Jvc2lzIG9mIGphdyIsInByb2R1Y3RGYW1pbHkiOiIwMjE3IE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJSZXBvcnQgRnJvbSBTdHVkeSIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDEyLTAyLTA4VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiJZZXMiLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIE9zdGVvbmVjcm9zaXMgb2YgamF3IiwiYXNzZXNzT3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiTm9uLVNlcmlvdXMiLCJzZXJpb3VzIjoiTm9uLVNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJPc3Rlb25lY3Jvc2lzIG9mIGphdyIsIm91dGNvbWUiOiJOb3QgUmVjb3ZlcmVkL05vdCBSZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiQUxFTkRST05BVEUgU09ESVVNIiwiY29uQ29taXQiOiJvbWVwcmF6b2xlXHJcbndhcmZhcmluXHJcbnByZWRuaXNvbG9uZVxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbmNpdGFsb3ByYW1cclxuYXNwaXJpblxyXG5hY2V0YW1pbm9waGVuICgrKSBjb2RlaW5lIHBob3NwaGF0ZVxyXG5jb3J0aWNvc3Rlcm9pZHMgKHVuc3BlY2lmaWVkKVxyXG5ub25zdGVyb2lkYWwgYW50aS1pbmZsYW1tYXRvcnkgZHJ1ZyAodW5zcGVjaWZpZWQpXHJcbm5pY29yYW5kaWwiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjEsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjQiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBhbiBpbnZlc3RpZ2F0b3IgY29uY2VybmluZyBhIGZlbWFsZSBwYXRpZW50IHdobyBlbnRlcmVkIHRoZSBpbnZlc3RpZ2F0b3IgaW5pdGlhdGVkIHN0dWR5IGVudGl0bGVkIFwiQSAyIHllYXIgbmF0aW9uYWwgbmV3IHBhdGllbnQgcmVnaXN0cmF0aW9uIG9mIHBhdGllbnRzIHdpdGggYmlzcGhvc3Bob25hdGUtaW5kdWNlZCBvc3Rlb25lY3JvdGljIGphdyAoQk9OSikgcmVmZXJyZWQgdG8gT3JhbCBhbmQgbWF4aWxsb2ZhY2lhbCBkZXBhcnRtZW50IGFuZCBkZW50YWwgaG9zcGl0YWwgaW4gRW5nbGFuZCwgV2FsZXMsIFNjb3RsYW5kIGFuZCBOb3J0aGVybiBJcmVsYW5kXCIuIFRoZSBwYXRpZW50IHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIGFsZW5kcm9uYXRlIHNvZGl1bSwgdGFibGV0IChkb3NlLCBkdXJhdGlvbiBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBDb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIG9tZXByYXpvbGUsIHdhcmZhcmluLCBuaWNvbGFuZGlsLCBwcmVkbmlzb2xvbmUsIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgbm9uc3Rlcm9pZGFsIGFudGktaW5mbGFtbWF0b3J5IGRydWcgKHVuc3BlY2lmaWVkKSwgY29ydGljb3N0ZXJvaWRzICh1bnNwZWNpZmllZCksIGFjZXRhbWlub3BoZW4gKCspIGNvZGVpbmUgcGhvc3BoYXRlIChDTy1DT0RBTU9MKSwgY2l0YWxvcHJhbSBhbmQgYXNwaXJpbi4gU3Vic2VxdWVudGx5IHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIGJpc3Bob3NwaG9uYXRlLXJlbGF0ZWQgb3N0ZW9uZWNyb3Npcy4gVGhlcmFweSB3aXRoIGFsZW5kcm9uYXRlIHNvZGl1bSB3YXMgY29udGludWVkLiBUaGUgcGF0aWVudCdzIGJpc3Bob3NwaG9uYXRlLXJlbGF0ZWQgb3N0ZW9uZWNyb3NpcyBwZXJzaXN0ZWQuXHJcblxyXG5UaGUgcmVwb3J0aW5nIGludmVzdGlnYXRvciBjb25zaWRlcmVkIHRoZSAgYmlzcGhvc3Bob25hdGUtcmVsYXRlZCBvc3Rlb25lY3Jvc2lzIHRvIGJlIHJlbGF0ZWQgdG8gc3R1ZHkgdGhlcmFweS5cclxuXHJcbiBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC4iLCJjb25NZWRzIjoib21lcHJhem9sZVxyXG53YXJmYXJpblxyXG5wcmVkbmlzb2xvbmVcclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5jaXRhbG9wcmFtXHJcbmFzcGlyaW5cclxuYWNldGFtaW5vcGhlbiAoKykgY29kZWluZSBwaG9zcGhhdGVcclxuY29ydGljb3N0ZXJvaWRzICh1bnNwZWNpZmllZClcclxubm9uc3Rlcm9pZGFsIGFudGktaW5mbGFtbWF0b3J5IGRydWcgKHVuc3BlY2lmaWVkKVxyXG5uaWNvcmFuZGlsIiwicHRMaXN0IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXcgKFByaW1hcnkpIiwiY2FzZUlkIjoxMjQ0OTk5LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTQ2LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiQUxFTkRST05BVEUgU09ESVVNIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTU4LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMjAyR0JSMDAwNDUiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiQUxFTkRST05BVEUgU09ESVVNIiwicHJvZHVjdElkIjoxMDA4MDcsInB0IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXciLCJwcm9kdWN0RmFtaWx5IjoiMDIxNyBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiUmVwb3J0IEZyb20gU3R1ZHkiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMi0wMi0wOFQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBPc3Rlb25lY3Jvc2lzIG9mIGphdyIsImFzc2Vzc091dGNvbWUiOiJOb3QgUmVjb3ZlcmVkL05vdCBSZXNvbHZlZCIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6Ik5vbi1TZXJpb3VzIiwic2VyaW91cyI6Ik5vbi1TZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXciLCJvdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IkFMRU5EUk9OQVRFIFNPRElVTSIsImNvbkNvbWl0IjoidHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5wcmVkbmlzb2xvbmVcclxuY2FsY2l1bSBjYXJib25hdGVcclxucG9seWV0aHlsZW5lIGdseWNvbCAzMzUwICgrKSBwb3Rhc3NpdW0gY2hsb3JpZGUgKCspIHNvZGl1bSBiaWNhcmJvbmF0ZSAoKykgc29kaXVtIGNobG9yaWRlXHJcbm1ldGZvcm1pblxyXG5mb2xpYyBhY2lkXHJcbnJhbWlwcmlsXHJcbnNpbXZhc3RhdGluIiwiZ2VuZGVyIjoiTWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MSwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yMzkiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBhbiBpbnZlc3RpZ2F0b3IgY29uY2VybmluZyBhIG1hbGUgd2l0aCBoeXBlcnRlbnNpb24sIGNocm9uaWMgZ2FzdHJvaW50ZXN0aW5hbCAoR0kpIGRpc2Vhc2UgYW5kIGRpYWJldGVzLCB3aG8gZW50ZXJlZCB0aGUgaW52ZXN0aWdhdG9yIGluaXRpYXRlZCBzdHVkeSBlbnRpdGxlZCBcIkEgMiB5ZWFyIG5hdGlvbmFsIG5ldyBwYXRpZW50IHJlZ2lzdHJhdGlvbiBvZiBwYXRpZW50cyB3aXRoIGJpc3Bob3NwaG9uYXRlLWluZHVjZWQgb3N0ZW9uZWNyb3RpYyBqYXcgKEJPTkopIHJlZmVycmVkIHRvIE9yYWwgYW5kIG1heGlsbG9mYWNpYWwgZGVwYXJ0bWVudCBhbmQgZGVudGFsIGhvc3BpdGFsIGluIEVuZ2xhbmQsIFdhbGVzLCBTY290bGFuZCBhbmQgTm9ydGhlcm4gSXJlbGFuZFwiLiBJbiAyMDA4IHRoZSBwYXRpZW50IHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIGFsZW5kcm9uYXRlIHNvZGl1bSwgNzBtZyB0YWJsZXQgKGRvc2UsIGR1cmF0aW9uIGFuZCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgc2ltdmFzdGF0aW4gKG1hbnVmYWN0dXJlciB1bmtub3duKSwgdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSAobWFudWZhY3R1cmVyIHVua25vd24pLCBwcmVkbmlzb2xvbmUsIG1ldGZvcm1pbiwgcmFtaXByaWwsIGZvbGljIGFjaWQsIGNhbGNpdW0gY2FyYm9uYXRlIChDQUxDSUNIRVcpIGFuZCBwb2x5ZXRoeWxlbmUgZ2x5Y29sIDMzNTAgKCspIHBvdGFzc2l1bSBjaGxvcmlkZSAoKykgc29kaXVtIGJpY2FyYm9uYXRlICgrKSBzb2RpdW0gY2hsb3JpZGUgKE1PVklDT0wpLiBTdWJzZXF1ZW50bHkgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgYmlzcGhvc3Bob25hdGUtcmVsYXRlZCBvc3Rlb25lY3Jvc2lzLiBUaGVyYXB5IHdpdGggYWxlbmRyb25hdGUgc29kaXVtIHdhcyBjb250aW51ZWQuIFRoZSBwYXRpZW50J3MgIGJpc3Bob3NwaG9uYXRlLXJlbGF0ZWQgb3N0ZW9uZWNyb3NpcyBwZXJzaXN0ZWQuXHJcblxyXG5UaGUgaW52ZXN0aWdhdG9yIGNvbnNpZGVyZWQgdGhlIGJpc3Bob3NwaG9uYXRlLXJlbGF0ZWQgb3N0ZW9uZWNyb3NpcyB0byBiZSByZWxhdGVkIHRvIHN0dWR5IHRoZXJhcHkuXHJcblxyXG5cclxuXHJcbiBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIGhhcyBiZWVuIHJlcXVlc3RlZC4iLCJjb25NZWRzIjoidHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5wcmVkbmlzb2xvbmVcclxuY2FsY2l1bSBjYXJib25hdGVcclxucG9seWV0aHlsZW5lIGdseWNvbCAzMzUwICgrKSBwb3Rhc3NpdW0gY2hsb3JpZGUgKCspIHNvZGl1bSBiaWNhcmJvbmF0ZSAoKykgc29kaXVtIGNobG9yaWRlXHJcbm1ldGZvcm1pblxyXG5mb2xpYyBhY2lkXHJcbnJhbWlwcmlsXHJcbnNpbXZhc3RhdGluIiwicHRMaXN0IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXcgKFByaW1hcnkpIiwiY2FzZUlkIjo5MzI5NzcsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NDUsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJBTEVORFJPTkFURSBTT0RJVU0iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNTcsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjEyMDJHQlIwMDAyNiIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDA1ODUsInB0IjoiT3ZlcmRvc2UiLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMi0wMS0yNlQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBPdmVyZG9zZVxyXG4yKSBJbnRlbnRpb25hbCBwcm9kdWN0IG1pc3VzZVxyXG4zKSBEZXByZXNzaW9uIiwiYXNzZXNzT3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiT3ZlcmRvc2UiLCJvdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsQ09ERUlORSxESUFaRVBBTSxEVVJPR0VTSUMsSFlEUk9DT0RPTkUsT1JBTU9SUEgiLCJjb25Db21pdCI6IiIsImdlbmRlciI6Ik1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjgsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjM4IiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gYW4gYWdlbmN5IHZpYSBMYWJvcGhhcm0gYXMgcGFydCBvZiBhIGJ1c2luZXNzIGFncmVlbWVudCAobWFudWZhY3R1cmVyIG51bWJlciBHQi1MQUJQSEFSTVctMDAyNDY2KSwgY29uY2VybmluZyBhIDU4IHllYXIgb2xkIG1hbGUgd2l0aCBwYWluIHdobyBvbiAwOS1OT1YtMjAxMSB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCBjYXBzdWxlIChkb3NlLCBkdXJhdGlvbiBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBTZWNvbmRhcnkgc3VzcGVjdCB0aGVyYXB5IGluY2x1ZGVkIGNvZGVpbmUsIGRpYXplcGFtLCBmZW50YW55bCAoRFVST0dFU0lDKSwgaHlkcm9jb2RvbmUgYW5kIG1vcnBoaW5lIHN1bHBoYXRlIChPUkFNT1JQSCksIGFsbCBzdGFydGVkIG9uIDA5LU5PVi0yMDExIChkb3NlIGFuZCBpZGljYXRpb24gbm90IHJlcG9ydGVkKS4gT24gMDktTk9WLTIwMTEgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgbXVsdGlwbGUgZHJ1ZyBvdmVyZG9zZSBhbmQgaW50ZW50aW9uYWwgZHJ1ZyBtaXN1c2UgYW5kIHdhcyBob3NwaXRhbGlzZWQuIEluIEphbnVhcnkgMjAxMiwgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgZGVwcmVzc2lvbiBhbmQgd2FzIGhvc3BpdGFsaXNlZC4gXHJcblxyXG5UaGUgcmVwb3J0IHN0YXRlZDogJ1RoZSBwYXRpZW50J3MgaGVpZ2h0LCB3ZWlnaHQgYW5kIG1lZGljYWwgaGlzdG9yeSB3ZXJlIG5vdCByZXBvcnRlZC4gT24gYW4gdW5zcGVjaWZpZWQgZGF0ZSwgdGhlIHBhdGllbnQgaW5nZXN0ZWQgMyBwYXRjaGVzIG9mIGZlbnRhbnlsLVRUUyAobWF0cml4IHBhdGNoLCBvcmFsKSAoZG9zZSBhbmQgZG9zYWdlIHVuc3BlY2lmaWVkKSAoYXRlIHRoZSBwYXRjaCkgYWxvbmcgd2l0aCBhbiB1bnNwZWNpZmllZCBwYWluIG1lZGljYXRpb24gKGRvc2UgYW5kIGRvc2FnZSB1bnNwZWNpZmllZCkgY2hhcmFjdGVyaXppbmcgbXVsdGlwbGUgIGRydWcgb3ZlcmRvc2UsIGZvciBhbiB1bnNwZWNpZmllZCBpbmRpY2F0aW9uLiBDb25jb21pdGFudCBtZWRpY2F0aW9ucyBpbmNsdWRlZCBtb3JwaGluZSBzdWxmYXRlIGZvciBwYWluLiBJdCB3YXMgbm90IHJlcG9ydGVkIGlmIHBhaW4gbWVkaWNhdGlvbnMgd2VyZSBwcmVzY3JpYmVkIHJvdXRpbmVseSBmb3IgdGhlIHBhdGllbnQuIE9uIDA5Tk9WMjAxMSwgdGhlIHBhdGllbnQgd2FzIGhvc3BpdGFsaXNlZCBmb3IgYW4gdW5zcGVjaWZpZWQgcmVhc29uIGFuZCB3YXMgbGF0ZXIgYWRtaXR0ZWQgdG8gYSBtZW50YWwgaGVhbHRoIHVuaXQgdG8gdHJlYXQgaGlzIGRlcHJlc3Npb24uIEFjdGlvbiB0YWtlbiB3aXRoIGZlbnRhbnlsLVRUUyBhbmQgYW5hbGdlc2ljcyB1bnNwZWNpZmllZCB3YXMgbm90IHJlcG9ydGVkLiBUaGUgb3V0Y29tZSBmb3IgdGhlIHJlcG9ydGVkIGV2ZW50cyB3YXMgbm90IHByb3ZpZGVkLiBUaGlzIHJlcG9ydCB3YXMgc2VyaW91cyAoaG9zcGl0YWxpemF0aW9uLCBtZWRpY2FsbHkgc2lnbmlmaWNhbnQpLlRoZSBwYXRpZW50IGhhZCBhIGRydWcgaGlzdG9yeSBvZiBmZW50YW55bCAobWF0cml4IHBhdGNoKS4gVGhlIHBoYXJtYWNpc3QgaGFkIHN0YXRlZCB0aGF0IGhlIGRpZCBub3Qga25vdyBpZiB0aGUgcGF0aWVudCB3YXMgYmVpbmcgdHJlYXRlZCB3aXRoIERVUk9HRVNJQyBEIFRSQU5TIChmZW50YW55bCBtYXRyaXggcGF0Y2gsIHRyYW5zZGVybWFsKSBhdCB0aGUgdGltZSB0aGUgcGF0aWVudCBhdGUgdGhyZWUgZmVudGFueWwgbWF0cml4IHBhdGNoZXMuIFRoZSBwaGFybWFjaXN0IHJlcG9ydGVkIHRoYXQgdGhlIGJyYW5kIG5hbWUgb2YgZmVudGFueWwgKG1hdHJpeCBwYXRjaCkgd2FzIG5vdCBpZGVudGlmaWVkIGFuZCB0aGF0IHRoZSBwYXRjaCBzdHJlbmd0aCB3YXMgNTAgdWcvaHIgYW5kIHRoZSBpbmRpY2F0aW9uIGZvciBkcnVnIHVzZSB3YXMgbm90IHByb3ZpZGVkLiBPbiAwOU5PVjIwMTEsIHRoZSBwYXRpZW50IGhhZCAgZXhwZXJpZW5jZWQgYW4gb3ZlcmRvc2Ugb2YgcGFpbiBtZWRpY2F0aW9uLCBpbmNsdWRpbmcgZWF0aW5nIHRocmVlIGZlbnRhbnlsIHBhdGNoZXMuIFRoZSBwYXRpZW50IGhhZCBhbHNvIHRha2VuIHVuc3BlY2lmaWVkIGFtb3VudHMgb2YgdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSAodW5zcGVjaWZpZWQsIG9yYWwpLCBhbmQgbm9uIGNvbXBhbnkgc3VzcGVjdCBkcnVncyBkaWF6ZXBhbSAodW5zcGVjaWZpZWQsIHVua25vd24pLCBoeWRyb2NvZG9uZSAodW5zcGVjaWZpZWQsIHVua25vd24pLCBtb3JwaGluZSBzdWxmYXRlICh1bnNwZWNpZmllZCwgdW5rbm93bikgYW5kIGNvZGVpbmUgKHVuc3BlY2lmaWVkLCB1bmtub3duKS4gVGhlIHBhdGllbnQgaGFkIHJlY292ZXJlZCBjb21wbGV0ZWx5IGFuZCB3YXMgZGlzY2hhcmdlZCBmcm9tIHRoZSBob3NwaXRhbCBhIGZldyBkYXlzIGxhdGVyLiBPbiBhbiB1bnNwZWNpZmllZCBkYXRlIGluIEphbnVhcnkgMjAxMiwgdGhlIHBhdGllbnQgd2FzIGFkbWl0dGVkIHRvIGEgbWVudGFsIGhlYWx0aCB1bml0IHdpdGggZGVwcmVzc2lvbiBhbmQgYXQgdGhlIHRpbWUgb2YgcmVwb3J0aW5nIGhlIHdhcyBzdGlsbCBhbiBpbnBhdGllbnQgYXQgYSBtZW50YWwgaGVhbHRoIHVuaXQuIFRoZSBwaGFybWFjaXN0IGRpZCBub3QgaGF2ZSBhY2Nlc3MgdG8gaGlzIG1lZGljYWwgbm90ZXMgcmVnYXJkaW5nIGZyb20gd2hlbiB0aGUgcGF0aWVudCB3YXMgaG9zcGl0YWxpc2VkLiBBY3Rpb24gdGFrZW4gd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCBoeWRyb2NvZG9uZSwgbW9ycGhpbmUgc3VsZmF0ZSwgY29kZWluZSBhbmQgZGlhemVwYW0gd2FzIG5vdCByZXBvcnRlZC4gVGhlIHBhdGllbnQgaGFkIG5vdCByZWNvdmVyZWQgZnJvbSBkZXByZXNzaW9uIGF0IHRoZSB0aW1lIG9mIHJlcG9ydCBhbmQgd2FzIG5vdCBlYXRpbmcgdGhlIHBhdGNoIGF0IHRoZSB0aW1lIG9mIHJlcG9ydCcuIFN1YnNlcXVlbnRseSwgdGhlIHBhdGllbnQgIHJlY292ZXJlZCBmcm9tIG11bHRpcGxlIGRydWcgb3ZlcmRvc2UgYW5kIGludGVudGlvbmFsIGRydWcgbWlzdXNlLiBUaGUgcGF0aWVudCdzIGRlcHJlc3Npb24gcGVyc2lzdGVkLiBcclxuXHJcblRoZSByZXBvcnRpbmcgcGhhcm1hY2lzdCBjb25zaWRlcmVkIHRoZSBkZXByZXNzaW9uLCBtdWx0aXBsZSBkcnVnIG92ZXJkb3NlIGFuZCBpbnRlbnRpb25hbCBkcnVnIG1pc3VzZSB0byBiZSBvdGhlciBpbXBvcnRhbnQgbWVkaWNhbCBldmVudHMuXHJcblxyXG4gTm8gZnVydGhlciBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuIiwiY29uTWVkcyI6IiIsInB0TGlzdCI6Ik92ZXJkb3NlIChQcmltYXJ5KSFAIyNAIUludGVudGlvbmFsIHByb2R1Y3QgbWlzdXNlIUAjI0AhRGVwcmVzc2lvbiIsImNhc2VJZCI6OTcwMDY3LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTQ0LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiVFJBTUFET0wgSFlEUk9DSExPUklERSxDT0RFSU5FLERJQVpFUEFNLERVUk9HRVNJQyxIWURST0NPRE9ORSxPUkFNT1JQSCIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE1NiwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTIwMkdCUjAwMDE3IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDU4NSwicHQiOiJJbnNvbW5pYSIsInByb2R1Y3RGYW1pbHkiOiI5Mzg0IE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDEyLTAxLTI1VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiItIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBJbnNvbW5pYSIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJJbnNvbW5pYSIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJjb25Db21pdCI6ImFtaXRyaXB0eWxpbmUgaHlkcm9jaGxvcmlkZVxyXG5kaWNsb2ZlbmFjIHNvZGl1bVxyXG5vbWVwcmF6b2xlXHJcbmFjZXRhbWlub3BoZW4iLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjozLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjIzNyIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGFuIGFnZW5jeSB2aWEgTGFib3BoYXJtLCBhcyBwYXJ0IG9mIGEgYnVzaW5lc3MgYWdyZWVtZW50IChtYW51ZmFjdHVyZXIgbnVtYmVyIEdCLUxBQk9QSEFSTVctMDAyNDU2KSwgY29uY2VybmluZyBhIDM3IHllYXIgb2xkIG1hbGUgd2l0aCBhbmdlciBhbmQgaXJyaXRhYmlsaXR5IGFuZCBhIGhpc3Rvcnkgb2YgY2lyY3VtY2lzaW9uLCBsYXRlcmFsIGVwaWNvbmR5bGl0aXMgYW5kIGNlbGx1bGl0aXMgd2hvIG9uIDI4LU5PVi0yMDExIHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUsIGNhcHN1bGUgKGRvc2UsIGR1cmF0aW9uIGFuZCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgYW1pdHJpcHR5bGluZSBoeWRyb2NobG9yaWRlLCBkaWNsb2ZlbmFjIHNvZGl1bSwgb21lcHJhem9sZSBhbmQgYWNldGFtaW5vcGhlbi4gU3Vic2VxdWVudGx5IHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIGluc29tbmlhLiBPbiBhbiB1bmtub3duIGRhdGUsIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIHdhcyBkaXNjb250aW51ZWQuIFN1YnNlcXVlbnRseSwgb24gMTktSkFOLTIwMTIgdGhlIHBhdGllbnQgcmVjb3ZlcmVkIGZyb20gdGhlIGluc29tbmlhLlxyXG5cclxuVGhlIHJlcG9ydGluZyBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBjb25zaWRlcmVkIHRoZSBpbnNvbW5pYSB0byBiZSBhbiBvdGhlciBpbXBvcnRhbnQgbWVkaWNhbCBldmVudC4gXHJcblxyXG5cclxuXHJcbiBObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4iLCJjb25NZWRzIjoiYW1pdHJpcHR5bGluZSBoeWRyb2NobG9yaWRlXHJcbmRpY2xvZmVuYWMgc29kaXVtXHJcbm9tZXByYXpvbGVcclxuYWNldGFtaW5vcGhlbiIsInB0TGlzdCI6Ikluc29tbmlhIChQcmltYXJ5KSIsImNhc2VJZCI6MTA4MTAyOCwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDk0MywiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNTUsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjEyMDJHQlIwMDAwOCIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJBTEVORFJPTkFURSBTT0RJVU0iLCJwcm9kdWN0SWQiOjEwMDgwNywicHQiOiJPc3Rlb25lY3Jvc2lzIG9mIGphdyIsInByb2R1Y3RGYW1pbHkiOiIwMjE3IE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJSZXBvcnQgRnJvbSBTdHVkeSIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDEyLTAxLTMxVDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiJZZXMiLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIE9zdGVvbmVjcm9zaXMgb2YgamF3IiwiYXNzZXNzT3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXciLCJvdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IkFMRU5EUk9OQVRFIFNPRElVTSIsImNvbkNvbWl0IjoicHJlZG5pc29sb25lXHJcbm5pY29yYW5kaWxcclxuc2ltdmFzdGF0aW5cclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5vbWVwcmF6b2xlXHJcbndhcmZhcmluIiwiZ2VuZGVyIjoiRmVtYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjoxLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjEsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjIzNSIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGFuIGludmVzdGlnYXRvciBjb25jZXJuaW5nIGEgZmVtYWxlIHBhdGllbnQgd2l0aCBhbmdpbmEgcGVjdG9yaXMgd2hvIGVudGVyZWQgdGhlIGludmVzdGlnYXRvciBpbml0aWF0ZWQgc3R1ZHkgZW50aXRsZWQgXCJBIDIgeWVhciBuYXRpb25hbCBuZXcgcGF0aWVudCByZWdpc3RyYXRpb24gb2YgcGF0aWVudHMgd2l0aCBiaXNwaG9zcGhvbmF0ZS1pbmR1Y2VkIG9zdGVvbmVjcm90aWMgamF3IChCT05KKSByZWZlcnJlZCB0byBPcmFsIGFuZCBtYXhpbGxvZmFjaWFsIGRlcGFydG1lbnQgYW5kIGRlbnRhbCBob3NwaXRhbCBpbiBFbmdsYW5kLCBXYWxlcywgU2NvdGxhbmQgYW5kIE5vcnRoZXJuIElyZWxhbmQuIEluIDIwMDggdGhlIHBhdGllbnQgd2FzIHBsYWNlZCBvbiB0aGVyYXB5IHdpdGggYWxlbmRyb25hdGUgc29kaXVtLCB0YWJsZXQgZm9yIG9zdGVvcG9yb3NpcyBwcm9waHlsYXhpcyAoZG9zZSBhbmQgZHVyYXRpb24gbm90IHJlcG9ydGVkKS4gQ29uY29taXRhbnQgdGhlcmFweSBpbmNsdWRlZCBwcmVkbmlzb2xvbmUsIG5pY29yYW5kaWwsIHNpbXZhc3RhdGluIChtYW51ZmFjdHVyZXIgdW5rbm93biksIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgb21lcHJhem9sZSBhbmQgd2FyZmFyaW4uIE9uIDE2LU1BUi0yMDEwIHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIGJpc3Bob3NwaG9uYXRlLXJlbGF0ZWQgb3N0ZW9uZWNyb3Npcy4gSW4gMjAxMCB0aGVyYXB5IHdpdGggYWxlbmRyb25hdGUgc29kaXVtIHdhcyBkaXNjb250aW51ZWQuIFRoZSBwYXRpZW50J3MgYmlzcGhvc3Bob25hdGUtcmVsYXRlZCBvc3Rlb25lY3Jvc2lzIHBlcnNpc3RlZC4gXHJcblxyXG5UaGUgcmVwb3J0aW5nIGludmVzdGlnYXRvciBmZWx0IHRoYXQgdGhlIGJpc3Bob3NwaG9uYXRlLXJlbGF0ZWQgb3N0ZW9uZWNyb3NpcyB3YXMgcmVsYXRlZCB0byBzdHVkeSB0aGVyYXB5LlxyXG5cclxuVGhlICByZXBvcnRpbmcgaW52ZXN0aWdhdG9yIGNvbnNpZGVyZWQgdGhlIGJpc3Bob3NwaG9uYXRlLXJlbGF0ZWQgb3N0ZW9uZWNyb3NpcyB0byBiZSBhbiBvdGhlciBpbXBvcnRhbnQgbWVkaWNhbCBldmVudC5cclxuXHJcblxyXG4gQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXHJcblxyXG5UaGlzIHZlcnNpb24gd2FzIGNyZWFydGVkIHRvIHJlbGF0ZSBvdGhlciBjYXNlcy4iLCJjb25NZWRzIjoicHJlZG5pc29sb25lXHJcbm5pY29yYW5kaWxcclxuc2ltdmFzdGF0aW5cclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5vbWVwcmF6b2xlXHJcbndhcmZhcmluIiwicHRMaXN0IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXcgKFByaW1hcnkpIiwiY2FzZUlkIjoxMjI1ODQ0LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTQyLCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiQUxFTkRST05BVEUgU09ESVVNIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTU0LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMjAyR0JSMDAwMDciLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiQUxFTkRST05BVEUgU09ESVVNIiwicHJvZHVjdElkIjoxMDA4MDcsInB0IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXciLCJwcm9kdWN0RmFtaWx5IjoiMDIxNyBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiUmVwb3J0IEZyb20gU3R1ZHkiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMi0wMS0zMVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBPc3Rlb25lY3Jvc2lzIG9mIGphdyIsImFzc2Vzc091dGNvbWUiOiJVbmtub3duIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiT3N0ZW9uZWNyb3NpcyBvZiBqYXciLCJvdXRjb21lIjoiVW5rbm93biIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiQUxFTkRST05BVEUgU09ESVVNIiwiY29uQ29taXQiOiJzdW1hdHJpcHRhblxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbnByb3ByYW5vbG9sIGh5ZHJvY2hsb3JpZGVcclxuZmx1b3hldGluZSIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MSwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjoxLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yMzQiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBhbiBpbnZlc3RpZ2F0b3IgY29uY2VybmluZyBhIGZlbWFsZSBwYXRpZW50IHdobyBlbnRlcmVkIHRoZSBpbnZlc3RpZ2F0b3IgaW5pdGlhdGVkIHN0dWR5IGVudGl0bGVkIFwiQSAyIHllYXIgbmF0aW9uYWwgbmV3IHBhdGllbnQgcmVnaXN0cmF0aW9uIG9mIHBhdGllbnRzIHdpdGggYmlzcGhvc3Bob25hdGUtaW5kdWNlZCBvc3Rlb25lY3JvdGljIGphdyAoQk9OSikgcmVmZXJyZWQgdG8gT3JhbCBhbmQgbWF4aWxsb2ZhY2lhbCBkZXBhcnRtZW50IGFuZCBkZW50YWwgaG9zcGl0YWwgaW4gRW5nbGFuZCwgV2FsZXMsIFNjb3RsYW5kIGFuZCBOb3J0aGVybiBJcmVsYW5kLiBJbiAxOTk1IHRoZSBwYXRpZW50IHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIGFsZW5kcm9uYXRlIHNvZGl1bSwgNzAgbWcgdGFibGV0LCA3MCBtZyBmb3IgdGhlIHRyZWF0bWVudCBvZiBvc3Rlb3Bvcm9zaXMgKHRvdGFsIGRhaWx5IGRvc2Ugbm90IHJlcG9ydGVkKS4gQ29uY29taXRhbnQgdGhlcmFweSBpbmNsdWRlZCBzdW1hdHJpcHRhbiwgdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSAobWFudWZhY3R1cmVyIHVua25vd24pLCBwcm9wcmFub2xvbCBoeWRyb2NobG9yaWRlIGFuZCBmbHVveGV0aW5lLiBTdWJzZXF1ZW50bHkgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgYmlzcGhvc3Bob25hdGUtcmVsYXRlZCBvc3Rlb25lY3Jvc2lzLiBUaGVyYXB5IHdpdGggYWxlbmRyb25hdGUgc29kaXVtIHdhcyBjb250aW51ZWQuIFRoZSBvdXRjb21lIG9mIHRoZSBiaXNwaG9zcGhvbmF0ZS1yZWxhdGVkIG9zdGVvbmVjcm9zaXMgd2FzIHVua25vd24uIFxyXG5cclxuVGhlIHJlcG9ydGluZyBpbnZlc3RpZ2F0b3IgZmVsdCB0aGF0IHRoZSBiaXNwaG9zcGhvbmF0ZS1yZWxhdGVkIG9zdGVvbmVjcm9zaXMgd2FzIHJlbGF0ZWQgdG8gc3R1ZHkgdGhlcmFweS5cclxuXHJcblRoZSByZXBvcnRpbmcgaW52ZXN0aWdhdG9yIGNvbnNpZGVyZWQgdGhlICBiaXNwaG9zcGhvbmF0ZS1yZWxhdGVkIG9zdGVvbmVjcm9zaXMgdG8gYmUgYW4gb3RoZXIgaW1wb3J0YW50IG1lZGljYWwgZXZlbnQuXHJcbiBcclxuXHJcblxyXG4gQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuXHJcblxyXG5UaGlzIHZlcnNpb24gd2FzIGNyZWF0ZWQgdG8gcmVsYXRlIG90aGVyIGNhc2VzLiIsImNvbk1lZHMiOiJzdW1hdHJpcHRhblxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbnByb3ByYW5vbG9sIGh5ZHJvY2hsb3JpZGVcclxuZmx1b3hldGluZSIsInB0TGlzdCI6Ik9zdGVvbmVjcm9zaXMgb2YgamF3IChQcmltYXJ5KSIsImNhc2VJZCI6ODQ0ODQ4LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTQxLCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiQUxFTkRST05BVEUgU09ESVVNIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTUzLCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMjAxVVNBMDIyOTMiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiQ1lDTE9CRU5aQVBSSU5FIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDExNiwicHQiOiJJbnRlbnRpb25hbCBvdmVyZG9zZSIsInByb2R1Y3RGYW1pbHkiOiIwMTMwIE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJMaXRlcmF0dXJlIE1hcmtldGVkIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTItMDEtMDlUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIEludGVudGlvbmFsIG92ZXJkb3NlIiwiYXNzZXNzT3V0Y29tZSI6IkZhdGFsIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiSW50ZW50aW9uYWwgb3ZlcmRvc2UiLCJvdXRjb21lIjoiRmF0YWwiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIFNUQVRFUyIsInN1c3BQcm9kIjoiQ1lDTE9CRU5aQVBSSU5FIEhZRFJPQ0hMT1JJREUsVFJBTUFET0wgSFlEUk9DSExPUklERSIsImNvbkNvbWl0IjoiIiwiZ2VuZGVyIjoiRmVtYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJZZXMiLCJjYXNlVmVyc2lvbiI6MywiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yMzMiLCJjYXNlTmFycmF0aXZlIjoiSXQgd2FzIHJlcG9ydGVkIGluIGEgcHVibGlzaGVkIGFydGljbGUsIHRpdGxlIGFzIHN0YXRlZCBhYm92ZSB0aGF0IGEgNDEgeWVhciBvbGQgZmVtYWxlIHBhdGllbnQgKENhc2UgIyA1MTBwYWkpIGhhZCB1bmtub3duIGluZ2VzdGlvbiBvZiBjeWNsb2JlbnphcHJpbmUgKG1hbnVmYWN0dXJlciB1bmtub3duKSBhbmQgdHJhbWFkb2wgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgYW5kIHN1YnNlcXVlbnRseSBkaWVkLiBUaGUgY2F1c2Ugb2YgZGVhdGggd2FzIGludGVudGlvbmFsIG92ZXJkb3NlLiBUaGUgcGF0aWVudCBoYWQgcHJlaG9zcGl0YWwgY2FyZGlhYyBhbmQvb3IgcmVzcGlyYXRvcnkgYXJyZXN0IGFuZCBhdXRvcHN5IHJlcG9ydCByZXZpZXdlZCwgYW5kIGNhc2UgcmVwb3J0ZWQgdG8gUENDIGluZGlyZWN0bHkgYWZ0ZXIgZmF0YWxpdHkgb2NjdXJyZWQuIFxyXG5cclxuT24gYW4gdW5zcGVjaWZpZWQgZGF0ZSwgdGhlIGZvbGxvd2luZyBibG9vZCBkcnVncyBjb25jZW50cmF0aW9uIHdlcmUgZm91bmQgaW4gd2hvbGUgYmxvb2QgYXQgYXV0b3BzeTogY3ljbG9iZW56YXByaW5lIHdhcyAwLjI2IG1jZy9tTCBhbmQgdHJhbWFkb2wgd2FzIDMuNiBtY2cvbUwuXHJcblxyXG5UaGUgYXJ0aWNsZSBpbmRpY2F0ZWQgdGhhdCBleHBvc3VyZSB0byBjeWNsb2JlbnphcHJpbmUgKG1hbnVmYWN0dXJlciB1bmtub3duKSBhbmQgdHJhbWFkb2wgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgd2FzIHByb2JhYmx5IHJlc3BvbnNpYmxlIG9mIGRlYXRoLiBcclxuXHJcblRoaXMgaXMgb25lIG9mIHNldmVyYWwgcmVwb3J0cyByZWNlaXZlZCBmcm9tIHRoZSBzYW1lIHNvdXJjZS5cclxuXHJcbk5vIGZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlLiIsImNvbk1lZHMiOiIiLCJwdExpc3QiOiJJbnRlbnRpb25hbCBvdmVyZG9zZSAoUHJpbWFyeSkiLCJjYXNlSWQiOjEyMTQ0ODcsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5NDAsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJDWUNMT0JFTlpBUFJJTkUgSFlEUk9DSExPUklERSxUUkFNQURPTCBIWURST0NITE9SSURFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTUyLCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMjAxVVNBMDIyNDAiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiQU1JVFJJUFRZTElORSBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDAxNTMsInB0IjoiQ29tcGxldGVkIHN1aWNpZGUiLCJwcm9kdWN0RmFtaWx5IjoiMDIzMCBJTkpFQ1RJT04iLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJMaXRlcmF0dXJlIE1hcmtldGVkIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTItMDEtMDlUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIENvbXBsZXRlZCBzdWljaWRlXHJcbjIpIE92ZXJkb3NlIiwiYXNzZXNzT3V0Y29tZSI6IkZhdGFsIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiQ29tcGxldGVkIHN1aWNpZGUiLCJvdXRjb21lIjoiRmF0YWwiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIFNUQVRFUyIsInN1c3BQcm9kIjoiQU1JVFJJUFRZTElORSBIWURST0NITE9SSURFLFRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsQkFDTE9GRU4iLCJjb25Db21pdCI6IiIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiWWVzIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjMyIiwiY2FzZU5hcnJhdGl2ZSI6Ikl0IHdhcyByZXBvcnRlZCBpbiBhIHB1Ymxpc2hlZCBhcnRpY2xlLCB0aXRsZSBhcyBzdGF0ZWQgYWJvdmUgdGhhdCBhIDQ5IHllYXIgb2xkIGZlbWFsZSBwYXRpZW50IChDYXNlICMgMTE1MXApIGhhZCBjaHJvbmljIGV4cG9zdXJlIGluZ2VzdGlvbiBvZiBhbWl0cmlwdHlsaW5lIGh5ZHJvY2hsb3JpZGUgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgdHJhbWFkb2wgKG1hbnVmYWN0dXJlciB1bmtub3duKSBhbmQgYmFjbG9mZW4sIGFuZCBzdWJzZXF1ZW50bHkgZGllZC4gVGhlIGNhdXNlIG9mIGRlYXRoIHdhcyBjb21wbGV0ZWQgc3VpY2lkZSBhbmQgb3ZlcmRvc2UuIFRoZSBwYXRpZW50IGhhZCBhIHByZWhvc3BpdGFsIGNhcmRpYWMgJi9vciByZXNwaXJhdG9yeSBhcnJlc3QgYW5kIGRpZWQgb24gYW4gdW5zcGVjaWZpZWQgZGF0ZS4gXHJcblxyXG5UaGUgYXJ0aWNsZSBpbmRpY2F0ZWQgdGhhdCBleHBvc3VyZSB0byBhbWl0cmlwdHlsaW5lIGh5ZHJvY2hsb3JpZGUgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgdHJhbWFkb2wgKG1hbnVmYWN0dXJlciB1bmtub3duKSBhbmQgYmFjbG9mZW4gd2FzIHVuZG91YnRlZGx5IHJlc3BvbnNpYmxlIG9mIGRlYXRoLlxyXG5cclxuTm8gZnVydGhlciBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuIiwiY29uTWVkcyI6IiIsInB0TGlzdCI6IkNvbXBsZXRlZCBzdWljaWRlIChQcmltYXJ5KSFAIyNAIU92ZXJkb3NlIiwiY2FzZUlkIjoxMTY4MzQzLCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTM5LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiQU1JVFJJUFRZTElORSBIWURST0NITE9SSURFLFRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsQkFDTE9GRU4iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNTEsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjEyMDFVU0EwMjE2NSIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJDWUNMT0JFTlpBUFJJTkUgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwMTE2LCJwdCI6IkludGVudGlvbmFsIG92ZXJkb3NlIiwicHJvZHVjdEZhbWlseSI6IjAxMzAgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IkxpdGVyYXR1cmUgTWFya2V0ZWQiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMi0wMS0wOVQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgSW50ZW50aW9uYWwgb3ZlcmRvc2UiLCJhc3Nlc3NPdXRjb21lIjoiRmF0YWwiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJJbnRlbnRpb25hbCBvdmVyZG9zZSIsIm91dGNvbWUiOiJGYXRhbCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgU1RBVEVTIiwic3VzcFByb2QiOiJDWUNMT0JFTlpBUFJJTkUgSFlEUk9DSExPUklERSxUUkFNQURPTCBIWURST0NITE9SSURFLEFDRVRBTUlOT1BIRU4gKCspIEhZRFJPQ09ET05FIEJJVEFSVFJBVEUiLCJjb25Db21pdCI6IiIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiWWVzIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjMxIiwiY2FzZU5hcnJhdGl2ZSI6Ikl0IHdhcyByZXBvcnRlZCBpbiBhIHB1Ymxpc2hlZCBhcnRpY2xlLCB0aXRsZSBhcyBzdGF0ZWQgYWJvdmUgdGhhdCBhIDMwIHllYXIgb2xkIGZlbWFsZSBwYXRpZW50IChDYXNlICMzODZwYWkpIGhhZCB1bmtub3duIGluZ2VzdGlvbiBvZiBjeWNsb2JlbnphcHJpbmUgaHlkcm9jaGxvcmlkZSAobWFudWZhY3R1cmVyIHVua25vd24pLCB0cmFtYWRvbCAobWFudWZhY3R1cmVyIHVua25vd24pIGFuZCBhY2V0YW1pbm9waGVuICgrKSBoeWRyb2NvZG9uZSBiaXRhcnRyYXRlIGFuZCBzdWJzZXF1ZW50bHkgZXhwZXJpZW5jZWQgaW50ZW50aW9uYWwgYWJ1c2UuIFRoZSBwYXRpZW50IGRpZWQgb24gYW4gdW5zcGVjaWZpZWQgZGF0ZS4gVGhlIHBhdGllbnQgaGFkIGEgcHJlaG9zcGl0YWwgY2FyZGlhYyAmL29yIHJlc3BpcmF0b3J5IGFycmVzdC4gVGhlIGNhc2Ugd2FzIHJlcG9ydGVkIHRvIFBDQyBpbmRpcmVjdGx5IGFmdGVyIGZhdGFsaXR5IG9jY3VycmVkLiBUaGUgcGF0aWVudCBoYWQgYW4gYXV0b3BzeSByZXBvcnQgcmV2aWV3ZWQuIEF0IHRoZSB0aW1lIG9mIGF1dG9wc3ksIHRoZSBmb2xsb3dpbmcgYmxvb2QgZHJ1Z3MgY29uY2VudHJhdGlvbiB3ZXJlIGZvdW5kOiB0cmFtYWRvbDogMS4xIG1jZy9tTDsgaHlkcm9jb2RvbmU6IDAuMDkgbWNnL21MLiBUaGUgYXJ0aWNsZSBpbmRpY2F0ZWQgdGhhdCBleHBvc3VyZSB0byBjeWNsb2JlbnphcHJpbmUgaHlkcm9jaGxvcmlkZSAobWFudWZhY3R1cmVyIHVua25vd24pLCB0cmFtYWRvbCAobWFudWZhY3R1cmVyIHVua25vd24pIGFuZCBhY2V0YW1pbm9waGVuICgrKSBoeWRyb2NvZG9uZSBiaXRhcnRyYXRlIHdhcyBwcm9iYWJseSByZXNwb25zaWJsZSBvZiBkZWF0aC4gXHJcblxyXG5UaGlzIGlzIG9uZSBvZiBzZXZlcmFsIHJlcG9ydHMgcmVjZWl2ZWQgZnJvbSB0aGUgc2FtZSBzb3VyY2UuXHJcblxyXG5ObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4iLCJjb25NZWRzIjoiIiwicHRMaXN0IjoiSW50ZW50aW9uYWwgb3ZlcmRvc2UgKFByaW1hcnkpIiwiY2FzZUlkIjoxNzQ1NDQ3LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTM4LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiQ1lDTE9CRU5aQVBSSU5FIEhZRFJPQ0hMT1JJREUsVFJBTUFET0wgSFlEUk9DSExPUklERSxBQ0VUQU1JTk9QSEVOICgrKSBIWURST0NPRE9ORSBCSVRBUlRSQVRFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTUwLCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMjAxVVNBMDIxNjEiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiQ1lDTE9CRU5aQVBSSU5FIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDExNiwicHQiOiJDb21wbGV0ZWQgc3VpY2lkZSIsInByb2R1Y3RGYW1pbHkiOiIwMTMwIE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJMaXRlcmF0dXJlIE1hcmtldGVkIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTItMDEtMDlUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIENvbXBsZXRlZCBzdWljaWRlXHJcbjIpIE92ZXJkb3NlIiwiYXNzZXNzT3V0Y29tZSI6IkZhdGFsIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiQ29tcGxldGVkIHN1aWNpZGUiLCJvdXRjb21lIjoiRmF0YWwiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIFNUQVRFUyIsInN1c3BQcm9kIjoiQ1lDTE9CRU5aQVBSSU5FIEhZRFJPQ0hMT1JJREUsVFJBTUFET0wgSFlEUk9DSExPUklERSxJQlVQUk9GRU4sQU1PWElDSUxMSU4iLCJjb25Db21pdCI6IiIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiWWVzIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjMiLCJjYXNlTmFycmF0aXZlIjoiSXQgd2FzIHJlcG9ydGVkIGluIGEgcHVibGlzaGVkIGFydGljbGUsIHRpdGxlIGFzIHN0YXRlZCBhYm92ZSB0aGF0IGEgMjEgeWVhciBvbGQgZmVtYWxlIHBhdGllbnQgKENhc2UgIzMwMGEpIGhhZCBhY3V0ZSBleHBvc3VyZSBpbmdlc3Rpb24gb2YgY3ljbG9iZW56YXByaW5lIGh5ZHJvY2hsb3JpZGUgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgdHJhbWFkb2wgKG1hbnVmYWN0dXJlciB1bmtub3duKSwgaWJ1cHJvZmVuIGFuZCBhbW94aWNpbGxpbiBhbmQgc3Vic2VxdWVudGx5IGV4cGVyaWVuY2VkIGludGVudGlvbmFsIHN1c3BlY3RlZCBzdWljaWRlLiBUaGUgcGF0aWVudCBkaWVkIG9uIGFuIHVuc3BlY2lmaWVkIGRhdGUuIFRoZSBwYXRpZW50IGhhZCBhbiBhdXRvcHN5IHJlcG9ydCByZXZpZXdlZC4gQXQgdGhlIHRpbWUgb2YgYXV0b3BzeSwgdGhlIGJsb29kIGRydWdzIGNvbmNlbnRyYXRpb24gb2YgdHJhbWFkb2wgd2FzIDIuOCBtZy9MLiBUaGUgYXJ0aWNsZSBpbmRpY2F0ZWQgdGhhdCBleHBvc3VyZSB0byB0cmFtYWRvbCAobWFudWZhY3R1cmVyIHVua25vd24pLCBjeWNsb2JlbnphcHJpbmUgaHlkcm9jaGxvcmlkZSAobWFudWZhY3R1cmVyIHVua25vd24pLCBpYnVwcm9mZW4gYW5kIGFtb3hpY2lsbGluIHdhcyB1bmRvdWJ0ZWRseSByZXNwb25zaWJsZSBvZiBkZWF0aC4gXHJcblxyXG5UaGlzIGlzIG9uZSBvZiBzZXZlcmFsIHJlcG9ydHMgcmVjZWl2ZWQgZnJvbSB0aGUgc2FtZSBzb3VyY2UuXHJcblxyXG5ObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4iLCJjb25NZWRzIjoiIiwicHRMaXN0IjoiQ29tcGxldGVkIHN1aWNpZGUgKFByaW1hcnkpIUAjI0AhT3ZlcmRvc2UiLCJjYXNlSWQiOjE4MTE2MDgsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5MzcsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJDWUNMT0JFTlpBUFJJTkUgSFlEUk9DSExPUklERSxUUkFNQURPTCBIWURST0NITE9SSURFLElCVVBST0ZFTixBTU9YSUNJTExJTiIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE0OSwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTIwMUdCUjAwMDczIiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IkVSVEFQRU5FTSBTT0RJVU0iLCJwcm9kdWN0SWQiOjEwMTIwMSwicHQiOiJOZXVyb2xlcHRpYyBtYWxpZ25hbnQgc3luZHJvbWUiLCJwcm9kdWN0RmFtaWx5IjoiMDgyNiBJTkpFQ1RJT04iLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDExLTEyLTA1VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiItIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBOZXVyb2xlcHRpYyBtYWxpZ25hbnQgc3luZHJvbWUiLCJhc3Nlc3NPdXRjb21lIjoiVW5rbm93biIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6Ik5ldXJvbGVwdGljIG1hbGlnbmFudCBzeW5kcm9tZSIsIm91dGNvbWUiOiJVbmtub3duIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJFUlRBUEVORU0gU09ESVVNIiwiY29uQ29taXQiOiJ0cmFtYWRvbCBoeWRyb2NobG9yaWRlXHJcbmNpdGFsb3ByYW1cclxuYW1pc3VscHJpZGVcclxuYnVkZXNvbmlkZSAoKykgZm9ybW90ZXJvbCBmdW1hcmF0ZVxyXG5sYWN0dWxvc2VcclxuZW5veGFwYXJpbiBzb2RpdW0iLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MSwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjI5IiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gYSBwaGFybWFjaXN0IGNvbmNlcm5pbmcgYSBmZW1hbGUgd2FzIHBsYWNlZCBvbiB0aGVyYXB5IHdpdGggZXJ0YXBlbmVtIHNvZGl1bSwgaW5qZWN0aW9uIChmb3JtKSAoZG9zZSwgZHVyYXRpb24gYW5kIGluZGljYXRpb24gbm90IHJlcG9ydGVkKS4gQ29uY29taXRhbnQgdGhlcmFweSBpbmNsdWRlZCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIChtYW51ZmFjdHVyZXIgdW5rbm93biksIGNpdGFsb3ByYW0sIGFtaXN1bHByaWRlLCBidWRlc29uaWRlICgrKSBmb3Jtb3Rlcm9sIGZ1bWFyYXRlIChTWU1CSUNPUlQpLCBsYWN0dWxvc2UgYW5kIGVub3hhcGFyaW4gc29kaXVtLiBJdCB3YXMgcmVwb3J0ZWQgdGhhdCB0aGUgcGF0aWVudCBcIndhcyBzdWZmZXJpbmcgZnJvbSBOZXVyb2xlcHRpYyBNYWxpZ25hbnQgU3luZHJvbWVcIi4gVGhlIGFjdGlvbiB0YWtlbiB3aXRoIHJlZ2FyZHMgdG8gdGhlcmFweSB3aXRoIGVydGFwZW5lbSBzb2RpdW0gd2FzIHVua25vd24uIFRoZSBvdXRjb21lIG9mIHRoZSBOZXVyb2xlcHRpYyBNYWxpZ25hbnQgU3luZHJvbWUgd2FzIHVua25vd24uXHJcblxyXG5VcG9uIGludGVybmFsIHJldmlldyB0aGUgTmV1cm9sZXB0aWMgTWFsaWduYW50IFN5bmRyb21lIHdhcyBjb25zaWRlcmVkIHRvIGJlIGFuIG90aGVyIGltcG9ydGFudCBtZWRpY2FsIGV2ZW50LiBcclxuXHJcbiBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIGlzIG5vdCBleHBlY3RlZC4iLCJjb25NZWRzIjoidHJhbWFkb2wgaHlkcm9jaGxvcmlkZVxyXG5jaXRhbG9wcmFtXHJcbmFtaXN1bHByaWRlXHJcbmJ1ZGVzb25pZGUgKCspIGZvcm1vdGVyb2wgZnVtYXJhdGVcclxubGFjdHVsb3NlXHJcbmVub3hhcGFyaW4gc29kaXVtIiwicHRMaXN0IjoiTmV1cm9sZXB0aWMgbWFsaWduYW50IHN5bmRyb21lIChQcmltYXJ5KSIsImNhc2VJZCI6ODU5OTkzLCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTM2LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiRVJUQVBFTkVNIFNPRElVTSIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE0OCwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTIwMUdCUjAwMDQ0IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDU4NSwicHQiOiJBbGFuaW5lIGFtaW5vdHJhbnNmZXJhc2UgaW5jcmVhc2VkIiwicHJvZHVjdEZhbWlseSI6IjkzODQgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTItMDEtMTJUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIEFsYW5pbmUgYW1pbm90cmFuc2ZlcmFzZSBpbmNyZWFzZWRcclxuMikgVHJhbnNhbWluYXNlcyBpbmNyZWFzZWQiLCJhc3Nlc3NPdXRjb21lIjoiVW5rbm93biIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6IkFsYW5pbmUgYW1pbm90cmFuc2ZlcmFzZSBpbmNyZWFzZWQiLCJvdXRjb21lIjoiVW5rbm93biIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsImNvbkNvbWl0IjoiIiwiZ2VuZGVyIjoiIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjozLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjIyOCIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGEgcGh5c2ljaWFuIGNvbmNlcm5pbmcgc2V2ZXJhbCBwYXRpZW50cyB3aG8gd2VyZSBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hyb2xpZGUsIGNhcHN1bGUgKGRvc2UsIGR1cmF0aW9uIGFuZCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIEl0IHdhcyByZXBvcnRlZCB0aGF0IFwiU2V2ZXJhbCBwYXRpZW50cyAobm8gZGV0YWlscyBrbm93bikgaGFkIGluY3JlYXNlZCBsaXZlciBlbnp5bWVzLCBhbGFuaW5lIGFtaW5vdHJhbnNmZXJhc2UgKEFMVCkgYW5kIHRyYW5zYW1pbmFzZXMgYnV0IHdlcmUgb3RoZXJ3aXNlIHdlbGwuIFdoZW4gdGhleSByZWFjaGVkIHR3byBodW5kcmVkcyB0aW1lcyB0aGUgdXBwZXIgbGltaXQgdHJlYXRtZW50IHdhcyBzdG9wcGVkXCIuIFRoZSBhY3Rpb24gdGFrZW4gd2l0aCByZWdhcmRzIHRvIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2Nocm9saWRlIHdhcyB1bmtub3duLiBUaGUgb3V0Y29tZSBvZiB0aGUgaW5jcmVhc2VkIEFMVCBhbmQgdHJhbnNhbWluYXNlcyB3YXMgdW5rbm93bi4gXHJcblxyXG5cclxuVXBvbiBpbnRlcm5hbCByZXZpZXcgdGhlIGluY3JlYXNlZCBBTFQgYW5kIGluY3JlYXNlZCB0cmFuc2FtaW5hc2VzIHdlcmUgY29uc2lkZXJlZCB0byBiZSBvdGhlciBpbXBvcnRhbnQgbWVkaWNhbCBldmVudHMuIFxyXG5cclxuQXR0ZW1wdHMgYXJlIGJlaW5nIG1hZGUgdG8gb2J0YWluIGFkZGl0aW9uYWwgaWRlbnRpZnlpbmcgaW5mb3JtYXRpb24gdG8gZGlzdGluZ3Vpc2ggdGhlIGluZGl2aWR1YWwgcGF0aWVudHMgbWVudGlvbmVkIGluIHRoaXMgcmVwb3J0LiBBZGRpdGlvbmFsIGluZm9ybWF0aW9uIHdpbGwgYmUgcHJvdmlkZWQgaWYgYXZhaWxhYmxlLiBcclxuXHJcblxyXG4gQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBoYXMgYmVlbiByZXF1ZXN0ZWQuIiwiY29uTWVkcyI6IiIsInB0TGlzdCI6IkFsYW5pbmUgYW1pbm90cmFuc2ZlcmFzZSBpbmNyZWFzZWQgKFByaW1hcnkpIUAjI0AhVHJhbnNhbWluYXNlcyBpbmNyZWFzZWQiLCJjYXNlSWQiOjE3NjI2OTcsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5MzUsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTQ3LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMTEyR0JSMDAwNzAiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwNTg1LCJwdCI6IlJhc2giLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMS0xMi0yMFQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgUmFzaCIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJSYXNoIiwib3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsImNvbkNvbWl0IjoiYW1veGljaWxsaW5cclxuY2FsY2l1bSBjYXJib25hdGUgKCspIGNob2xlY2FsY2lmZXJvbFxyXG5pYnVwcm9mZW5cclxucHN5bGxpdW0gaHVza1xyXG5hY2V0YW1pbm9waGVuXHJcbnRyaW1ldGhvcHJpbVxyXG5hY2V0YW1pbm9waGVuICgrKSBjb2RlaW5lIHBob3NwaGF0ZSIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6MywiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yMjciLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSB0aGUgYWdlbmN5IHZpYSBMYWJvcGhhcm0gYXMgcGFydCBvZiBhIGJ1c2luZXNzIGFncmVlbWVudCAobWFudWZhY3R1cmVyIG51bWJlciBHQi1MQUJPUEhBUk1XLTAwMjQzMikgY29uY2VybmluZyBhIDU1IHllYXIgb2xkIGZlbWFsZSB3aXRoIGVhciBwYWluLCBmZW1hbGUgZ2VuaXRhbCBwYWluIChwYWluIGluIGdlbml0YWxpYSBvbiBpbnRlcmNvdXJzZSksIGhlYWRhY2hlLCBoeXBlcnRlbnNpb24gKGluZHVjZWQgYnkgY29udHJhY2VwdGl2ZSBwaWxsKSwgaW50cmFkZXJtYWwgbmFldnVzLCBhcnRocmFsZ2lhLCBrbmVlIG9zdGVvYXJ0aHJpdGlzLCBtaWdyYWluZSwgbXlhbGdpYSBhbmQgdXRlcmluZSBlbmxhcmdlbWVudCBhbmQgYSBoaXN0b3J5IG9mIHdoaXBsYXNoIGluanVyeSBhbmQgYSBoaXN0b3J5IG9mIHRoZXJhcHkgd2l0aCBhY2V0YW1pbm9waGVuICgrKSBidWNsaXppbmUgaHlkcm9jaGxvcmlkZSAoKykgY29kZWluZSBwaG9zcGhhdGUgKCspIGRvY3VzYXRlIHNvZGl1bSAoTUlHUkFMRVZFKSwgYmVjbG9tZXRoYXNvbmUgZGlwcm9waW9uYXRlIChCRUNPTkFTRSksIGNsb3RyaW1hem9sZSwgZXJnb2NhbGNpZmVyb2wsIGZleG9mZW5hZGluZSBoeWRyb2NobG9yaWRlIGFuZCBwc3lsbGl1bSBodXNrIHdobyBvbiAwOS1ERUMtMjAxMSB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCBjYXBzdWxlIChkb3NlLCBkdXJhdGlvbiBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBDb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIGFtb3hpY2lsbGluLCBjYWxjaXVtIGNhcmJvbmF0ZSAoKykgY2hvbGVjYWxjaWZlcm9sIChDQUxDSUNIRVcgRDMpLCBpYnVwcm9mZW4gKElCVUdFTCksIHBzeWxsaXVtIGh1c2ssIGFjZXRhbWlub3BoZW4sIGFjZXRhbWlub3BoZW4gKCspIGNvZGVpbmUgcGhvc3BoYXRlIChDTy1DT0RBTU9MKSBhbmQgdHJpbWV0aG9wcmltLiAgT24gMDktREVDLTIwMTEgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgcmFzaC4gT24gYW4gdW5rbm93biBkYXRlIHRoZSBwYXRpZW50IHVuZGVyd2VudCBhbiBleGVyY2lzZSB0ZXN0IHdoaWNoIHdhcyBub3JtYWwgKGRhdGUgYW5kIG5vcm1hbCByYW5nZSBub3QgcmVwb3J0ZWQpLiBUaGUgcGF0aWVudCBhbHNvIHVuZGVyd2VudCBhIGZsZXhpYmxlIHNpZ21vaWRvc2NvcHksIGh5c3Rlcm9zY29weSBhbmQgYSBzZXJ1bSAxLCAyNS1kaWh5ZHJveHkgdml0YW1pbiBEMyBsZXZlbCAoZGF0ZSBhbmQgcmVzdWx0cyB3ZXJlIG5vdCByZXBvcnRlZCkuIFRoZSBhY3Rpb24gdGFrZW4gd2l0aCByZWdhcmRzIHRvIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIHdhcyB1bmtub3duLiBTdWJzZXF1ZW50bHksIHRoZSBwYXRpZW50IHJlY292ZXJlZCBmcm9tIHRoZSByYXNoLlxyXG5cclxuVGhlIHJlcG9ydGluZyBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBjb25zaWRlcmVkIHRoZSByYXNoIGFuIG90aGVyIGltcG9ydGFudCBtZWRpY2FsIGV2ZW50LiBcclxuXHJcblxyXG5ObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS4iLCJjb25NZWRzIjoiYW1veGljaWxsaW5cclxuY2FsY2l1bSBjYXJib25hdGUgKCspIGNob2xlY2FsY2lmZXJvbFxyXG5pYnVwcm9mZW5cclxucHN5bGxpdW0gaHVza1xyXG5hY2V0YW1pbm9waGVuXHJcbnRyaW1ldGhvcHJpbVxyXG5hY2V0YW1pbm9waGVuICgrKSBjb2RlaW5lIHBob3NwaGF0ZSIsInB0TGlzdCI6IlJhc2ggKFByaW1hcnkpIiwiY2FzZUlkIjoxNzIwMTM4LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTM0LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjE0NiwiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTExMkdCUjAwMDM0IiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IlJBTFRFR1JBVklSIFBPVEFTU0lVTSIsInByb2R1Y3RJZCI6MTAwOTAzLCJwdCI6Ikh5cGVyaGlkcm9zaXMiLCJwcm9kdWN0RmFtaWx5IjoiMDUxOCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMS0xMi0xM1QwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBIeXBlcmhpZHJvc2lzIiwiYXNzZXNzT3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiTm9uLVNlcmlvdXMiLCJzZXJpb3VzIjoiTm9uLVNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJIeXBlcmhpZHJvc2lzIiwib3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJSQUxURUdSQVZJUiBQT1RBU1NJVU0iLCJjb25Db21pdCI6ImV0cmF2aXJpbmVcclxubG9waW5hdmlyICgrKSByaXRvbmF2aXJcclxucmFuaXRpZGluZVxyXG5yYW1pcHJpbFxyXG5hdG9ydmFzdGF0aW5cclxuZXpldGltaWJlXHJcbmlyYmVzYXJ0YW5cclxucHJlZG5pc29sb25lXHJcbnRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUiLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjozLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjEsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjIyNiIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGEgY2xpbmljYWwgbnVyc2Ugc3BlY2lhbGlzdCBhbmQgYSBwaHlzaWNpYW4gY29uY2VybmluZyBhIDU2IHllYXIgb2xkIHdoaXRlIG1hbGUgd2l0aCBpbmNyZWFzZWQgZ2FzdHJpYyBhY2lkLCBhYm5vcm1hbCBsaXBpZHMsIGh5cGVydGVuc2lvbiwgYXJ0aHJpdGlzIGFuZCBwYWluIHdobyBvbiAwNy1KVUwtMjAwOCB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCByYWx0ZWdyYXZpciBwb3Rhc3NpdW0sIDQwMCBtZyB0YWJsZXQsIDQwMCBtZywgdHdpY2UgYSBkYXkgZm9yIHRoZSB0cmVhdG1lbnQgb2YgaHVtYW4gaW1tdW5vZGVmaWNpZW5jeSB2aXJ1cyAoSElWKSBpbmZlY3Rpb24gKGxvdykuIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgZXRyYXZpcmluZSwgbG9waW5hdmlyICgrKSByaXRvbmF2aXIgKEtBTEVUUkEpLCByYW5pdGlkaW5lLCByYW1pcHJpbCwgYXRvcnZhc3RhdGluIGNhbGNpdW0sIGV6ZXRpbWliZSAoTVNEKSwgaXJiZXNhcnRhbiwgcHJlZG5pc29sb25lIGFuZCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIChtYW51ZmFjdHVyZXIgdW5rbm93bikuIEluIEp1bmUgMjAxMSwgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgc3dlYXRpbmcuIFRoZXJhcHkgd2l0aCByYWx0ZWdyYXZpciBwb3Rhc3NpdW0gY29udGludWVkLiBUaGUgcGF0aWVudCdzIHN3ZWF0aW5nIHBlcnNpc3RlZC5cclxuXHJcbkZvbGxvdyB1cCBpbmZvcm1hdGlvbiB3YXMgcmVjZWl2ZWQgb24gMjAtamFuLTIwMTIuIFBhdGllbnQgZGVtb2dyYXBoaWNzIHN1c3BlY3QgYW5kIGNvbmNvbWl0YW50IHRoZXJhcHkgaW5mb3JtYXRpb24sIGFkdmVyc2UgZXZlbnQgaW5mb3JtYXRpb24gYW5kIGNvbmN1cnJlbnQgY29uZGl0aW9ucyB3ZXJlIHVwZGF0ZWQuIFRoZSByZXBvcnRlcnMgZmVsdCB0aGF0IHN3ZWF0aW5nIHdhcyByZWxhdGVkIHRvIHRoZXJhcHkgd2l0aCByYWx0ZWdyYXZpciBwb3Rhc3NpdW0uIEluIGF1Z3VzdCAyMDExLCAgYmxvb2QgY3VsdHVyZXMgd2VyZSBuZWdhdGl2ZS4gT24gYW4gdW5rbm93biBkYXRlIGEgY29tcHV0ZXIgYXhpYWwgdG9tb2dyYXBoeSBzY2FuIG9mIHRoZSBzaGVzdCBhYmRvbWVuIGFuZCBwZWx2aXMgcmV2ZWFsZWQgXCJubyBzb3VyY2Ugb2Ygc3dlYXRpbmcgZm91bmRcIi5cclxuXHJcbkFkZGl0aW9uYWwgaW5mb3JtYXRpb24gaGFzIGJlZW4gcmVxdWVzdGVkLiIsImNvbk1lZHMiOiJldHJhdmlyaW5lXHJcbmxvcGluYXZpciAoKykgcml0b25hdmlyXHJcbnJhbml0aWRpbmVcclxucmFtaXByaWxcclxuYXRvcnZhc3RhdGluXHJcbmV6ZXRpbWliZVxyXG5pcmJlc2FydGFuXHJcbnByZWRuaXNvbG9uZVxyXG50cmFtYWRvbCBoeWRyb2NobG9yaWRlIiwicHRMaXN0IjoiSHlwZXJoaWRyb3NpcyAoUHJpbWFyeSkiLCJjYXNlSWQiOjE1NTYxNzYsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5MzMsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJSQUxURUdSQVZJUiBQT1RBU1NJVU0iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNDUsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjExMTJHQlIwMDAyMyIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDA1ODUsInB0IjoiRGVjcmVhc2VkIGFwcGV0aXRlIiwicHJvZHVjdEZhbWlseSI6IjkzODQgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTEtMDgtMTJUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIERlY3JlYXNlZCBhcHBldGl0ZVxyXG4yKSBOYXVzZWFcclxuMykgQXN0aGVuaWFcclxuNCkgRHJ1ZyBpbnRlcmFjdGlvbiIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJEZWNyZWFzZWQgYXBwZXRpdGUiLCJvdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFLE1FVEZPUk1JTiIsImNvbkNvbWl0IjoiYmVuZHJvZmx1bWV0aGlhemlkZVxyXG5sb3NhcnRhbiBwb3Rhc3NpdW1cclxuc2ltdmFzdGF0aW4iLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjoyLCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjIyNSIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGFuIGFnZW5jeSB2aWEgTGFib3BoYXJtIEx0ZCAobWFudWZhY3R1cmVyIG51bWJlciBHQi1MQUJPUEhBUk1XLTAwMDk1NikgYXMgcGFydCBvZiBhIGJ1c2luZXNzIGFncmVlbWVudCBjb25jZXJuaW5nIGEgbWFsZSB3aG8gd2FzIHBsYWNlZCBvbiB0aGVyYXB5IHdpdGggdHJhbWFkb2wgaHlkcm9jaGxvaXJkZSwgY2Fwc3VsZSAoZG9zZSwgZHVyYXRpb24gYW5kIGluZGljYXRpb24gbm90IHJlcG9ydGVkKS4gU2Vjb25kYXJ5IHN1c3BlY3QgY29uY29taXRhbnQgdGhlcmFweSBpbmNsdWRlZCBtZXRmb3JtaW4gKGRvc2UsIGR1cmF0aW9uIGFuZCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgYmVuZHJvZmx1bWV0aGlhemlkZSwgbG9zYXJ0YW4gcG90YXNzaXVtIChtYW51ZmFjdHVyZXIgdW5rbm93bikgYW5kIHNpbXZhc3RhdGluIChtYW51ZmFjdHVyZXIgdW5rbm93bikuIFN1YnNlcXVlbnRseSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBhbm9yZXhpYSwgbmF1c2VhLCBsb3cgZW5lcmd5IGFuZCBkcnVnIGludGVyYWN0aW9uLiBBY3Rpb24gdGFrZW4gd2l0aCByZWdhcmRzIHRvIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIGFuZCBtZXRmb3JtaW4gd2FzIHVua25vd24uIFRoZSByZXBvcnQgc3RhdGVkIFwidGhlIHBhdGllbnQgcmVjb3ZlcmVkIDMgbW9udGhzIGFmdGVyIG9uc2V0XCIuIFN1YnNlcXVlbnRseSwgdGhlIHBhdGllbnQgcmVjb3ZlcmVkIGZyb20gdGhlIGFub3JleGlhLCBuYXVzZWEsIGxvdyBlbmVyZ3kgYW5kIGRydWcgaW50ZXJhY3Rpb24uIFxyXG5cclxuVGhlIHJlcG9ydGluZyBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBjb25zaWRlcmVkIHRoZSBhbm9yZXhpYSwgbmF1c2VhLCBsb3cgZW5lcmd5IGFuZCBkcnVnIGludGVyYWN0aW9uIHRvIGJlIG90aGVyIGltcG9ydGFudCBtZWRpY2FsIGV2ZW50cy5cclxuXHJcblRoZSByZXBvcnRlciAgZmVsdCB0aGF0IGFub3JleGlhLCBuYXVzZWEsIGxvdyBlbmVyZ3kgYW5kIGRydWcgaW50ZXJhY3Rpb24gd2VyZSBwb3NzaWJseSByZWxhdGVkIHRvIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLlxyXG5cclxuVGhlIGFnZW5jeSByZXBvcnRlZCBib3RoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgYW5kIG1ldGZvcm1pbiBhcyBzdXNwZWN0IGRydWdzLlxyXG5cclxuTm8gZnVydGhlciBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuIiwiY29uTWVkcyI6ImJlbmRyb2ZsdW1ldGhpYXppZGVcclxubG9zYXJ0YW4gcG90YXNzaXVtXHJcbnNpbXZhc3RhdGluIiwicHRMaXN0IjoiRGVjcmVhc2VkIGFwcGV0aXRlIChQcmltYXJ5KSFAIyNAIU5hdXNlYSFAIyNAIUFzdGhlbmlhIUAjI0AhRHJ1ZyBpbnRlcmFjdGlvbiIsImNhc2VJZCI6MTMwODM0NiwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDkzMiwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsTUVURk9STUlOIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTQ0LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMTEyR0JSMDAwMjEiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwNTg1LCJwdCI6IkhhbGx1Y2luYXRpb24iLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMS0wOC0zMFQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgSGFsbHVjaW5hdGlvblxyXG4yKSBIYWxsdWNpbmF0aW9uLCB2aXN1YWxcclxuMykgQ29uZnVzaW9uYWwgc3RhdGVcclxuNCkgR2FpdCBkaXN0dXJiYW5jZVxyXG41KSBWb21pdGluZ1xyXG42KSBEaXp6aW5lc3NcclxuNykgUGhvdG9wc2lhXHJcbjgpIFNvbW5vbGVuY2VcclxuOSkgTWFsYWlzZVxyXG4xMCkgTmF1c2VhXHJcbjExKSBBY2NpZGVudGFsIGV4cG9zdXJlIHRvIHByb2R1Y3QiLCJhc3Nlc3NPdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiSGFsbHVjaW5hdGlvbiIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsTkVVUk9OVElOIiwiY29uQ29taXQiOiJtZXRmb3JtaW5cclxuYXNwaXJpbiIsImdlbmRlciI6IkZlbWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6NSwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjowLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yMjQiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBhbiBhZ2VuY3kgdmlhIExhYm9waGFybSBMdGQgKG1hbnVmYWN0dXJlciBudW1iZXIgR0ItTEFCT1BIQVJBTVctMDAyMDc0KSBhcyBwYXJ0IG9mIGEgYnVzaW5lc3MgYWdyZWVtZW50IGNvbmNlcm5pbmcgYSA2MSB5ZWFyIG9sZCBmZW1hbGUgd2hvIG9uIDIwLU1BWS0yMDA4IHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUsIDEwMCBtZyBjYXBzdWxlICh0b3RhbCBkYWlseSBkb3NlIGFuZCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIFNlY29uZGFyeSBzdXNwZWN0IHRoZXJhcHkgaW5jbHVkZWQgZ2FiYXBlbnRpbiAoTkVVUk9OVElOKSAxNTAwbWcgKHRvdGFsIGRhaWx5IGRvc2UgYW5kIGluZGljYXRpb24gbm90IHJlcG9ydGVkKS4gU3Vic2VxdWVudGx5IHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIGhhbGx1Y2luYXRpb24sIHZpc3VhbCBoYWxsdWNpbmF0aW9uLCBjb25mdXNpb24sIGdhaXQgZGlzdHVyYmFuY2UsIHZvbWl0aW5nLCBkaXp6eSwgZmxhc2hpbmcgbGlnaHRzLCBzbGVlcHksIHVud2VsbCwgbmF1c2VhIGFuZCBpbmFkdmVydGVudCBleHBvc3VyZSB0byBkcnVnLiBUaGUgYWdlbmN5IHJlcG9ydCBzdGF0ZWQgXCJUaGUgcGhhcm1hY2lzdCByZXBvcnRlZCB0aGF0IGEgZmVtYWxlIHBhdGllbnQgb2YgdW5rbm93biBhZ2UgYW5kIHJhY2UgcmVjZWl2ZWQgZ2FiYXBlbnRpbiAoTkVVUk9OVElOKSAxNTAwbWcgZm9yIHVua25vd24gZHVyYXRpb24gaW5hZHZlcnRlbnRseS4gRm9sbG93IHVwICgxMC1KVU4tMjAwOCk6IFRoaXMgcGhhcm1hY2lzdCByZXBvcnRlZCBtaXN0YWtlbmx5IHJlY2VpdmVkIGhlciBodXNiYW5kJ3MgbWVkaWNhdGlvbiBvZiBnYWJhcGVudGluIChORVVST05USU4pIDE1MDBtZyBhbmQgVHJhbWFkb2wgSHlkcm9jaGxvcmlkZSAxMDBtZyAodW5rbm93biBpbmRpY2F0aW9uIGFuZCBicmFuZCBuYW1lKSBhcyB3ZWxsIGFzIGhlciBvd24gIG1lZGljYXRpb24gb2YgbWV0Zm9ybWluIDEwMDBtZyBhbmQgYXNwaXJpbiA3NW1nIG9uIDIwLU1BWS0yMDA4LiBJdCB3YXMgcmVwb3J0ZWQgdGhhdCB0aGUgcGF0aWVudCB3YXMgYXQgaGFpcmRyZXNzZXJzIGFuZCA0NSBtaW51dGVzIGxhdGVyIHN0YXJ0ZWQgdG8gZmVlbCBkaXp6eSBhbmQgdW53ZWxsIGFuZCBzdGFydGVkIHRvIGhhbGx1Y2luYXRlIGFuZCB2b21pdC4gVGhlIHBhdGllbnQgd2FzIHJlcG9ydGVkIHRvIGhhdmUgYmVlbiBjb2xsZWN0ZWQgYnkgaGVyIGh1c2JhbmQsIHZvbWl0aW5nIGFub3RoZXIgMyB0aW1lcyBhbmQgd2FzIHJlcG9ydGVkIHRvIGhhdmUgXCJmZWx0IGxpa2Ugc2hlIHdhcyB0cmlwcGluZ1wiLCBmZWxsIHZlcnkgc2xlZXB5IGFuZCB3aGVuIGhlciBleWVzIGNsb3NlZCBzaGUgc2F3IGZsYXNoaW5nIGxpZ2h0cyBhbmQgc2hpbnkgdmlzdWFsIGltYWdlcy4gSXQgd2FzIHRha2VuIHdpdGggdGhlIHBhdGllbnQncyBtZWRpY2F0aW9uIGluIHJlc3BvbnNlIHRvIGV2ZW50IGFuZCBwYXRpZW50IHRvb2sgYXBwcm94aW1hdGVseSAxMiBob3VycyB0byByZXR1cm4gdG8gbm9ybWFsXCIuIE9uIDIwLU1BWS0yMDA4IHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIGFuZCBnYWJhcGVudGluIChORVVST05USU4pIHdhcyBkaXNjb250aW51ZWQuIFN1YnNlcXVlbnRseSwgdGhlIHBhdGllbnQgcmVjb3ZlcmVkIGZyb20gdGhlIGhhbGx1Y2luYXRpb24sIHZpc3VhbCBoYWxsdWNpbmF0aW9uLCBjb25mdXNpb24sIGdhaXQgZGlzdHVyYmFuY2UsIHZvbWl0aW5nLCBkaXp6eSwgZmxhc2hpbmcgbGlnaHRzLCBzbGVlcHksIHVud2VsbCwgbmF1c2VhIGFuZCBpbmFkdmVydGVudCBleHBvc3VyZSB0byBkcnVnLlxyXG5cclxuVGhlIHJlcG9ydGluZyBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBjb25zaWRlcmVkIHRoZSBoYWxsdWNpbmF0aW9uLCB2aXN1YWwgaGFsbHVjaW5hdGlvbiwgY29uZnVzaW9uLCBnYWl0IGRpc3R1cmJhbmNlLCAgdm9taXRpbmcsIGRpenp5LCBmbGFzaGluZyBsaWdodHMsIHNsZWVweSwgdW53ZWxsLCBuYXVzZWEgYW5kIGluYWR2ZXJ0ZW50IGV4cG9zdXJlIHRvIGRydWcgdG8gYmUgb3RoZXIgaW1wb3J0YW50IG1lZGljYWwgZXZlbnRzLlxyXG4gXHJcblRoZSBhZ2VuY3kgcmVwb3J0ZWQgYm90aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIGFuZCBnYWJhcGVudGluIChORVVST05USU4pIGFzIHN1c3BlY3QgdGhlcmFwaWVzLlxyXG4gXHJcbk5vIGZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlLiIsImNvbk1lZHMiOiJtZXRmb3JtaW5cclxuYXNwaXJpbiIsInB0TGlzdCI6IkhhbGx1Y2luYXRpb24gKFByaW1hcnkpIUAjI0AhSGFsbHVjaW5hdGlvbiwgdmlzdWFsIUAjI0AhQ29uZnVzaW9uYWwgc3RhdGUhQCMjQCFHYWl0IGRpc3R1cmJhbmNlIUAjI0AhVm9taXRpbmchQCMjQCFEaXp6aW5lc3MhQCMjQCFQaG90b3BzaWEhQCMjQCFTb21ub2xlbmNlIUAjI0AhTWFsYWlzZSFAIyNAIU5hdXNlYSFAIyNAIUFjY2lkZW50YWwgZXhwb3N1cmUgdG8gcHJvZHVjdCIsImNhc2VJZCI6ODEzNzA2LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTMxLCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiVFJBTUFET0wgSFlEUk9DSExPUklERSxORVVST05USU4iLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNDMsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjExMTFHQlIwMDA4MSIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDA1ODUsInB0IjoiQ2FyZGlvLXJlc3BpcmF0b3J5IGFycmVzdCIsInByb2R1Y3RGYW1pbHkiOiI5Mzg0IE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDExLTExLTE0VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiJZZXMiLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIENhcmRpby1yZXNwaXJhdG9yeSBhcnJlc3RcclxuMikgQWJkb21pbmFsIHBhaW4iLCJhc3Nlc3NPdXRjb21lIjoiTm90IFJlY292ZXJlZC9Ob3QgUmVzb2x2ZWQiLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJDYXJkaW8tcmVzcGlyYXRvcnkgYXJyZXN0Iiwib3V0Y29tZSI6Ik5vdCBSZWNvdmVyZWQvTm90IFJlc29sdmVkIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFLEZFTlRBTllMLExZUklDQSxPUkFNT1JQSCxBQ0VUQU1JTk9QSEVOLFRBUkdJTiIsImNvbkNvbWl0Ijoicm9waW5pcm9sZSIsImdlbmRlciI6Ik1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjQsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MiwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjIzIiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gYSBhZ2VuY3kgdmlhIExhYm9waGFybSBMdGQgKG1hbnVmYWN0dXJlciBudW1iZXIgR0ItTEFCT1BIQU1SVy0wMDI0MjIpIGFzIHBhcnQgb2YgYSBidXNpbmVzcyBhZ3JlZW1lbnQsIGNvbmNlcm5pbmcgYSA2NSB5ZWFyIG9sZCBtYWxlIHdpdGggbGl2ZXIgY2FyY2lub21hLCBoYWxsdXggdmFsZ3VzLCBQYXJraW5zb24ncyBkaXNlYXNlLCBoZWxpY29iYWN0ZXIgZ2FzdHJpdGlzLCBoaWF0dXMgaGVybmlhLCBsdW5nIGFic2Nlc3MgYW5kIHBhcmtpbnNvbmlzbSAoY29uZnVzaW5nIGluZm9ybWF0aW9uIHdoZXRoZXIgaXQgd2FzIGlkaW9wYXRoaWMgb3IgZHJ1Zy1pbmR1Y2VkIC0gc2Vjb25kYXJ5IHRvIGZsdW94YXRhbmUgYW5kIG1ldG9jbG9wcmFtaWRlKSwgcHVsbW9uYXJ5IGVtYm9saXNtIGFuZCBzcG9uZHlsb2xpc3RoZXNpcyBhbmQgYSBoaXN0b3J5IG9mIGRlcHJlc3Npb24sIGJ1bmlvbiBvcGVyYXRpb24gKEpVTi0yMDA2KSwgd2hvIHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUsIDEwMCBtZyBjYXBzdWxlLCAxMDAgbWcsIHRocmVlIHRpbWVzIGEgZGF5IChkdXJhdGlvbiBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBTZWNvbmRhcnkgc3VzcGVjdCBjb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIGZlbnRhbnlsIDI1bWNnLCBvbmNlIGluIHRocmVlIGRheXMsIHByZWdhYmFsaW4gKExZUklDQSkgMTUwbWcsIHR3aWNlIGEgZGF5IGFuZCAzMDBtZyB0d2ljZSBhIGRheSBmb3IgYWJkb21pbmFsIHBhaW4gaW4gMjAwOCwgbW9ycGhpbmUgc3VscGhhdGUgKE9SQU1PUlBIKSAxMG1nIHRocmVlIHRpbWVzIGEgZGF5IGFuZCAxNW1nIHRocmVlIHRpbWVzIGEgZGF5LCBhY2V0YW1pbm9waGVuIDFnIHRocmVlIHRpbWVzIGEgZGF5IGFuZCBuYWxveG9uZSBoeWRyb2NobG9yaWRlICgrKSBveHljb2RvbmUgaHlkcm9jaGxvcmlkZSAoVEFSR0lOKSA1bWcgIHRocmVlIHRpbWVzIGEgZGF5IChkdXJhdGlvbiBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBDb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIHJvcGluaXJvbGUuIFN1YnNlcXVlbnRseSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBjYXJkaW8gcmVzcGlyYXRvcnkgYXJyZXN0IGFuZCBhYmRvbWluYWwgY3JhbXBzIGFuZCB3YXMgaG9zcGl0YWxpc2VkLiBUaGUgcGF0aWVudCB1bmRlcndlbnQgYSBjb21wdXRlcmlzZWQgdG9tb2dyYXBoeSBzY2FuIGluIDIwMDggdG8gdGVzdCBmb3IgUGFya2luc29uJ3MgZGlzZWFzZS4gVGhlIGFnZW5jeSByZXBvcnQgc3RhdGVkIFwiSSB3YXMgcHJlc2NyaWJlZCBwcmVnYWJhbGluIChMWVJJQ0EpIGluIDIwMDggZm9yIGFiZG9taW5hbCBwYWluLiBEaWFnbm9zaXMgbmV2ZXIgbWFkZS4gSSBoYXZlIGJlZW4gYWRtaXR0ZWQgYXMgaW4tcGF0aWVudCBubyBsZXNzIHRoYW4gMTQgdGltZXMgaW4gVUsgYW5kIDMgdGltZXMgYWJyb2FkIHNpbmNlIGEgYnVuaW9uIG9wZXJhdGlvbiB3ZW50IGJhZGx5IHdyb25nLiBJbiBpbnRlbnNpdmUgdGhlcmFweSB1bml0IChJVFUpIGZvciByZXNwaXJhdG9yeS1jYXJkaWFjIGFycmVzdHMgYmFjay9iYWNrIC0gY2F1c2VkIGJ5IGhlYXZ5IGRvc2VzIG9mIG9waWF0ZXMgcHJlc2NyaWJlZCBieSBnZW5lcmFsIHByYWN0aXRpb25lciBhbmQgcHJlZ2FiYWxpbiAzMDBtZyB0d2ljZSBkYWlseS4gQ3JhbXBpbmcgYXR0YWNrIGJlZ2lucyBvbiBzdGFuZGluZyB1cCwgcmVsaXZlZCBieSByZWNsaW5pbmcgaW4gcHJvbmUgcG9zaXRpb24gd2l0aCBzcGluZSBzdHJldGNoZWQgaG9yaXpvbnRhbGx5IHRvIG1heGltdW0uIFBhaW4gc3RpbGwgdW5kaWFnbm9zZWQuIFByZWdhYmFsaW4gMTUwbWcgdHdpY2UgZGFpbHkgc3RhcnRlZCBpbiAyMDA4LiBBZnRlciByZXNwaXJhdG9yeS1jYXJkaWFjIGFycmVzdCwgYW5hbGdlc2ljcyByZWR1Y2VkLiBQcmVnYWJhbGluIDE1MG1nIHJlbWFpbnMgc2FtZSBhdCAgMzAwbWcgdHdpY2UgZGFpbHkgYW5kIEkgYW0gd29uZGVyaW5nIGlmIHRoaXMgZHJ1ZyBpcyB0aGUgY2F1c2Ugb2YgYWJkb21pbmFsIGNyYW1wcyAtIGV4Y3J1Y2lhdGluZ2x5IHNldmVyZSAtIGdvZXMgdXAgdG8gOS0xMCAoc2NhbGUgb2YgMToxMCkgYXMgSSB0eXBlIHRoaXMgd2lsbCByZXR1cm4gdG8gMCB3aGVuIEkgbGllIGRvd24gcHJvbmUuIE1vcmUgd2hlbiBJIGVhdCBhbmQgb24gYm93ZWwgbW92ZW1lbnQgb3IgYW55IGFjdCBvZiBmb3J3YXJkIGZsZXhpb25cIi4gVGhlIGRvc2FnZSBvZiB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCBmZW50YW55bCwgcHJlZ2FiYWxpbiAoTFlSSUNBKSwgb3JhbW9ycGgsIGFjZXRhbWlub3BoZW4gYW5kIG5hbG94b25lIGh5ZHJvY2hsb3JpZGUgKCspIG94eWNvZG9uZSBoeWRyb2NobG9yaWRlIChUQVJHSU4pIHdhcyByZWR1Y2VkLiBBY3Rpb24gdGFrZW4gd2l0aCByZWdhcmRzIHRvIHRoZXJhcHkgd2l0aCBwcmVnYWJhbGluIChMWVJJQ0EpIHdhcyB1bmtub3duLiBUaGUgcGF0aWVudCdzIGFiZG9taW5hbCBjcmFtcHMgcGVyc2lzdGVkLiBUaGUgb3V0Y29tZSBvZiB0aGUgY2FyZGlvIHJlc3BpcmF0b3J5IGFycmVzdCB3YXMgdW5rbm93bi5cclxuXHJcblRoZSByZXBvcnRpbmcgaGVhbHRoIGNhcmUgcHJvZmVzc2lvbmFsIGNvbnNpZGVyZWQgdGhlIGNhcmRpbyByZXNwaXJhdG9yeSBhcnJlc3QgYW5kIGFiZG9taW5hbCBjcmFtcHMgdG8gZGlzYWJsaW5nLiBcclxuXHJcblRoZSBhZ2VuY3kgcmVwb3J0ZWQgdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSwgZmVudGFueWwsIHByZWdhYmFsaW4gKExZUklDQSksIG9yYW1vcnBoLCBhY2V0YW1pbm9waGVuIGFuZCBuYWxveG9uZSBoeWRyb2NobG9yaWRlICgrKSBveHljb2RvbmUgaHlkcm9jaGxvcmlkZSAoVEFSR0lOKSBhcyBhbGwgc3VzcGVjdCB0aGVyYXBpZXMuXHJcblxyXG5Gb2xsb3ctdXAgaW5mb3JtYXRpb24gd2FzIHJlY2VpdmVkIG9uIDI5LU5PVi0yMDExLiBUaGUgcmVwb3J0IHN0YXRlZCAgXCJBZHZpc2VkIHRvIHRyeSBcInBoYXNpbmcgb3V0XCIgbXkgdHJlYXRtZW50IGZvciBQYXJraW5zb24ncyBkaXNlYXNlIGFzIG9uZSBvciB0d28gb2YgbXkgdHJlYXRpbmcgY29uc3VsdGFudHMgd2VyZSBub3QgYWxsIHN1cmUgSSBoYWQgdGhpcyBjb25kaXRpb24gdG8gc3RhcnQgd2l0aC4gSSByZWR1Y2VkIHRoZSByb3Bpbm9yb2xlLCBmb3VuZCBubyBkaWZmZXJlbmNlIGFuZCBkaWQgbm90IHdhbnQgdG8gcHJvY2VlZCBmdXJ0aGVyIHVudGlsIEkgaGFkIGZ1cnRoZXIgZGlzY3Vzc2VkIHdpdGggbXkgZ2VuZXJhbCBwcmFjdGl0aW9uZXIgKEdQKS4gSGUgd2FzIGF3YXkgb24gdGhhdCBkYXkgYW5kIEkgc3Bva2UgdG8gaGlzIGNvbGxlZ3VlIHdobyBhZHZpc2VkIG1lIHRvIHN0b3AgcHJlZ2FiYWxpbi4gSSBmZWx0IG11Y2ggd29yc2UsIGludGVuc2l0eSBvZiBwYWluIG11Y2ggZ3JlYXRlclwiLiBMYWJvcmF0b3J5IHRlc3RzIHdlcmUgYWRkZWQgYW5kIHRoZSBzZXJpb3VzIGNyaXRlcmlhIG9mIGxpZmUgdGhyZWF0ZW5pbmcgd2FzIHJlbW92ZWQuIFxyXG5cclxuRm9sbG93LXVwIGluZm9ybWF0aW9uIHdhcyByZWNlaXZlZCBvbiAyMC1ERUMtMjAxMS4gUm9waW5pcm9sZSB3YXMgYWRkZWQgYXMgYSBjb25jb21pdGFudCB0aGVyYXB5IGFuZCBpdHMgaW5kaWNhdGlvbiAnUGFya2luc29uJ3MgZGlzZWFzZS4gVGhlIGluZGljYXRpb24gZm9yIGZsdW94ZXRpbmUgYW5kIG1ldG9jbG9wcmFtaWRlIHdhcyBkZXByZXNzaW9uLlxyXG4gXHJcbk5vIGZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlLiIsImNvbk1lZHMiOiJyb3Bpbmlyb2xlIiwicHRMaXN0IjoiQ2FyZGlvLXJlc3BpcmF0b3J5IGFycmVzdCAoUHJpbWFyeSkhQCMjQCFBYmRvbWluYWwgcGFpbiIsImNhc2VJZCI6MTkyNDgwNCwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDkzMCwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUsRkVOVEFOWUwsTFlSSUNBLE9SQU1PUlBILEFDRVRBTUlOT1BIRU4sVEFSR0lOIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTQyLCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMTExR0JSMDAwNzEiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwNTg1LCJwdCI6IkRpenppbmVzcyIsInByb2R1Y3RGYW1pbHkiOiI5Mzg0IE9SQUwiLCJmbGFnZ2VkIjpmYWxzZSwiY2FzZVJlcG9ydFR5cGUiOiJTcG9udGFuZW91cyIsImNhc2VJbml0UmVjZWlwdERhdGUiOiIyMDExLTExLTA5VDAwOjAwOjAwWiIsInJlcG9ydGVyc0hjcEZsYWciOiItIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBEaXp6aW5lc3NcclxuMikgTmF1c2VhIiwiYXNzZXNzT3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6IkRpenppbmVzcyIsIm91dGNvbWUiOiJSZWNvdmVyZWQvUmVzb2x2ZWQiLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJjb25Db21pdCI6ImFsbG9wdXJpbm9sXHJcbmFjZXRhbWlub3BoZW4gKCspIGNvZGVpbmUgcGhvc3BoYXRlXHJcbmNvbGNoaWNpbmVcclxuZGljbG9mZW5hYyBzb2RpdW1cclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZSIsImdlbmRlciI6Ik1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjIyIiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gYW4gYWdlbmN5IHZpYSBMYWJvcGhhcm0gTHRkIChHQi1MQUJPUEhBUk1XLTAwMjQwMCkgYXMgcGFydCBvZiBhIGJ1c2luZXNzIGFncmVlbWVudCBjb25jZXJuaW5nIGEgNDAgeWVhciBvbGQgbWFsZSB3aXRoIGdvdXQsIGdvdXR5IGFydGhyaXRpcywgaW50ZXJ2ZXJ0ZWJyYWwgZGlzYyBwcm9sYXBzZSwgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLCBrbmVlIHBhaW4sIGxvdyBiYWNrIHBhaW4sIG11c2N1bG9za2VsZXRhbCBkaXNvcmRlciwgbmVydm91cyBzeXN0ZW0gZGlzb3JkZXIsIGFuZCBzY2FiaWVzIGluZmVzdGF0aW9uIGFuZCBhIGhpc3Rvcnkgb2YgcmVjdGFsIGhhZW1vcnJoYWdlLCBqb2ludCBhc3BpcmF0aW9uLCByb2FkIHRyYWZmaWMgYWNjaWRlbnQgYW5kIHZhc2VjdG9teSB3aG8gb24gMzEtT0NULTIwMTEgd2FzIHBsYWNlZCBvbiB0aGVyYXB5IHdpdGggdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSwgY2Fwc3VsZSAoZG9zZSwgZHVyYXRpb24gYW5kIGluZGljYXRpb24gbm90IHJlcG9ydGVkKS4gQ29uY29taXRhbnQgdGhlcmFweSBpbmNsdWRlZCBhbGxvcHVyaW5vbCwgYWNldGFtaW5vcGhlbi9jb2RlaW5lIHBob3NwaGF0ZSwgY29sY2hpY2luZSwgZGljbG9mZW5hYyBzb2RpdW0gYW5kIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgKG1hbnVmYWN0dXJlciB1bmtub3duKS4gT24gMzEtT0NULTIwMTEgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgbmF1c2VhLiBTdWJzZXF1ZW50bHkgb24gYW4gdW5rbm93biBkYXRlIHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIGRpenppbmVzcy4gQWN0aW9uIHRha2VuIHdpdGggcmVnYXJkcyB0byB0aGVyYXB5IHdpdGggdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSB3YXMgdW5rbm93bi4gU3Vic2VxdWVudGx5LCB0aGUgcGF0aWVudCByZWNvdmVyZWQgZnJvbSB0aGUgbmF1c2VhLiBUaGUgb3V0Y29tZSBvZiB0aGUgZGl6emluZXNzIHdhcyB1bmtub3duLlxyXG5cclxuVGhlICByZXBvcnRpbmcgaGVhbHRoY2FyZSBwcm9mZXNzaW9uYWwgY29uc2lkZXJlZCB0aGUgZGl6emluZXNzIGFuZCBuYXVzZWEgYXMgb3RoZXIgaW1wb3J0YW50IG1lZGljYWwgZXZlbnRzLlxyXG5cclxuTm8gZnVydGhlciBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuIiwiY29uTWVkcyI6ImFsbG9wdXJpbm9sXHJcbmFjZXRhbWlub3BoZW4gKCspIGNvZGVpbmUgcGhvc3BoYXRlXHJcbmNvbGNoaWNpbmVcclxuZGljbG9mZW5hYyBzb2RpdW1cclxudHJhbWFkb2wgaHlkcm9jaGxvcmlkZSIsInB0TGlzdCI6IkRpenppbmVzcyAoUHJpbWFyeSkhQCMjQCFOYXVzZWEiLCJjYXNlSWQiOjkyNTgzOSwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDkyOSwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxNDEsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjExMTBHQlIwMDA4OSIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDA1ODUsInB0IjoiRHJ1ZyBoeXBlcnNlbnNpdGl2aXR5IiwicHJvZHVjdEZhbWlseSI6IjkzODQgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTEtMTAtMjRUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6IlllcyIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgRHJ1ZyBoeXBlcnNlbnNpdGl2aXR5IiwiYXNzZXNzT3V0Y29tZSI6IlVua25vd24iLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJOb24tU2VyaW91cyIsInNlcmlvdXMiOiJOb24tU2VyaW91cyIsInByaW1hcnlFdmVudCI6IkRydWcgaHlwZXJzZW5zaXRpdml0eSIsIm91dGNvbWUiOiJVbmtub3duIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwiY29uQ29taXQiOiIiLCJnZW5kZXIiOiJGZW1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MSwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjIxIiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gYW4gYWdlbmN5IGNvbmNlcm5pbmcgYSBmZW1hbGUgd2hvIHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUsIGNhcHN1bGUgKGRvc2UsIGR1cmF0aW9uIGFuZCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIFN1YnNlcXVlbnRseSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBhIGRydWcgYWxsZXJneS4gVGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgd2FzIGRpc2NvbnRpbnVlZC4gVGhlIG91dGNvbWUgb2YgdGhlIGRydWcgYWxsZXJneSB3YXMgdW5rbm93bi5cclxuXHJcblxyXG4gTm8gZnVydGhlciBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuXHJcblxyXG5UaGlzIHZlcnNpb24gd2FzIGNyZWF0ZWQgdG8gYWRkIGEgY29tcGFueSBudW1iZXIuIiwiY29uTWVkcyI6IiIsInB0TGlzdCI6IkRydWcgaHlwZXJzZW5zaXRpdml0eSAoUHJpbWFyeSkiLCJjYXNlSWQiOjEwNTUxODMsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5MjgsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTQwLCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMTEwR0JSMDAwNjMiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwNTg1LCJwdCI6IlByb2R1Y3QgcHJlc2NyaWJpbmcgZXJyb3IiLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMS0xMC0xN1QwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiWWVzIiwibWFzdGVyUHJlZlRlcm1BbGwiOiIxKSBQcm9kdWN0IHByZXNjcmliaW5nIGVycm9yXHJcbjIpIE9mZiBsYWJlbCB1c2UiLCJhc3Nlc3NPdXRjb21lIjoiVW5rbm93biIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6Ik5vbi1TZXJpb3VzIiwic2VyaW91cyI6Ik5vbi1TZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiUHJvZHVjdCBwcmVzY3JpYmluZyBlcnJvciIsIm91dGNvbWUiOiJVbmtub3duIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwiY29uQ29taXQiOiIiLCJnZW5kZXIiOiIiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjQsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MSwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjIiLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBhIHBoYXJtYWNpc3QgY29uY2VybmluZyBhIHBhdGllbnQgd2hvIHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUsIDUwbWcgKGRydWcgcHJlc2NyaWJpbmcgZXJyb3IgYW5kIG9mZiBsYWJlbCB1c2UpICh0b3RhbCBkYWlseSBkb3NlLCBkdXJhdGlvbiBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBUaGUgcGhhcm1hY2lzdCBzdGF0ZWQgXCJ0aGF0IHRoZXkgaGF2ZSBub3QgZGlzcGVuc2VkIHRoZSBwcm9kdWN0IGJ1dCBjYW5ub3QgY29uZmlybSB3aGV0aGVyIHRoZSBwYXRpZW50IGhhZCBiZWVuIHRha2luZyB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIHByZXZpb3VzbHlcIi4gVGhlIGFjdGlvbiB0YWtlbiB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgd2FzIHVua25vd24uXHJcblxyXG5ObyBmdXJ0aGVyIGluZm9ybWF0aW9uIGlzIGF2YWlsYWJsZS5cclxuXHJcblRoaXMgdmVyc2lvbiB3YXMgY3JlYXRlZCB0byBhZGQgYW4gb3RoZXIgY29tcGFueSBudW1iZXIuIiwiY29uTWVkcyI6IiIsInB0TGlzdCI6IlByb2R1Y3QgcHJlc2NyaWJpbmcgZXJyb3IgKFByaW1hcnkpIUAjI0AhT2ZmIGxhYmVsIHVzZSIsImNhc2VJZCI6MTUzODgyMiwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDkyNywiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxMzksImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjExMTBHQlIwMDA2MiIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDA1ODUsInB0IjoiRHJ1ZyB3aXRoZHJhd2FsIHN5bmRyb21lIiwicHJvZHVjdEZhbWlseSI6IjkzODQgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTEtMTAtMTRUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIERydWcgd2l0aGRyYXdhbCBzeW5kcm9tZSIsImFzc2Vzc091dGNvbWUiOiJVbmtub3duIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiRHJ1ZyB3aXRoZHJhd2FsIHN5bmRyb21lIiwib3V0Y29tZSI6IlVua25vd24iLCJsaXN0ZWRuZXNzIjoiVW5saXN0ZWQiLCJjb3VudHJ5IjoiVU5JVEVEIEtJTkdET00iLCJzdXNwUHJvZCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJjb25Db21pdCI6IiIsImdlbmRlciI6Ik1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjE5IiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGZyb20gdGhlIGFnZW5jeSwgdmlhIExhYm9waGFybSBhcyBwYXJ0IG9mIGEgYnVzaW5lc3MgYWdyZWVtZW50IChtYW51ZmFjdHVyZXIgbnVtYmVyIEdCLTAwMjM5MykgY29uY2VybmluZyBhIG1hbGUgd2hvIHdhcyBwbGFjZWQgb24gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUsIGNhcHN1bGUgKGRvc2UsIGR1cmF0aW9uIGFuZCBpbmRpY2F0aW9uIG5vdCByZXBvcnRlZCkuIFN1YnNlcXVlbnRseSB0aGUgcGF0aWVudCBleHBlcmllbmNlZCBkcnVnIHdpdGhkcmF3YWwgc3luZHJvbWUuIFRoZSBhY3Rpb24gdGFrZW4gd2l0aCByZWdhcmRzIHRvIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIHdhcyB1bmtub3duLiBUaGUgb3V0Y29tZSBvZiB0aGUgZHJ1ZyB3aXRoZHJhd2FsIHN5bmRyb21lIHdhcyB1bmtub3duLlxyXG5cclxuVGhlIHJlcG9ydGluZyBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBjb25zaWRlcmVkIHRoZSBkcnVnIHdpdGhkcmF3YWwgc3luZHJvbWUgdG8gYmUgYW4gb3RoZXIgaW1wb3J0YW50IG1lZGljYWwgZXZlbnQuIFxyXG5cclxuXHJcblxyXG4gTm8gZnVydGhlciBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuIiwiY29uTWVkcyI6IiIsInB0TGlzdCI6IkRydWcgd2l0aGRyYXdhbCBzeW5kcm9tZSAoUHJpbWFyeSkiLCJjYXNlSWQiOjExNDIwOTAsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5MjYsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTM4LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMTEwR0JSMDAwMTEiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwNTg1LCJwdCI6IkR5c3RvbmlhIiwicHJvZHVjdEZhbWlseSI6IjkzODQgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTEtMDktMjlUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6Ii0iLCJtYXN0ZXJQcmVmVGVybUFsbCI6IjEpIER5c3RvbmlhIiwiYXNzZXNzT3V0Y29tZSI6IlVua25vd24iLCJhc3Nlc3NMaXN0ZWRuZXNzIjoiIiwiYXNzZXNzU2VyaW91c25lc3MiOiJTZXJpb3VzIiwic2VyaW91cyI6IlNlcmlvdXMiLCJwcmltYXJ5RXZlbnQiOiJEeXN0b25pYSIsIm91dGNvbWUiOiJVbmtub3duIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwiY29uQ29taXQiOiJnYWJhcGVudGluXHJcbnBvbHlldGh5bGVuZSBnbHljb2wgMzM1MCAoKykgcG90YXNzaXVtIGNobG9yaWRlICgrKSBzb2RpdW0gYmljYXJib25hdGUgKCspIHNvZGl1bSBjaGxvcmlkZVxyXG5hY2V0YW1pbm9waGVuXHJcbnByb2N5Y2xpZGluZSBoeWRyb2NobG9yaWRlIiwiZ2VuZGVyIjoiRmVtYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjo0LCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjIxOCIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGFuIGFnZW5jeSB2aWEgTGFib3BoYXJtIGFzIHBhcnQgb2YgYSBidXNpbmVzcyBhZ3JlZW1lbnQgKG1hbnVmYWN0dXJlciBudW1iZXIgR0IwMDIzODYpIGNvbmNlcm5pbmcgYSAzNiB5ZWFyIG9sZCBmZW1hbGUgd2l0aCBhYm5vcm1hbCBnYWl0LCBhcnRocmFsZ2lhLCBiYWNrIGFjaGUsIGJ1bmlvbiwgY2hvbmRyb21hbGFjaWEgcGF0ZWxsYWUsIGRlcHJlc3NpdmUgZGlzb3JkZXIsIGR5c21lbm9ycmhvZWEsIGVuZG9tZXRyaW9zaXMsIGV1c3RhY2hpYW4gY2F0YXJyaCwgaGFsbHV4IHZhbGd1cyAoYWNxdWlyZWQpLCBpbnNvbW5pYSwgaXJyaXRhYmxlIGJvd2VsIHN5bmRyb21lLCBsYXRlcmFsIGVwaWNvbmR5bGl0aXMsIGxvdyBiYWNrIHBhaW4gYW5kIG5haWwgZHlzdHJvcGh5IGFuZCBhIGhpc3Rvcnkgb2YgYWJkb21pbmFsIHBhaW4sIGNlcnZpY2FsIGNhbmNlciwgY2hlc3Qgd2FsbCBwYWluLCBjb25zdGlwYXRpb24sIGVwaXN0YXhpcywgZWxlY3Ryb2NhcmRpb2dyYW0sIHN5bmNvcGUsIGZhbGwsIGdhc3Ryb2VudGVyaXRpcywgZ2FzdHJvc2NvcHksIGhlYWQgaW5qdXJ5LCBoeXBva2FsYWVtaWEsIGxhcGFyb3Njb3B5LCBtaWdyYWluZSwgbmFpbCBpbmZlY3Rpb24sIG9ueWNob215Y29zaXMsIG92YXJpYW4gY3lzdCwgcGFpbiBpbiBsaW1iLCBza2luIHBhcGlsbG9tYSwgcmFzaCwgcmVjdGFsIGhhZW1vcnJoYWdlLCByb2FkIHRyYWZmaWMgYWNjaWRlbnQsIHN1dHVyZSByZW1vdmFsLCB0ZW1wb3JvbWFuZGlidWxhciBqb2ludCBkaXNvcmRlciwgdG9vdGggZXh0cmFjdGlvbiwgYWJkb21lbiB1bHRyYXNvdW5kLCBlYXIgZGlzb3JkZXIsIHVuc3BlY2lmaWVkIG51dHJpdGlvbmFsIGRlZmljaWVuY3ksIHZhZ2luYWwgY2FuZGlkaWFzaXMsIHZhZ2luaXRpcywgdm9taXRpbmcgYW5kIGRlY3JlYXNlZCB3ZWlnaHQ7IGFuZCBhIHBhc3QgZHJ1ZyBoaXN0b3J5IG9mIGxvcmF0YWRpbmUsIHdobyBvbiAgMjItQVVHLTIwMTEgd2FzIHBsYWNlZCBvbiB0aGVyYXB5IHdpdGggdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSwgMTAwIG1nIGNhcHN1bGUsIDEwMCBtZyAodG90YWwgZGFpbHkgZG9zZSwgZHVyYXRpb24gYW5kIGluZGljYXRpb24gbm90IHJlcG9ydGVkKS4gQ29uY29taXRhbnQgdGhlcmFweSBpbmNsdWRlZCBnYWJhcGVudGluLCBwb2x5ZXRoeWxlbmUgZ2x5Y29sIDMzNTAvcG90YXNzaXVtIGNobG9yaWRlL3NvZGl1bSBiaWNhcmJvbmF0ZS9zb2RpdW0gY2hsb3JpZGUgKE1PVklDT0wpLCBhY2V0YW1pbm9waGVuIGFuZCBwcm9jeWNsaWRpbmUgaHlkcm9jaGxvcmlkZS4gT24gMjAtU0VQLTIwMTEgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgJ2FuIGFjdXRlJyBkeXN0b25pYyByZWFjdGlvbiBhbmQgd2FzIGhvc3BpdGFsaXNlZC4gT24gYW4gdW5rbm93biBkYXRlIHRoZSBwYXRlaW50IGhhZCBhIG5vcm1hbCBsaW1iIFgtcmF5IChub3QgZnVydGhlciBzcGVjaWZpZWQpLiBUaGUgYWN0aW9uIHRha2VuIHdpdGggcmVnYXJkcyB0byB0aGVyYXB5IHdpdGggdHJhbWFkb2wgaHlkcm9jaGxvcmlkZSB3YXMgdW5rbm93bi4gVGhlIG91dGNvbWUgb2YgdGhlIGR5c3RvbmljIHJlYWN0aW9uIHdhcyB1bmtub3duLlxyXG5cclxuIFxyXG5cclxuIE5vIGZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlLiIsImNvbk1lZHMiOiJnYWJhcGVudGluXHJcbnBvbHlldGh5bGVuZSBnbHljb2wgMzM1MCAoKykgcG90YXNzaXVtIGNobG9yaWRlICgrKSBzb2RpdW0gYmljYXJib25hdGUgKCspIHNvZGl1bSBjaGxvcmlkZVxyXG5hY2V0YW1pbm9waGVuXHJcbnByb2N5Y2xpZGluZSBoeWRyb2NobG9yaWRlIiwicHRMaXN0IjoiRHlzdG9uaWEgKFByaW1hcnkpIiwiY2FzZUlkIjoxODUxOTg4LCJhc3NpZ25lZFRvIjoiYmhhZ3lhIiwiaXNDYXNlU2VyaWVzR2VuZXJhdGVkIjp0cnVlLCJjb21tZW50cyI6bnVsbCwiaXNBdHRhY2htZW50IjpmYWxzZSwiZ2xvYmFsSWQiOjEwOTI1LCJiYWRnZSI6Ik5ldyIsInByb2R1Y3RMaXN0IjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInNpZ25hbHNBbmRUb3BpY3MiOltdLCJqdXN0aWZpY2F0aW9uIjoiIiwiYWxlcnRUYWdzIjpbXX0seyJhbGVydENvbmZpZ0lkIjoxMiwiaWQiOjEzNywiYWxlcnROYW1lIjoiUGVyZl9RdWFsXzZUUkFNQURPTCBIWURST0NITE9SSURFIENhcHN1bGUgKFByb2R1Y3QgTmFtZSkiLCJjYXNlTnVtYmVyIjoiMTEwOUdCUjAwMTYxIiwiZGV0ZWN0ZWREYXRlIjoiMjEtTWF5LTIwMjAiLCJkdWVEYXRlIjoiMDUtSnVuLTIwMjAiLCJwcm9kdWN0TmFtZSI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJwcm9kdWN0SWQiOjEwMDU4NSwicHQiOiJTZWl6dXJlIiwicHJvZHVjdEZhbWlseSI6IjkzODQgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IkxpdGVyYXR1cmUgTWFya2V0ZWQiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMS0wOS0yMlQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgU2VpenVyZSIsImFzc2Vzc091dGNvbWUiOiJVbmtub3duIiwiYXNzZXNzTGlzdGVkbmVzcyI6IiIsImFzc2Vzc1NlcmlvdXNuZXNzIjoiU2VyaW91cyIsInNlcmlvdXMiOiJTZXJpb3VzIiwicHJpbWFyeUV2ZW50IjoiU2VpenVyZSIsIm91dGNvbWUiOiJVbmtub3duIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwiY29uQ29taXQiOiJhbGNvaG9sIiwiZ2VuZGVyIjoiTWFsZSIsImFnZSI6IiIsInJlY2hhbGxlbmdlIjoiTi9BIiwibG9ja2VkRGF0ZSI6IiIsImRlYXRoIjoiTm8iLCJjYXNlVmVyc2lvbiI6NCwiZHVlSW4iOjksImZvbGxvd1VwTnVtYmVyIjozLCJmb2xsb3dVcEV4aXN0cyI6ZmFsc2UsImV4ZWNDb25maWdJZCI6MTUsImRpc3Bvc2l0aW9uIjoiTmV3IiwiY3VycmVudERpc3Bvc2l0aW9uIjoiTmV3IiwiZGlzcG9zaXRpb25DbG9zZVN0YXR1cyI6ZmFsc2UsInByaW9yaXR5Ijp7InZhbHVlIjoiVXJnZW50IiwiaWNvbkNsYXNzIjoibWRpIG1kaS1hbHBoYS11LWNpcmNsZSByZWQtMSJ9LCJhc3NpZ25lZFRvVXNlciI6eyJpZCI6NzQzNSwiZnVsbE5hbWUiOiJiaGFneWEiLCJ1c2VybmFtZSI6ImJoYWd5YSIsImVtYWlsIjoiTlIuQmhhZ3lhbGFrc2htaUByeGxvZ2l4LmNvbSJ9LCJhY3Rpb25Db3VudCI6MCwiY2FzZVR5cGUiOiIiLCJjb21wbGV0ZW5lc3NTY29yZSI6IiIsImluZE51bWJlciI6IiIsImFwcFR5cGVBbmROdW0iOiIiLCJjb21wb3VuZGluZ0ZsYWciOiIiLCJtZWRFcnJvcnNQdCI6IiIsInBhdGllbnRBZ2UiOiIiLCJzdWJtaXR0ZXIiOiIiLCJpc1ZhbGlkYXRpb25TdGF0ZUFjaGlldmVkIjpmYWxzZSwiaXNSZXZpZXdlZCI6ZmFsc2UsImxhc3RVcGRhdGVkIjoiMjAyMC0wNS0yMSAxNDoyMDoyMC4yMTciLCJjYXNlTmFycmF0aXZlIjoiSW5mb3JtYXRpb24gaGFzIGJlZW4gcmVjZWl2ZWQgZnJvbSBhIHBoeXNpY2lhbiwgd2hvIGlzIGFsc28gdGhlIGF1dGhvciBvZiBhIGxpdGVyYXR1cmUgYXJ0aWNsZSwgdGl0bGUgYXMgc3RhdGVkIGFib3ZlLCBhbmQgTGFib3BoYXJtIGFzIHBhcnQgb2YgYSBidXNpbmVzcyBhZ3JlZW1lbnQgKG1hbnVmYWN0dXJlciBudW1iZXIgR0ItTEFCT1BIQVJNVy0wMDIzOTEpIGNvbmNlcm5pbmcgYSA1MSB5ZWFyIG9sZCBtYWxlIHdobyB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCBjYXBzdWxlIChkb3NlLCBkdXJhdGlvbiBhbmQgaW5kaWNhdGlvbiBub3QgcmVwb3J0ZWQpLiBDb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIGFsY29ob2wgKGV0aGFub2wpLiBTdWJzZXF1ZW50bHkgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgdHdvIHNlaXp1cmVzIHdpdGhpbiAzIGhvdXJzIG9mIGVhY2ggb3RoZXIuIEl0IHdhcyByZXBvcnRlZCB0aGF0IFwiIFRoaXMgcGF0aWVudCdzIHJlYWN0aW9uIHN0YXJ0ZWQgb24gY2hhbmdpbmcgdG8gYSBzbG93IHJlbGVhc2UgZm9ybXVsYXRpb24gb2YgdHJhbWFkb2w6IEkgaGFkIHR3byBnbGFzc2VzIG9mIHJlZCB3aW5lIHBlciBldmVuaW5nIHdoaWxzdCBvbiB0aGUgdGFibGV0cywgY29udHJhcnkgdG8gd2hhdCB3YXMgcmVjb21tZW5kZWQuIFRoaXMgbWF5IGhhdmUgY29tcGxpY2F0ZWQgdGhlIGlzc3VlLiBIb3dldmVyLCBoYXZpbmcgYmVlbiBvbiBjb252ZW50aW9uYWwgdHJhbWFkb2wsIHRoZXJlIGhhZCBiZWVuIG5vIGlsbCBlZmZlY3RzLCBhbmQgaXQgd2FzIG9ubHkgd2hlbiBteSBwcmVzY3JpcHRpb24gd2FzIGNoYW5nZWQgdG8gc2xvdyByZWxlYXNlIHRyYW1hZG9sIHRoYXQgdGhlIHNlaXp1cmVzIG9jY3VycmVkLiBUd28gc2VpenVyZXMgd2l0aGluIDMgaG91cnMgb2YgZWFjaCBvdGhlciAtIHRoZSBmaXJzdCBhdCBob21lIHRoZSBzZWNvbmQgaW4gQWNjaWRlbnQgYW5kICBFbWVyZ2VuY3lcIi4gVGhlIGFjdGlvbiB0YWtlbiB3aXRoIHJlZ2FyZHMgdG8gdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgd2FzIHVua25vd24uIFRoZSBvdXRjb21lIG9mIHRoZSBzZWl6dXJlcyB3YXMgdW5rbm93bi5cclxuXHJcblVwb24gaW50ZXJuYWwgcmV2aWV3IHRoZSBzZWl6dXJlcyB3YXMgY29uc2lkZXJlZCB0byBiZSBhbiBvdGhlciBtZWRpY2FsIGltcG9ydGFudCBldmVudC5cclxuIFxyXG5Gb2xsb3ctdXAgaW5mb3JtYXRpb24gd2FzIHJlY2VpdmVkIG9uIDE4LU9jdC0yMDExLiBDb25jb21pdGFudCBtZWRpY2F0aW9uIHdhcyBhZGRlZC4gVGhlIHJlcG9ydCBzdGF0ZWQgXCJ0aGUgc3RydWN0dXJlZCBmaWVsZHMgb2YgdGhlIHJlcG9ydCBjb250YWluIGV0aGFub2wgYXMgY29uY29taXRhbnQgbWVkaWNhdGlvblwiLlxyXG5cclxuQWRkaXRpb25hbCBpbmZvcm1hdGlvbiBpcyBub3QgZXhwZWN0ZWQuIiwiY29uTWVkcyI6ImFsY29ob2wiLCJwdExpc3QiOiJTZWl6dXJlIChQcmltYXJ5KSIsImNhc2VJZCI6MTgwMDkyMCwiYXNzaWduZWRUbyI6ImJoYWd5YSIsImlzQ2FzZVNlcmllc0dlbmVyYXRlZCI6dHJ1ZSwiY29tbWVudHMiOm51bGwsImlzQXR0YWNobWVudCI6ZmFsc2UsImdsb2JhbElkIjoxMDkyNCwiYmFkZ2UiOiJOZXciLCJwcm9kdWN0TGlzdCI6IlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUiLCJzaWduYWxzQW5kVG9waWNzIjpbXSwianVzdGlmaWNhdGlvbiI6IiIsImFsZXJ0VGFncyI6W119LHsiYWxlcnRDb25maWdJZCI6MTIsImlkIjoxMzYsImFsZXJ0TmFtZSI6IlBlcmZfUXVhbF82VFJBTUFET0wgSFlEUk9DSExPUklERSBDYXBzdWxlIChQcm9kdWN0IE5hbWUpIiwiY2FzZU51bWJlciI6IjExMDlHQlIwMDE0OSIsImRldGVjdGVkRGF0ZSI6IjIxLU1heS0yMDIwIiwiZHVlRGF0ZSI6IjA1LUp1bi0yMDIwIiwicHJvZHVjdE5hbWUiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwicHJvZHVjdElkIjoxMDA1ODUsInB0IjoiUGFscGl0YXRpb25zIiwicHJvZHVjdEZhbWlseSI6IjkzODQgT1JBTCIsImZsYWdnZWQiOmZhbHNlLCJjYXNlUmVwb3J0VHlwZSI6IlNwb250YW5lb3VzIiwiY2FzZUluaXRSZWNlaXB0RGF0ZSI6IjIwMTEtMDktMjNUMDA6MDA6MDBaIiwicmVwb3J0ZXJzSGNwRmxhZyI6IlllcyIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgUGFscGl0YXRpb25zXHJcbjIpIERpenppbmVzc1xyXG4zKSBQcnVyaXR1cyIsImFzc2Vzc091dGNvbWUiOiJSZWNvdmVyaW5nL1Jlc29sdmluZyIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6IlBhbHBpdGF0aW9ucyIsIm91dGNvbWUiOiJSZWNvdmVyaW5nL1Jlc29sdmluZyIsImxpc3RlZG5lc3MiOiJVbmxpc3RlZCIsImNvdW50cnkiOiJVTklURUQgS0lOR0RPTSIsInN1c3BQcm9kIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsImNvbkNvbWl0IjoiYW1pdHJpcHR5bGluZSBoeWRyb2NobG9yaWRlXHJcbmFjZXRhbWlub3BoZW4gKCspIGNvZGVpbmUgcGhvc3BoYXRlXHJcbmRpY2xvZmVuYWNcclxuYWNldGFtaW5vcGhlblxyXG5hbGJ1dGVyb2wiLCJnZW5kZXIiOiJNYWxlIiwiYWdlIjoiIiwicmVjaGFsbGVuZ2UiOiJOL0EiLCJsb2NrZWREYXRlIjoiIiwiZGVhdGgiOiJObyIsImNhc2VWZXJzaW9uIjo1LCJkdWVJbiI6OSwiZm9sbG93VXBOdW1iZXIiOjAsImZvbGxvd1VwRXhpc3RzIjpmYWxzZSwiZXhlY0NvbmZpZ0lkIjoxNSwiZGlzcG9zaXRpb24iOiJOZXciLCJjdXJyZW50RGlzcG9zaXRpb24iOiJOZXciLCJkaXNwb3NpdGlvbkNsb3NlU3RhdHVzIjpmYWxzZSwicHJpb3JpdHkiOnsidmFsdWUiOiJVcmdlbnQiLCJpY29uQ2xhc3MiOiJtZGkgbWRpLWFscGhhLXUtY2lyY2xlIHJlZC0xIn0sImFzc2lnbmVkVG9Vc2VyIjp7ImlkIjo3NDM1LCJmdWxsTmFtZSI6ImJoYWd5YSIsInVzZXJuYW1lIjoiYmhhZ3lhIiwiZW1haWwiOiJOUi5CaGFneWFsYWtzaG1pQHJ4bG9naXguY29tIn0sImFjdGlvbkNvdW50IjowLCJjYXNlVHlwZSI6IiIsImNvbXBsZXRlbmVzc1Njb3JlIjoiIiwiaW5kTnVtYmVyIjoiIiwiYXBwVHlwZUFuZE51bSI6IiIsImNvbXBvdW5kaW5nRmxhZyI6IiIsIm1lZEVycm9yc1B0IjoiIiwicGF0aWVudEFnZSI6IiIsInN1Ym1pdHRlciI6IiIsImlzVmFsaWRhdGlvblN0YXRlQWNoaWV2ZWQiOmZhbHNlLCJpc1Jldmlld2VkIjpmYWxzZSwibGFzdFVwZGF0ZWQiOiIyMDIwLTA1LTIxIDE0OjIwOjIwLjIxNiIsImNhc2VOYXJyYXRpdmUiOiJJbmZvcm1hdGlvbiBoYXMgYmVlbiByZWNlaXZlZCBmcm9tIGxhYm9waGFybSBFdXJvcGUgYXMgcGFydCBvZiBidXNpbmVzcyBhZ3JlZW1lbnQgKG1hbnVmYWN0dXJlciBudW1iZXIgR0ItTGFib3BoYXJtdy0wMDIzODUpLiBUaGlzIGNhc2Ugd2FzIG9yaWdpbmFsbHkgcmVwb3J0ZWQgZnJvbSBhbiBhZ2VuY3kgY29uY2VybmluZyBhIDYzIHllYXIgb2xkIG1hbGUgd2l0aCBhc3RobWEsIGVzc2VudGlhbCBoeXBlcnRlbnNpb24gYW5kIGNhcmNpbm9pZCB0dW1vdXIgb2YgdGhlIHByb3N0YXRlIGFuZCBhIHBhc3QgZHJ1ZyBoaXN0b3J5IG9mIHNhbG1ldGVyb2wsIHBlbm5kb3ByaWwgZXJ1YnVtaW5lIGFuZCBiZW5kcm9mbHVtZXRoaWF6aWRlIHdobyBvbiAxMy1TRVAtMjAxMSB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlICh0b3RhbCBkYWlseSBkb3NlIG5vdCByZXBvcnRlZCksIG9uIDE0LVNFUC0yMDExLCB0aGUgcGF0aWVudCB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCAxIGRvc2UgY2Fwc3VsZSwgMSBkb3NlIGZvciB0aGUgdHJlYXRtZW50IG9mIHNjaWF0aWNhICh0b3RhbCBkYWlseSBkb3NlIGFuZCBkdXJhdGlvbiBub3QgcmVwb3J0ZWQpLiBDb25jb21pdGFudCB0aGVyYXB5IGluY2x1ZGVkIGFtaXRyaXB0eWxpbmUgaHlkcm9jaGxvcmlkZSwgYWNldGFtaW5vcGhlbi9jb2RlaW5lIHBob3NwaGF0ZSwgZGljbG9mZW5hYyBzb2RpdW0sIGFjZXRhbWlub3BoZW4gYW5kIGFsYnV0ZXJvbC4gT24gMTQtU0VQLTIwMTEgdGhlIHBhdGllbnQgZXhwZXJpZW5jZWQgcGFscGl0YXRpb25zLCBsaWdodGhlYWRuZXNzIGFuZCBwcnVyaXR1cyBzaG9ydGx5IGFmdGVyIHRha2luZyBzaW5nbGUgdGFibGV0IG9mIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUuIFRoZSBhY3Rpb24gdGFrZW4gd2l0aCByZWdhcmRzIHRvIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlIHdhcyAgdW5rbm93bi4gVGhlIHBhdGllbnQgd2FzIHJlcG9ydGVkIHRvIGJlIHJlY292ZXJpbmcgZnJvbSB0aGUgcGFscGl0YXRpb25zLCBsaWdodGhlYWRuZXNzIGFuZCBwcnVyaXR1cy5cclxuXHJcbiBcclxuVGhlIHJlcG9ydGluZyBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCBjb25zaWRlcmVkIHRoZSBwYWxwaXRhdGlvbnMsIGxpZ2h0aGVhZG5lc3MgYW5kIHBydXJpdHVzIHRvIGJlIG90aGVyIG1lZGljYWwgaW1wb3J0YW50IGV2ZW50cy5cclxuXHJcblxyXG5cclxuIE5vIGZ1cnRoZXIgaW5mb3JtYXRpb24gaXMgYXZhaWxhYmxlIiwiY29uTWVkcyI6ImFtaXRyaXB0eWxpbmUgaHlkcm9jaGxvcmlkZVxyXG5hY2V0YW1pbm9waGVuICgrKSBjb2RlaW5lIHBob3NwaGF0ZVxyXG5kaWNsb2ZlbmFjXHJcbmFjZXRhbWlub3BoZW5cclxuYWxidXRlcm9sIiwicHRMaXN0IjoiUGFscGl0YXRpb25zIChQcmltYXJ5KSFAIyNAIURpenppbmVzcyFAIyNAIVBydXJpdHVzIiwiY2FzZUlkIjo5MzMxNTUsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5MjMsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfSx7ImFsZXJ0Q29uZmlnSWQiOjEyLCJpZCI6MTM1LCJhbGVydE5hbWUiOiJQZXJmX1F1YWxfNlRSQU1BRE9MIEhZRFJPQ0hMT1JJREUgQ2Fwc3VsZSAoUHJvZHVjdCBOYW1lKSIsImNhc2VOdW1iZXIiOiIxMTA5R0JSMDAxNDgiLCJkZXRlY3RlZERhdGUiOiIyMS1NYXktMjAyMCIsImR1ZURhdGUiOiIwNS1KdW4tMjAyMCIsInByb2R1Y3ROYW1lIjoiVFJBTUFET0wgSFlEUk9DSExPUklERSIsInByb2R1Y3RJZCI6MTAwNTg1LCJwdCI6IlNvbW5vbGVuY2UiLCJwcm9kdWN0RmFtaWx5IjoiOTM4NCBPUkFMIiwiZmxhZ2dlZCI6ZmFsc2UsImNhc2VSZXBvcnRUeXBlIjoiU3BvbnRhbmVvdXMiLCJjYXNlSW5pdFJlY2VpcHREYXRlIjoiMjAxMS0wOS0yNlQwMDowMDowMFoiLCJyZXBvcnRlcnNIY3BGbGFnIjoiLSIsIm1hc3RlclByZWZUZXJtQWxsIjoiMSkgU29tbm9sZW5jZVxyXG4yKSBIeXBlcmhpZHJvc2lzXHJcbjMpIEluc29tbmlhIiwiYXNzZXNzT3V0Y29tZSI6IlJlY292ZXJlZC9SZXNvbHZlZCIsImFzc2Vzc0xpc3RlZG5lc3MiOiIiLCJhc3Nlc3NTZXJpb3VzbmVzcyI6IlNlcmlvdXMiLCJzZXJpb3VzIjoiU2VyaW91cyIsInByaW1hcnlFdmVudCI6IlNvbW5vbGVuY2UiLCJvdXRjb21lIjoiUmVjb3ZlcmVkL1Jlc29sdmVkIiwibGlzdGVkbmVzcyI6IlVubGlzdGVkIiwiY291bnRyeSI6IlVOSVRFRCBLSU5HRE9NIiwic3VzcFByb2QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwiY29uQ29taXQiOiJsYW5zb3ByYXpvbGVcclxuYmVjbG9tZXRoYXNvbmUgZGlwcm9waW9uYXRlXHJcbnNhbG1ldGVyb2wgeGluYWZvYXRlXHJcbmFsYnV0ZXJvbCIsImdlbmRlciI6Ik1hbGUiLCJhZ2UiOiIiLCJyZWNoYWxsZW5nZSI6Ik4vQSIsImxvY2tlZERhdGUiOiIiLCJkZWF0aCI6Ik5vIiwiY2FzZVZlcnNpb24iOjMsImR1ZUluIjo5LCJmb2xsb3dVcE51bWJlciI6MCwiZm9sbG93VXBFeGlzdHMiOmZhbHNlLCJleGVjQ29uZmlnSWQiOjE1LCJkaXNwb3NpdGlvbiI6Ik5ldyIsImN1cnJlbnREaXNwb3NpdGlvbiI6Ik5ldyIsImRpc3Bvc2l0aW9uQ2xvc2VTdGF0dXMiOmZhbHNlLCJwcmlvcml0eSI6eyJ2YWx1ZSI6IlVyZ2VudCIsImljb25DbGFzcyI6Im1kaSBtZGktYWxwaGEtdS1jaXJjbGUgcmVkLTEifSwiYXNzaWduZWRUb1VzZXIiOnsiaWQiOjc0MzUsImZ1bGxOYW1lIjoiYmhhZ3lhIiwidXNlcm5hbWUiOiJiaGFneWEiLCJlbWFpbCI6Ik5SLkJoYWd5YWxha3NobWlAcnhsb2dpeC5jb20ifSwiYWN0aW9uQ291bnQiOjAsImNhc2VUeXBlIjoiIiwiY29tcGxldGVuZXNzU2NvcmUiOiIiLCJpbmROdW1iZXIiOiIiLCJhcHBUeXBlQW5kTnVtIjoiIiwiY29tcG91bmRpbmdGbGFnIjoiIiwibWVkRXJyb3JzUHQiOiIiLCJwYXRpZW50QWdlIjoiIiwic3VibWl0dGVyIjoiIiwiaXNWYWxpZGF0aW9uU3RhdGVBY2hpZXZlZCI6ZmFsc2UsImlzUmV2aWV3ZWQiOmZhbHNlLCJsYXN0VXBkYXRlZCI6IjIwMjAtMDUtMjEgMTQ6MjA6MjAuMjE1IiwiY2FzZU5hcnJhdGl2ZSI6IkluZm9ybWF0aW9uIGhhcyBiZWVuIHJlY2VpdmVkIGNvbmNlcm5pbmcgYSAzMyB5ZWFyIG9sZCBtYWxlIHdobyBvbiAxMS1TRVAtMjAxMSB3YXMgcGxhY2VkIG9uIHRoZXJhcHkgd2l0aCB0cmFtYWRvbCBoeWRyb2NobG9yaWRlLCBjYXBzdWxlIGZvciB0aGUgdHJlYXRtZW50IG9mIHNjaWF0aWNhIChkb3NlIG5vdCByZXBvcnRlZCkuIENvbmNvbWl0YW50IHRoZXJhcHkgaW5jbHVkZWQgbGFuc29wcmF6b2xlLCBiZWNsb21ldGhhc29uZSBkaXByb3Bpb25hdGUgKFFWQVIpLCBzYWxtZXRlcm9sIHhpbmFmb2F0ZSBhbmQgYWxidXRlcm9sIChWRU5UT0xJTikuIE9uIDExLVNFUC0yMDExIHRoZSBwYXRpZW50IGV4cGVyaWVuY2VkIGRyb3dzaW5lc3MsIGh5cGVyaGlkcm9zaXMgYW5kIGluc29tbmlhLiBUaGUgcmVwb3J0IHN0YXRlZCBcIlBhdGllbnQgd2FzIHRha2luZyB0cmFtYWRvbCBvcmFsbHkgZm9ybSAxMS1TRVAtMjAxMSBmb3Igc2NpYXRpY2EuIFBhdGllbnQgd2FzIHVuYWJsZSB0byBzbGVlcCAoZGVzcGl0ZSBkcm93c2luZXNzIHdpY2ggd2FzIGFsc28gZXhwZXJpZW5jZWQpIGZvciAyIG5pZ2h0cyAtIHRoZXNlIGhhZCBzZXJpb3VzIGVmZmVjdHMgb24gdGhlIHBhdGllbnQncyBsaWZlIGFuZCB3b3JrIGNvbW1pdG1lbnRzIGFzIHdlbGwgYXMgY2F1c2luZyBkaXN0cmVzcyBhbmQgZmVlbGluZyBvZiBleHRyZW1lIGZhdGlndWVcIi4gT24gMTEtU0VQLTIwMTEgdGhlcmFweSB3aXRoIHRyYW1hZG9sIGh5ZHJvY2hsb3JpZGUgd2FzIGRpc2NvbnRpbnVlZC4gU3Vic2VxdWVudGx5IG9uIHRoZSAxMi1TRVAtMjAxMSwgdGhlIHBhdGllbnQgcmVjb3ZlcmVkIGZyb20gaHlwZXJoaWRyb3Npcy4gU3Vic2VxdWVudGx5IG9uIHRoZSAxMy1TRVAtMjAxMSwgdGhlIHBhdGllbnQgcmVjb3ZlcmVkIGZyb20gaW5zb21uaWEuIFN1YnNlcXVlbnRseSBvbiB0aGUgMTQtU0VQLTIwMTEsIHRoZSBwYXRpZW50IHJlY292ZXJlZCBmcm9tIHRoZSBkcm93c2luZXNzLlxyXG5cclxuVGhlICByZXBvcnRpbmcgaGVhbHRoY2FyZSBwcm9mZXNzaW9uYWwgY29uc2lkZXJlZCB0aGUgZHJvd3NpbmVzcywgaHlwZXJoaWRyb3NpcyBhbmQgaW5zb21uaWEgdG8gYmUgZGlzYWJsaW5nLlxyXG5cclxuTm8gZnVydGhlciBpbmZvcm1hdGlvbiBpcyBhdmFpbGFibGUuIiwiY29uTWVkcyI6ImxhbnNvcHJhem9sZVxyXG5iZWNsb21ldGhhc29uZSBkaXByb3Bpb25hdGVcclxuc2FsbWV0ZXJvbCB4aW5hZm9hdGVcclxuYWxidXRlcm9sIiwicHRMaXN0IjoiU29tbm9sZW5jZSAoUHJpbWFyeSkhQCMjQCFIeXBlcmhpZHJvc2lzIUAjI0AhSW5zb21uaWEiLCJjYXNlSWQiOjEyODI1MTQsImFzc2lnbmVkVG8iOiJiaGFneWEiLCJpc0Nhc2VTZXJpZXNHZW5lcmF0ZWQiOnRydWUsImNvbW1lbnRzIjpudWxsLCJpc0F0dGFjaG1lbnQiOmZhbHNlLCJnbG9iYWxJZCI6MTA5MjIsImJhZGdlIjoiTmV3IiwicHJvZHVjdExpc3QiOiJUUkFNQURPTCBIWURST0NITE9SSURFIiwic2lnbmFsc0FuZFRvcGljcyI6W10sImp1c3RpZmljYXRpb24iOiIiLCJhbGVydFRhZ3MiOltdfV0sImZpbHRlcnMiOlt7InZhbHVlIjoiTmV3IiwiY2xvc2VkIjpmYWxzZSwiaXNDbG9zZWQiOmZhbHNlfV0sImNvbmZpZ0lkIjoxNSwiZnVsbENhc2VMaXN0IjpbeyJjYXNlTnVtYmVyIjoiOTkwODkzMTQiLCJjYXNlVmVyc2lvbiI6MiwiYWxlcnRJZCI6MTg0fSx7ImNhc2VOdW1iZXIiOiI5ODEyOTEwOCIsImNhc2VWZXJzaW9uIjoxLCJhbGVydElkIjoxODN9LHsiY2FzZU51bWJlciI6Ijk2MDM1NTU0IiwiY2FzZVZlcnNpb24iOjEsImFsZXJ0SWQiOjE4Mn0seyJjYXNlTnVtYmVyIjoiMjAwNi0wMi0xMDA4IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE4MH0seyJjYXNlTnVtYmVyIjoiOTMwMjU1MDEiLCJjYXNlVmVyc2lvbiI6MiwiYWxlcnRJZCI6MTgxfSx7ImNhc2VOdW1iZXIiOiIyMDA0LTA1LTA2NDQiLCJjYXNlVmVyc2lvbiI6MywiYWxlcnRJZCI6MTc5fSx7ImNhc2VOdW1iZXIiOiIyMDAzLTExLTAwOTgiLCJjYXNlVmVyc2lvbiI6MiwiYWxlcnRJZCI6MTc4fSx7ImNhc2VOdW1iZXIiOiIyMDAzLTEwNTAxNy1OTCIsImNhc2VWZXJzaW9uIjoyLCJhbGVydElkIjoxNzd9LHsiY2FzZU51bWJlciI6IjIwMDMtMTAtMTE2OSIsImNhc2VWZXJzaW9uIjozLCJhbGVydElkIjoxNzZ9LHsiY2FzZU51bWJlciI6IjIwMDMtMDctMTg0NCIsImNhc2VWZXJzaW9uIjoyLCJhbGVydElkIjoxNzV9LHsiY2FzZU51bWJlciI6IjIwMDMtMDUtMDE0NiIsImNhc2VWZXJzaW9uIjoyLCJhbGVydElkIjoxNzR9LHsiY2FzZU51bWJlciI6IjIwMDMtMDItMzEzNCIsImNhc2VWZXJzaW9uIjoyLCJhbGVydElkIjoxNzN9LHsiY2FzZU51bWJlciI6IjIwMDItMDYtMTY2NyIsImNhc2VWZXJzaW9uIjozLCJhbGVydElkIjoxNzJ9LHsiY2FzZU51bWJlciI6IjIwMDEtMDItMDM1OCIsImNhc2VWZXJzaW9uIjoyLCJhbGVydElkIjoxNzB9LHsiY2FzZU51bWJlciI6IjIwMDItMDItMDE0OCIsImNhc2VWZXJzaW9uIjoyLCJhbGVydElkIjoxNzF9LHsiY2FzZU51bWJlciI6IjIwMDAtMDgtMTMwNSIsImNhc2VWZXJzaW9uIjozLCJhbGVydElkIjoxNjl9LHsiY2FzZU51bWJlciI6IjE2MTJOTEQwMDI1MTYiLCJjYXNlVmVyc2lvbiI6MiwiYWxlcnRJZCI6MTY4fSx7ImNhc2VOdW1iZXIiOiIxNTEyTkxEMDEyOTU5IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE2N30seyJjYXNlTnVtYmVyIjoiMTMwOFBSVDAwNjU2NiIsImNhc2VWZXJzaW9uIjozLCJhbGVydElkIjoxNjZ9LHsiY2FzZU51bWJlciI6IjEzMDhHQlIwMDg1OTMiLCJjYXNlVmVyc2lvbiI6MywiYWxlcnRJZCI6MTY1fSx7ImNhc2VOdW1iZXIiOiIxMzAxVVNBMDAxNzkxIiwiY2FzZVZlcnNpb24iOjgsImFsZXJ0SWQiOjE2NH0seyJjYXNlTnVtYmVyIjoiMTIwNFVTQTAzOTUwIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE2M30seyJjYXNlTnVtYmVyIjoiMTIwNFVTQTAzMjg3IiwiY2FzZVZlcnNpb24iOjYsImFsZXJ0SWQiOjE2Mn0seyJjYXNlTnVtYmVyIjoiMTIwM0dCUjAwMTA1IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE2MX0seyJjYXNlTnVtYmVyIjoiMTIwM0dCUjAwMTAwIiwiY2FzZVZlcnNpb24iOjUsImFsZXJ0SWQiOjE2MH0seyJjYXNlTnVtYmVyIjoiMTIwMkdCUjAwMDQ5IiwiY2FzZVZlcnNpb24iOjEsImFsZXJ0SWQiOjE1OX0seyJjYXNlTnVtYmVyIjoiMTIwMkdCUjAwMDQ1IiwiY2FzZVZlcnNpb24iOjEsImFsZXJ0SWQiOjE1OH0seyJjYXNlTnVtYmVyIjoiMTIwMkdCUjAwMDI2IiwiY2FzZVZlcnNpb24iOjgsImFsZXJ0SWQiOjE1N30seyJjYXNlTnVtYmVyIjoiMTIwMkdCUjAwMDE3IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE1Nn0seyJjYXNlTnVtYmVyIjoiMTIwMkdCUjAwMDA4IiwiY2FzZVZlcnNpb24iOjEsImFsZXJ0SWQiOjE1NX0seyJjYXNlTnVtYmVyIjoiMTIwMkdCUjAwMDA3IiwiY2FzZVZlcnNpb24iOjEsImFsZXJ0SWQiOjE1NH0seyJjYXNlTnVtYmVyIjoiMTIwMVVTQTAyMjkzIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE1M30seyJjYXNlTnVtYmVyIjoiMTIwMVVTQTAyMjQwIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE1Mn0seyJjYXNlTnVtYmVyIjoiMTIwMVVTQTAyMTY1IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE1MX0seyJjYXNlTnVtYmVyIjoiMTIwMVVTQTAyMTYxIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE1MH0seyJjYXNlTnVtYmVyIjoiMTIwMUdCUjAwMDczIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE0OX0seyJjYXNlTnVtYmVyIjoiMTIwMUdCUjAwMDQ0IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE0OH0seyJjYXNlTnVtYmVyIjoiMTExMkdCUjAwMDcwIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE0N30seyJjYXNlTnVtYmVyIjoiMTExMkdCUjAwMDM0IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE0Nn0seyJjYXNlTnVtYmVyIjoiMTExMkdCUjAwMDIzIiwiY2FzZVZlcnNpb24iOjIsImFsZXJ0SWQiOjE0NX0seyJjYXNlTnVtYmVyIjoiMTExMkdCUjAwMDIxIiwiY2FzZVZlcnNpb24iOjUsImFsZXJ0SWQiOjE0NH0seyJjYXNlTnVtYmVyIjoiMTExMUdCUjAwMDgxIiwiY2FzZVZlcnNpb24iOjQsImFsZXJ0SWQiOjE0M30seyJjYXNlTnVtYmVyIjoiMTExMUdCUjAwMDcxIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE0Mn0seyJjYXNlTnVtYmVyIjoiMTExMEdCUjAwMDg5IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjE0MX0seyJjYXNlTnVtYmVyIjoiMTExMEdCUjAwMDYzIiwiY2FzZVZlcnNpb24iOjQsImFsZXJ0SWQiOjE0MH0seyJjYXNlTnVtYmVyIjoiMTExMEdCUjAwMDYyIiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjEzOX0seyJjYXNlTnVtYmVyIjoiMTExMEdCUjAwMDExIiwiY2FzZVZlcnNpb24iOjQsImFsZXJ0SWQiOjEzOH0seyJjYXNlTnVtYmVyIjoiMTEwOUdCUjAwMTYxIiwiY2FzZVZlcnNpb24iOjQsImFsZXJ0SWQiOjEzN30seyJjYXNlTnVtYmVyIjoiMTEwOUdCUjAwMTQ5IiwiY2FzZVZlcnNpb24iOjUsImFsZXJ0SWQiOjEzNn0seyJjYXNlTnVtYmVyIjoiMTEwOUdCUjAwMTQ4IiwiY2FzZVZlcnNpb24iOjMsImFsZXJ0SWQiOjEzNX1dfQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>